{"version":3,"sources":["Pages/Login.js","Components/DailySummary.js","Pages/Home.js","Pages/Profile.js","Pages/Edit.js","Pages/FoodItem.js","Components/FoodForm.js","Pages/AddFood.js","Components/EditDailyIntake.js","Pages/DailyIntake.js","Pages/index.js","Routes.js","Components/Nav.js","App.js","serviceWorker.js","Reducers/rootReducers.js","Reducers/userReducer.js","Reducers/foodReducer.js","index.js"],"names":["Login","state","username","password","name","age","image","gender","height","weight","goalCalorie","errors","loginOn","loginForm","className","onSubmit","handleLoginSubmit","htmlFor","type","id","value","onChange","handleChange","signupForm","handleSignupSubmit","event","setState","target","handleClick","preventDefault","fetch","method","headers","body","JSON","stringify","then","res","json","userData","localStorage","setItem","token","console","log","props","setUser","current_user","history","push","error","goal_calorie","this","onClick","Component","connect","user","dispatch","userObject","payload","DailySummary","Home","useSelector","class","to","Profile","goal_carbs","goal_fat","goal_protein","goal_sugar","src","alt","clear","Edit","handleClose","handleEditSubmit","FoodItem","food","calorie","carb","sugar","fat","serving_size","protein","FoodForm","serving","mealType","date","Date","toLocaleDateString","foodView","e","foodItem","handleSubmit","user_id","food_id","meal_type","setTimeout","withRouter","clearUser","AddFood","searchValue","foodForm","foodsData","getFoods","searchedFoods","foods","filter","toLowerCase","includes","map","key","foodObject","EditDailyIntake","intake","DailyIntake","editForm","dailyIntake","dailyIntakes","handleDeleteClick","dailyIntakeItem","newArray","handleEditForm","handleDateClick","fetchDailyIntake","config","Authorization","dailyIntakeItems","newIntakes","changed_date","handleDateChange","newItem","intakeItem","match","params","totals","carbs","servings","calories","length","forEach","i","total_protein","total_sugar","total_carbs","total_fat","total_calories","remaining","total","width","style","border","toFixed","Routes","exact","path","component","Pages","Nav","App","clearToken","logOut","React","Boolean","window","location","hostname","combineReducers","store","createStore","rootReducers","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.46638c2e.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\n\n\nclass Login extends Component {\n state = {\n   \n     username: '',\n     password: '',\n     name: '',\n     age: null,\n     image: \"https://images.unsplash.com/photo-1549297161-14f79605a74c?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\",\n     gender: \"\",\n     height: null,\n     weight: null,\n     goalCalorie: null,\n     errors: '', \n     loginOn: true\n }\n\nloginForm = () => {\n  return ( \n        \n         <form  className=\"inputs\" onSubmit={this.handleLoginSubmit}>\n           \n           <label htmlFor=\"username\">\n              <span>Username</span>\n             <input type=\"text\"\n                  id=\"username\"\n                  value={this.state.username}\n                  name=\"username\"\n                  onChange={this.handleChange}\n             />\n            </label>\n            <label htmlFor=\"password\">\n              <span>Password :</span>\n              <input type=\"password\"\n                    id=\"password\"\n                    value={this.state.password}\n                    name=\"password\"\n                    onChange={this.handleChange}\n              />\n            </label>\n            <input type=\"submit\" id=\"submit\"/>\n          </form>)\n}\n\nsignupForm = () => {\n  return (\n   \n    <form  className=\"inputs\" onSubmit={this.handleSignupSubmit}>\n    <label htmlFor=\"name\">\n     <span> Name :</span>\n       <input \n         id=\"name\"\n         name=\"name\"\n         value={this.state.name}\n         type=\"text\"\n         onChange={this.handleChange}\n       />\n    </label>\n    <label htmlFor=\"username\">\n     <span> Username :</span> \n       <input \n         id=\"username\"\n         name=\"username\"\n         value={this.state.username}\n         type=\"text\"\n         onChange={this.handleChange}\n       />\n    </label>\n    <label htmlFor=\"age\">\n      <span>Age: </span>\n       <input \n         name=\"age\"\n         id=\"age\"\n         age=\"age\"\n         value={this.state.age}\n         type=\"number\"\n         onChange={this.handleChange}\n       />\n    </label>\n    <label htmlFor=\"image\"> \n    <span>Image :</span>\n        <input \n          id=\"image\"\n          name=\"image\"\n          value={this.state.image}\n          type=\"text\"\n          onChange={this.handleChange}\n        />\n    </label>\n    <label htmlFor=\"gender\">\n      <span>Gender :</span>\n      <select name=\"gender\" id=\"gender\"\n      onChange={this.handleChange}>\n        <option> Select</option>\n         <option value=\"Female\">Female</option>\n         <option value=\"Male\">Male</option>\n         <option value=\"Prefered not to say\">Prefered not to say</option>\n      </select>\n    </label>\n    <label htmlFor=\"weight\" >\n      <span>Weight : </span>\n       <input \n         id=\"weight\"\n         name=\"weight\"\n         value={this.state.weight}\n         type=\"number\"\n         onChange={this.handleChange}\n       />\n    </label>\n    <label htmlFor=\"height\">\n      <span>Height : </span>\n       <input \n         id=\"height\"\n         name=\"height\"\n         value={this.state.height}\n         type=\"float\"\n         onChange={this.handleChange}\n       />\n    </label>\n    <label htmlFor=\"goalCalorie\" >\n      <span>Daily goal calorie : </span>\n       <input \n         id=\"goalCalorie\"\n         name=\"goalCalorie\"\n         value={this.state.goalCalorie}\n         type=\"number\"\n         onChange={this.handleChange}\n       />\n    </label>\n    <label htmlFor=\"password\" >\n      <span>Password : </span>\n       <input \n         id=\"password\"\n         name=\"password\"\n         value={this.state.password}\n         type=\"password\"\n         onChange={this.handleChange}\n       />\n    </label>\n    <input type=\"submit\" id=\"submit\"/>\n    </form>\n  )\n}\n\nhandleChange = (event) => {\n  // console.log(event.target.value)\n  this.setState({\n    [event.target.name] : event.target.value\n  })\n}\n\nhandleClick = ()=>{\n  this.setState({\n    loginOn: !this.state.loginOn\n  })\n}\n\nhandleLoginSubmit = (event) => {\n\n   event.preventDefault()\n  //  debugger\n   fetch('https://nutritrack.herokuapp.com/login', {\n     method: 'POST',\n     headers: {\n       \"Content-Type\" : \"application/json\",\n       \"Accept\" : \"application/json\"\n     }, \n     body: JSON.stringify({\n       username: this.state.username,\n       password: this.state.password\n     })\n   })\n   .then(res => res.json())\n   .then(userData =>{\n     localStorage.setItem('token', userData.token)\n     console.log(userData)\n      if(userData.token){\n        this.props.setUser(userData.current_user)\n        this.props.history.push(`/`)\n\n      }  else {\n        this.setState({\n          errors: userData.error\n        })\n      }\n   })\n}\n\nhandleSignupSubmit = (event) => {\n  event.preventDefault()\n  fetch(\"https://nutritrack.herokuapp.com/signup\", {\n    method: \"POST\",\n    headers: {\n      'Content-Type':\"application/json\",\n      \"Accept\":\"application/json\"\n    },\n    body: JSON.stringify({\n      name: this.state.name,\n      username: this.state.username,\n      age: this.state.age,\n      gender: this.state.gender,\n      weight: this.state.weight,\n      height: this.state.height,\n      goal_calorie: this.state.goalCalorie,\n      password: this.state.password,\n      image: this.state.image\n    })\n  })\n  .then(res => res.json())\n  .then(userData => {\n    // console.log(userData)\n    localStorage.setItem('token', userData.token)\n    if(userData.token){\n      // debugger\n      this.props.setUser(userData.current_user)\n      this.props.history.push(`/`)\n    }  else {\n      this.setState({\n        errors: userData.error\n       \n      })\n    }\n  })\n}\n\n render() {\n//  console.log(this.props.history)\n  //  console.log(this.props.current_user)\n  return(\n    <div className=\"login-container\">\n   <div className=\"login-form\">\n    {\n      this.state.errors\n    }\n  \n    <p>{this.state.loginOn ? \n      \"Don't have an account yet?\" : \n      \"I have an account\" } \n      <b onClick={this.handleClick}>\n      { this.state.loginOn ? \n        <span>Sign Up!</span>: \n        <span>Login!</span> }\n        </b>\n       </p>\n    {\n      this.state.loginOn ? \n      this.loginForm()\n     :\n      this.signupForm()\n    }\n   </div>\n   </div>\n    )\n   }\n }\n\n const mapDispatchToProps = (dispatch) =>{\n  return {\n    setUser: (userObject) => {\n      dispatch({\n          type: 'SET_USER', payload: userObject\n        })\n    }\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    current_user: state.user\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Login)","import React, { Component } from 'react'\n\nclass DailySummary extends Component {\n\n render() {\n    //  console.log(this.props)\n  return(\n   <div className=\"daily-summary shadow\">\n       \n      <q>It is health that is real wealth and not pieces of gold and silver.<cite>  -Mahatma Gandhi</cite></q>\n   \n   </div>\n    )\n   }\n }\n\n\n\nexport default DailySummary","import React  from 'react'\nimport { useSelector } from 'react-redux'\nimport DailySummary from '../Components/DailySummary'\nimport { Link} from 'react-router-dom'\n\n\nfunction  Home(){\n\n  const current_user = useSelector(state => {\n    return state.user\n})\n\n\nconst renderingHome = () =>{\n  if(current_user.id){\n    return (\n    <>\n    <DailySummary user={current_user}/>\n    </>\n    ) \n  }else {\n      return (<>\n      <h2 id=\"greeting\">Welcome to NutriTrack</h2>\n      <div class=\"login-message\">\n      <p>Start free!</p>\n      <Link to=\"/login\"> Login </Link>\n      </div>\n      </>\n      )\n    }\n  }\n\n    // debugger\n    return (\n    <div id=\"home\">\n      {/* <h2>Welcome {current_user ? current_user.username : null} </h2>\n     */}\n    {renderingHome()}\n      \n    </div>\n      )\n   \n    }\n\n\nexport default Home\n\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\n\nfunction  Profile(){\n\nconst current_user = useSelector(state => {\n    // debugger \n    return state.user\n})\n// console.log(localStorage.token)\n// console.log(current_user.user)\n\n\n\nconst deleteUser = () => {\n  // console.log('delete user')\n  fetch(`https://nutritrack.herokuapp.com/users/${current_user.id}`, \n  {\n    method: 'DELETE'\n  })\n  .then(\n    localStorage.clear()\n  )\n}\n\nif(current_user.id) {\n\n  const {username, name, age, weight, height, goal_calorie, gender, image, goal_carbs, goal_fat, goal_protein, goal_sugar} = current_user\n  return(\n    \n    <div className=\"profile-div\"> \n      <div className=\"img-div\">\n      \n        <img className=\"profile-image\" src={image} alt=\"name\"/>\n        </div>\n        <div className=\"clear\"></div>\n        <div className=\"info-div\">\n       \n        <ul>\n         <li><span className=\"bold\">Name :</span> {name}</li>\n         <li><span className=\"bold\">Username : </span>{username}</li>\n         <li><span className=\"bold\">Age :</span> {age} </li>\n         <li><span className=\"bold\">Gender :</span> {gender}</li>\n         <li><span className=\"bold\">Height :</span> {height} </li>\n         <li><span className=\"bold\">Weight :</span> {weight} </li>\n         <li><span className=\"bold\">Daily calorie goal :</span> {goal_calorie} </li> \n         <li><span className=\"bold\">Daily carbs goal :</span> {goal_carbs}</li>\n         <li><span className=\"bold\">Daily fat goal :</span> {goal_fat}</li>\n         <li><span className=\"bold\">Daily protein goal :</span> {goal_protein}</li>\n         <li><span className=\"bold\">Daily sugar goal :</span> {goal_sugar}</li>\n         <Link to=\"/edit\" className=\"edit\"> Edit Profile!</Link>\n         <Link to='/login' className=\"delete-profile\" onClick={deleteUser}>Delete Profile</Link>\n        \n        </ul>\n        </div>\n    </div>\n     )\n}\n return (\n      <>\n      <h3>\n       No user\n      </h3>\n      </>\n   )\n   \n  }\n  \n\n\n\nexport default Profile","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\n\n\nclass Edit extends Component {\n   \n    \n    \n state = {\n     errors: ''\n }\n\n static getDerivedStateFromProps(props, state) {\n     if(state.id !== props.current_user.id) {\n        return props.current_user\n     }\n }\n\n handleClose =()=>{\n   this.props.history.push('/profile')\n }\n\n handleChange = (event) => {\n    console.log(event.target.value)\n\n    this.setState({\n      [event.target.name] : event.target.value\n    })\n  }\n\n  handleEditSubmit = (event) => {\n    // debugger\n    event.preventDefault()\n   //  debugger\n    fetch(`https://nutritrack.herokuapp.com/users/${this.props.current_user.id}`, {\n      method: 'PATCH',\n      headers: {\n        \"Content-Type\" : \"application/json\",\n        \"Accept\" : \"application/json\"\n      }, \n      body: JSON.stringify({\n        name: this.state.name,\n        username: this.state.username,\n        gender: this.state.gender,\n        age: this.state.age,\n        weight: this.state.weight,\n        height: this.state.height,\n        goal_calorie: this.state.goal_calorie,\n        image: this.state.image,\n        goal_carbs: this.state.goal_carbs,\n        goal_fat: this.state.goal_fat,\n        goal_sugar: this.state.goal_sugar,\n        goal_protein: this.state.goal_protein\n      })\n    })\n    .then(res => res.json())\n    .then(userData =>{\n    //   localStorage.setItem('token', userData.token)\n      console.log(userData)\n       if(userData){\n        // debugger\n         this.props.setUser(userData)\n         this.props.history.push(`/profile`)\n \n       }  else {\n         this.setState({\n           errors: userData.error[0]\n         })\n       }\n    })\n    \n }\n render(){\n    // console.log(\"state ------\", this.state)\n    //  console.log(this.props.current_user)\n   \n  const {name, username, age, weight, height, goal_calorie, goal_carbs, goal_fat, goal_sugar, goal_protein, image} = this.state\n  console.log(this.state)\n  return(\n      <>\n      <div className=\"edit-profile-div\">\n       \n      {this.props.current_user.id  ? \n     \n        <div className=\"edit-profile\">\n    <button className=\"close\" onClick={this.handleClose}> ❌ </button>\n    <form className=\"inputs\" onSubmit={this.handleEditSubmit}>\n    <label htmlFor=\"name\">\n      <span>Name :</span>\n       <input \n         id=\"name\"\n         name=\"name\"\n         value={name}\n         type=\"text\"\n         onChange={this.handleChange}\n       />\n    </label>\n    <label htmlFor=\"username\">\n      <span>Username : </span>\n       <input \n         id=\"username\"\n         name=\"username\"\n         value={username}\n         type=\"text\"\n         onChange={this.handleChange}\n       />\n    </label>\n    <label htmlFor=\"age\">\n     <span> Age: </span>\n       <input \n         name=\"age\"\n         id=\"age\"\n         age=\"age\"\n         value={age}\n         type=\"number\"\n         onChange={this.handleChange}\n       />\n    </label>\n    <label htmlFor=\"image\">\n      <span>Image :</span>\n        <input \n          id=\"image\"\n          name=\"image\"\n          value={image}\n          type=\"text\"\n          onChange={this.handleChange}\n        />\n    </label>\n    <label htmlFor=\"gender\">\n      <span>Gender :</span>\n      <select name=\"gender\" id=\"gender\"\n      onChange={this.handleChange}>\n        <option> Select</option>\n         <option value=\"Female\">Female</option>\n         <option value=\"Male\">Male</option>\n         <option value=\"Prefered not to say\">Prefered not to say</option>\n      </select>\n    </label>\n    <label htmlFor=\"weight\" >\n      <span>Weight :</span> \n       <input \n         id=\"weight\"\n         name=\"weight\"\n         value={weight}\n         type=\"number\"\n         onChange={this.handleChange}\n       />\n    </label>\n    <label htmlFor=\"height\">\n      <span>Height : </span>\n       <input \n         id=\"height\"\n         name=\"height\"\n         value={height}\n         type=\"float\"\n         onChange={this.handleChange}\n       />\n    </label>\n    <label htmlFor=\"goalCalorie\" >\n      <span>Daily goal calorie : </span>\n       <input \n         id=\"goalCalorie\"\n         name=\"goal_calorie\"\n         value={goal_calorie}\n         type=\"number\"\n         onChange={this.handleChange}\n       />\n    </label>\n\n    <label htmlFor=\"goalCarbs\" >\n      <span>Daily carbs goal : </span>\n       <input \n         id=\"goalCarbs\"\n         name=\"goal_carbs\"\n         value={goal_carbs}\n         type=\"float\"\n         onChange={this.handleChange}\n       />\n    </label>\n\n    <label htmlFor=\"goalFat\" >\n      <span>Daily fat goal : </span>\n       <input \n         id=\"goalFat\"\n         name=\"goal_fat\"\n         value={goal_fat}\n         type=\"float\"\n         onChange={this.handleChange}\n       />\n    </label>\n   \n    <label htmlFor=\"goalSugar\" >\n      <span>Daily sugar goal :</span> \n       <input \n         id=\"goalSugar\"\n         name=\"goal_sugar\"\n         value={goal_sugar}\n         type=\"float\"\n         onChange={this.handleChange}\n       />\n    </label>\n\n    <label htmlFor=\"goalProtein\" >\n      <span>Daily protein goal : </span>\n       <input \n         id=\"goalProtein\"\n         name=\"goal_protein\"\n         value={goal_protein}\n         type=\"float\"\n         onChange={this.handleChange}\n       />\n    </label>\n    \n  \n    <input type=\"submit\" id=\"submit\"/>\n    </form>\n   </div> : null\n     }\n     </div>\n     </>\n   \n    )\n   }\n }\n\n\n\n const mapDispatchToProps = (dispatch) =>{\n    return {\n      setUser: (userObject) => {\n        dispatch({\n            type: 'SET_USER', payload: userObject\n          })\n      }\n    }\n  }\n  \n  const mapStateToProps = (state) => {\n    return {\n      current_user: state.user\n    }\n  }\n  \n  \n  export default connect(mapStateToProps, mapDispatchToProps) (Edit)","import React from 'react'\n// import {Link} from 'react-router-dom'\n\nconst  FoodItem = (props) => {\nconst {name, calorie, carb, sugar, fat, serving_size, protein} = props.food\n    console.log(props)\n  return(\n    <div className=\"food-item\"> \n       \n        <ul>\n          \n            <li> <span>Name :</span> { name } </li>\n            <li> <span>Calories :</span>{ calorie } </li>\n            <li> <span>Carbs :</span> { carb } </li>\n            <li> <span>Sugar :</span>{ sugar } </li>\n            <li> <span>Fat :</span> { fat } </li>\n            <li> <span>Protein :</span> { protein } </li>\n            <li> <span>Serving Size :</span>{ serving_size } gr </li>\n            <button  className=\"x\"onClick={props.handleClick}> <span> ❌ </span></button>\n        </ul>\n    </div>\n   )\n\n }\n\nexport default FoodItem","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport FoodItem from \"../Pages/FoodItem\"\nimport { withRouter } from 'react-router-dom'\n\n\n\n\nclass FoodForm extends Component {\n\n   \n    state={\n        serving: null,\n        mealType: \"\",\n        date: new Date().toLocaleDateString(),\n        foodView: false,\n        food: {}\n        \n    }\n\n    handleChange = (e) => {\n        console.log(e.target.name, e.target.value)\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleClick = (foodItem) => {\n        this.setState({\n            foodView: !this.state.foodView, \n            food: foodItem\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        console.log('submit')\n      \n        fetch('https://nutritrack.herokuapp.com/daily_intakes', {\n            method: 'POST',\n            headers: {\n                'Content-Type': \"application/json\",\n                'Accept':'application/json'\n            },\n            body: JSON.stringify({\n                user_id: this.props.current_user.id,\n                food_id: this.props.food.id,\n                meal_type: this.state.mealType,\n                serving: this.state.serving,\n                date: this.state.date\n\n            })\n        })\n        .then(res => res.json())\n        .then(user => {\n            console.log(user)\n            this.props.setUser(user)\n            setTimeout(() => {\n                this.props.history.push(`/daily-intake/${this.state.date}`)\n            }, 50)\n        })\n        // .then( this.props.history.push('/daily-intake'))\n        \n    }\n\n\n    render() {\n       \n        console.log(this.state.date)\n   \n        // console.log(this.state.serving)\n        const {name} = this.props.food\n        return(\n            <div className=\"background-for-z-index\">\n            <div className=\"food-form\" > \n    \n        \n                     <h3 className=\"food-name\">{ name }</h3>\n                     <form onSubmit={this.handleSubmit}>\n                         <label htmlFor=\"serving\"> <span className=\"serving\"> Servings of </span></label> \n                            <input \n                                id=\"serving\"\n                                name=\"serving\"\n                                type=\"number\"\n                                onChange={this.handleChange}\n                                value={this.state.serving}\n                            />\n                            <input\n                                type=\"hidden\" \n                                id=\"user\"\n                                name=\"userId\"\n                            />\n                            <input\n                                type=\"hidden\" \n                                id=\"food\"\n                                name=\"foodId\"\n                            />\n                        <label htmlFor=\"date\">\n                            <span className=\"date\">Date</span>\n                             <input \n                                type=\"date\"\n                                id=\"date\"\n                                name='date'\n                                value={this.state.date}\n                                onChange={this.handleChange}\n                             />\n                        </label>\n                         <label htmlFor=\"mealType\"> <span className=\"meal-type\">Meal Type</span> </label>\n                           <select id=\"mealType\" name=\"mealType\" onChange={this.handleChange}>\n                                <option name=\"\"></option>\n                                <option value=\"breakfast\">Breakfast</option>\n                                <option value=\"lunch\">Lunch</option>\n                                <option value=\"dinner\">Dinner</option>\n                                <option value=\"snack\">Snack</option>\n                           </select>\n                           <input className=\"add-your-diary\" type=\"submit\" value=\"Add to your diary!\" />\n                     </form>\n                    <button className=\"x\" onClick={this.props.handleClick}> <span > ❌ </span></button>\n                    <button className=\"nutrition-info-button\" onClick={() => this.handleClick(this.props.food)}> See nutrition info </button>\n                    {\n                        this.state.foodView ? \n                        <FoodItem food={this.state.food} handleClick={this.handleClick} /> : \n                        null\n                    }\n            \n            </div>\n            </div>\n           )\n    }\n  \n\n }\n const mapDispatchToProps = (dispatch) =>{\n    return {\n     setUser: (userObject) => {\n       dispatch({\n           type: 'SET_USER', payload: userObject\n         })\n     }, \n     clearUser: () => {\n      dispatch({\n        type: 'CLEAR_USER'\n      })\n     }\n   }\n   }\n   \n   const mapStateToProps = (state) => {\n   return {\n     current_user: state.user\n   }\n   }\n   \n   \n   export default withRouter(connect(mapStateToProps, mapDispatchToProps)(FoodForm))\n\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport FoodForm from '../Components/FoodForm'\n\nclass AddFood extends Component {\n state = {\n     searchValue:\"\",\n     foodForm: false,\n     food: {}\n }\n\n handleChange = (e) => {\n     console.log(e.target.value)\n     this.setState({\n         searchValue: e.target.value\n         \n     })\n\n }\n\n handleClick = (foodItem) => {\n     console.log('click')\n     this.setState({\n         foodForm: !this.state.foodForm,\n         food: foodItem\n     })\n }\n\n componentDidMount(){\n    fetch('https://nutritrack.herokuapp.com/foods')\n    .then(res=>res.json())\n    .then(foodsData => {\n        // console.log(foodsData)\n        this.props.getFoods(foodsData)\n    })\n}\n\n\n//  searchedFoods = () =>{\n//    if ( this.props.foods ) {\n//        return this.props.foods.filter(food => {\n//            if(this.state.searchValue !== \"\"){\n//                return food.name.toLowerCase().includes(this.state.searchValue.toLocaleLowerCase())\n//            }\n//        })\n//    } else {\n//        return  <> <p>No food</p></>\n//    }\n//  }\n\n\n render() {\n\n// console.log(this.state.foodView, this.state.food)\n// console.log(this.state.searchValue)\n// console.log(this.props.foods)\n// console.log(this.props)\n\n   const searchedFoods = \n        this.props.foods.filter(food => {\n    //    debugger\n         if (this.state.searchValue !== \"\"){\n            return food.name.toLowerCase().includes(this.state.searchValue.toLowerCase())\n         } \n   })\n  return(\n   <div className=\"add-food-div\" >\n       <form className=\"add-food-form\">\n           <label>\n               Search\n           </label>\n          <input className=\"add-food-input\" type=\"text\" onChange={this.handleChange}/>\n\n       </form>\n\n       <ul className=\"foods\">\n\n\n            {    this.props.foods ?\n                searchedFoods.map(food => {\n                    return <li key={food.id} onClick={() => this.handleClick(food)}>\n                        {food.name}\n                    </li>\n                }) : \"Foods are loading...\"\n            }\n            \n       </ul>\n\n       {\n           this.state.foodForm ? \n           <>\n                    <FoodForm food={this.state.food} handleClick={this.handleClick} />\n                \n           </> : \n           <>\n           </>\n       }\n\n\n   </div>\n    )\n   }\n }\n\n const mapDispatchToProps = (dispatch) =>{\n    return {\n      getFoods: (foodObject) => {\n        dispatch({\n            type: 'GET_FOODS', payload: foodObject\n          })\n      }\n    }\n  }\n  \n  const mapStateToProps = (state) => {\n    return {\n     foods: state.foods\n    }\n  }\n  \n\n  export default connect(mapStateToProps, mapDispatchToProps) (AddFood)","import React, { Component } from 'react'\n\nclass  EditDailyIntake extends Component {\n state = {}\n render() {\n\n  console.log(this.props)\n  return(\n    <div className=\"background-for-z-index\">\n   <div className=\"edit-daily-intake\">\n   \n   <button onClick={this.props.handleClick}className=\"x\"> ❌ </button>\n  \n       <form onSubmit={this.props.handleEditSubmit}>\n          <h3>{this.props.intake.food.name}</h3>\n          <label htmlFor=\"serving\"> Servings of </label> \n            <input \n                id=\"serving\" \n                name=\"serving\"\n                type=\"number\"\n                onChange={this.props.handleChange}\n                \n            />\n          \n           <label htmlFor=\"mealType\"> Meal Type </label>\n             <select id=\"mealType\" name=\"mealType\" onChange={this.props.handleChange}>\n                <option name=\"\"></option>\n                <option value=\"breakfast\">Breakfast</option>\n                <option value=\"lunch\">Lunch</option>\n                <option value=\"dinner\">Dinner</option>\n                <option value=\"snack\">Snack</option>\n             </select>\n             <input type=\"submit\" value=\"Add to your diary!\" className=\"add-your-diary\"/>\n            \n        </form>\n   </div>\n   </div>\n    )\n   }\n }\n\n\n\n\nexport default EditDailyIntake\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport EditDailyIntake from '../Components/EditDailyIntake'\n\nclass DailyIntake extends Component {\n state = {\n   editForm: false, \n   dailyIntake: {},\n   serving: null,\n   mealType: \"\", \n   dailyIntakes: [],\n   date: new Date().toLocaleDateString()\n }\n\n\n\n\nhandleDeleteClick = (e, dailyIntakeItem) => {\n   console.log(dailyIntakeItem)\n   fetch(`https://nutritrack.herokuapp.com/daily_intakes/${dailyIntakeItem.id}`, {\n         method: 'DELETE'\n       }).then(res => {\n         const newArray = this.state.dailyIntakes.filter(dailyIntake =>{\n           return dailyIntake.id !== dailyIntakeItem.id\n          })\n          this.setState({\n           dailyIntakes: newArray\n         })\n       })\n     \n}\n\nhandleEditForm = () =>{\n  this.setState({\n    editForm: false\n  })\n}\n\n\nhandleClick = (e, dailyIntakeItem) => {\n//  console.log(dailyIntakeItem)\n this.setState({\n   editForm: !this.state.editForm,\n   dailyIntake: dailyIntakeItem,\n   serving: dailyIntakeItem.serving,\n   mealType: dailyIntakeItem.meal_type\n })\n}\n\nhandleDateClick = () =>{\n  this.setState({\n    date: new Date().toLocaleDateString() \n  })\n  const date = new Date().toLocaleDateString()\n  this.fetchDailyIntake()\n  this.props.history.push(`/daily-intake/${date}`)\n}\n\ncomponentDidMount(){\n  this.fetchDailyIntake()\n  const date = this.props.match.params.date \n  if ( date ) {\n    this.setState({\n      date: date\n    })\n  } else {\n    this.setState({\n      date: new Date().toLocaleDateString()\n    })\n  }\n  // debugger\n}\n\nfetchDailyIntake =  () => {\n  const config = {\n    method: 'GET',\n    headers: {\n      Authorization: localStorage.token\n    }\n  }\n  fetch('https://nutritrack.herokuapp.com/daily_intakes', config)\n  .then(res => res.json())\n  .then(dailyIntakeItems => {\n    // console.log(dailyIntakeItems)\n    \n   const newIntakes = dailyIntakeItems.filter(dailyIntake => {\n     if (this.state.date === new Date().toLocaleDateString()) {\n       return dailyIntake.changed_date === this.state.date\n      } else {\n        return  dailyIntake.date === this.state.date\n      }\n   })\n        this.setState({\n          dailyIntakes: newIntakes\n        })\n \n  })\n}\n\nhandleChange = (e) =>{\n  // console.log(e.target.value)\n  this.setState({\n    [e.target.name]: e.target.value\n  })\n}\n\nhandleDateChange = (e) => {\n  console.log(e.target.value)\n  this.setState({\n    [e.target.name]: e.target.value\n  })\n  this.fetchDailyIntake()\n \n  this.props.history.push(`/daily-intake/${e.target.value}`)\n}\n\nhandleEditSubmit = (e) => {\n  e.preventDefault()\n  // console.log('submit')\n  fetch(`https://nutritrack.herokuapp.com/daily_intakes/${this.state.dailyIntake.id}`, {\n    method: 'PATCH', \n    headers: {\n      'Content-Type': 'application/json',\n      'Accept':'application/json'\n    },\n    body: JSON.stringify({ \n     meal_type: this.state.mealType,\n     serving: this.state.serving\n    })\n  })\n  .then(res => res.json())\n  .then(intake => {\n    const newItem =  this.state.dailyIntakes.map(intakeItem => {\n        return intakeItem.id === intake.id ? intake : intakeItem\n    })\n    // this.props.setUser(user) \n    this.setState({\n      dailyIntake:  intake,\n      dailyIntakes:  newItem,\n      editForm: false\n    })\n  })\n} \n\n render() {\n\n  \n  console.log(this.state.date)\n \n\n   const  {current_user} =this.props\n\n    const breakfast = () => {\n        if(this.state.dailyIntakes) {\n            let arr = this.state.dailyIntakes.filter(dailyIntake => {\n                return dailyIntake.meal_type === 'breakfast'\n            }) \n            return arr.map(dailyIntake => {\n                return  <tr key={dailyIntake.food.id} >\n                  <td> {dailyIntake.food.name } {dailyIntake.changed_date} <button className=\"edit-intake\" onClick={(e) => this.handleClick(e, dailyIntake)}> Edit </button></td> \n                  <td>{dailyIntake.serving} ✖️  ({dailyIntake.food.serving_size} g)</td>\n                  <td className=\"calorie\"> {dailyIntake.food.calorie * dailyIntake.serving}</td> \n                  <td className=\"fat\"> {(dailyIntake.food.fat * dailyIntake.serving).toFixed(2)} </td> \n                  <td className=\"carbs\"> {(dailyIntake.food.carbs * dailyIntake.serving).toFixed(2)}</td> \n                  <td className=\"protein\"> {(dailyIntake.food.protein * dailyIntake.serving).toFixed(2)}</td> \n                  <td className=\"sugar\"> {(dailyIntake.food.sugar * dailyIntake.serving).toFixed(2)}</td>\n                  <td className=\"delete\" onClick={(e) => this.handleDeleteClick(e, dailyIntake)}> <span> ❌ </span> </td>\n                  </tr>\n             })\n           }\n           return \"There is no food logged in..\"\n        }\n\n    const lunch = () => {\n        if(this.state.dailyIntakes) {\n            let arr = this.state.dailyIntakes.filter(dailyIntake => {\n                return dailyIntake.meal_type === 'lunch'\n            }) \n            return arr.map(dailyIntake => {\n                return  <tr key={dailyIntake.food.id}>\n                  <td>  {dailyIntake.food.name } {dailyIntake.changed_date} <button className=\"edit-intake\" onClick={(e) => this.handleClick(e, dailyIntake)}> Edit </button></td> \n                  <td>{dailyIntake.serving} ✖️  ({dailyIntake.food.serving_size} g)</td>\n                  <td className=\"calorie\"> {dailyIntake.food.calorie * dailyIntake.serving}</td> \n                  <td className=\"fat\"> {(dailyIntake.food.fat * dailyIntake.serving).toFixed(2)} </td> \n                  <td className=\"carbs\"> {(dailyIntake.food.carbs * dailyIntake.serving).toFixed(2)}</td> \n                  <td className=\"protein\"> {(dailyIntake.food.protein * dailyIntake.serving).toFixed(2)}</td> \n                  <td className=\"sugar\"> {(dailyIntake.food.sugar * dailyIntake.serving).toFixed(2)}</td>\n                  <td className=\"delete\" onClick={(e) => this.handleDeleteClick(e, dailyIntake)}> <span> ❌ </span> </td>\n                </tr>\n             })\n           }\n           return \"There is no food logged in..\"\n        }\n\n    const dinner = () => {\n        if(this.state.dailyIntakes )  {\n            let arr = this.state.dailyIntakes.filter(dailyIntake => {\n                return dailyIntake.meal_type === 'dinner'\n\n            }) \n            return arr.map(dailyIntake => {\n                return  <tr key={dailyIntake.food.id} >\n                  <td> {dailyIntake.food.name } {dailyIntake.changed_date}<button className=\"edit-intake\" onClick={(e) => this.handleClick(e, dailyIntake)}> Edit </button> </td>\n            <td>{dailyIntake.serving} ✖️  ({dailyIntake.food.serving_size} g)</td>\n                  <td className=\"calorie\"> {dailyIntake.food.calorie * dailyIntake.serving}</td> \n                  <td className=\"fat\"> {(dailyIntake.food.fat * dailyIntake.serving).toFixed(2)} </td> \n                  <td className=\"carbs\"> {(dailyIntake.food.carbs * dailyIntake.serving).toFixed(2)}</td> \n                  <td className=\"protein\"> {(dailyIntake.food.protein * dailyIntake.serving).toFixed(2)}</td> \n                  <td className=\"sugar\"> {(dailyIntake.food.sugar * dailyIntake.serving).toFixed(2)}</td>\n                  <td  onClick={(e) => this.handleDeleteClick(e, dailyIntake)}> <span> ❌ </span> </td>\n                \n                </tr>\n              \n             })\n           }\n           return \"There is no food logged in..\"\n        }\n\n    const snacks = () => {\n        if(this.state.dailyIntakes) {\n            let arr = this.state.dailyIntakes.filter(dailyIntake => {\n                return dailyIntake.meal_type === 'snack'\n            }) \n           \n            return arr.map(dailyIntake => {\n              // debugger\n                return  <tr key={dailyIntake.food.id} >\n                  \n                <td> {dailyIntake.food.name } {dailyIntake.changed_date} <button className=\"edit-intake\" onClick={(e) => this.handleClick(e, dailyIntake)}> Edit </button></td> \n                <td> {dailyIntake.serving} ✖️ ({dailyIntake.food.serving_size} g)</td>\n                <td className=\"calorie\"> {dailyIntake.food.calorie * dailyIntake.serving}</td> \n                <td className=\"fat\"> {(dailyIntake.food.fat * dailyIntake.serving).toFixed(2)} </td> \n                <td className=\"carbs\"> {(dailyIntake.food.carbs * dailyIntake.serving).toFixed(2)}</td> \n                <td className=\"protein\"> {(dailyIntake.food.protein * dailyIntake.serving).toFixed(2)}</td> \n                <td className=\"sugar\">  {(dailyIntake.food.sugar * dailyIntake.serving).toFixed(2)}</td>\n               \n                <td className=\"deleteIntake\" width=\"10%\" onClick={(e) => this.handleDeleteClick(e, dailyIntake)}> <span> ❌ </span> </td>\n                </tr>\n             })\n           }\n           return \"There is no food logged in..\"\n        }\n\n        const totals = () => {\n          let totals = {\n            protein: 0,\n            sugar: 0,\n            carbs: 0,\n            fat: 0,\n            servings: 0,\n            calories: 0\n          }\n          if (this.state.dailyIntakes.length){\n            this.state.dailyIntakes.forEach((i) => {\n              totals.servings += i.serving\n              totals.protein += i.total_protein\n              totals.sugar += i.total_sugar \n              totals.carbs += i.total_carbs\n              totals.fat += i.total_fat\n              totals.calories += i.total_calories\n            })\n          }\n         return totals\n      }      \n      \n      \n      const remaining = () => {\n        let total = {\n          protein: 0,\n          sugar: 0,\n          carbs: 0,\n          fat: 0,\n          calories: 0\n        }\n        if (this.state.dailyIntakes.length){\n             \n          this.state.dailyIntakes.forEach((i) => {\n            // debugger\n            total.calories = current_user.goal_calorie - totals().calories\n            total.protein = current_user.goal_protein - totals().protein\n            total.sugar = current_user.goal_sugar - totals().sugar\n            total.carbs = current_user.goal_carbs - totals().carbs\n            total.fat = current_user.goal_fat - totals().fat\n             \n    \n          })\n        }\n     \n       return total\n       \n    }\n    \n  return(\n<div className=\"daily-intake\">\n <p className='select-day'> Select a date</p> \n <input type=\"date\" className=\"date\" value={this.state.date} onChange={this.handleDateChange} name=\"date\" />\n  \n  <button className=\"date today\"onClick={this.handleDateClick}>Today </button>\n\n{ this.state.editForm ?  <EditDailyIntake intake={this.state.dailyIntake} handleClick={this.handleEditForm }handleChange={this.handleChange} handleEditSubmit={this.handleEditSubmit} /> : null }\n\n<table >\n    <thead>\n     <tr className=\"row\">\n        <th width=\"20%\" style={{border: 'none'}}></th> \n        <th width=\"10%\">Serving</th>\n        <th className=\"calorie\"  width=\"10%\">Calorie ( kcal )</th> \n       \n        <th width=\"10%\" className=\"fat\">Fat ( g )</th>\n        <th width=\"10%\" className=\"carbs\">Carbs ( g )</th>\n        <th width=\"10%\" className=\"protein\">Protein ( g )</th>\n        <th width=\"10%\" className=\"sugar\">Sugar ( g )</th>\n        <th width=\"1%\" style={{border: 'none'}}></th>\n       \n     </tr>\n    </thead>\n    <tbody>\n        \n    <tr className=\"row\">\n      <th width=\"0%\" className=\"breakfast\">Breakfast</th>\n    </tr> \n      {breakfast() }\n      \n      \n    <tr className=\"row\">\n      <th width=\"10%\" className=\"lunch\">Lunch</th> \n    </tr>\n     {lunch()}\n    <tr className=\"row\">\n      <th width=\"10%\" className=\"dinner\">Dinner</th> \n    </tr>\n     {dinner()}\n  \n    <tr className=\"row\">\n      <th width=\"10%\" className=\"snack\" >Snack</th> \n    </tr>\n      {snacks()} \n     <tr className=\"row\">\n       </tr> \n    \n    <tr className=\"row\">\n      \n      <th>\n        Total\n      </th>\n\n        <td>{(totals().servings)}</td>\n        <td className=\"calorie\">{(totals().calories)}</td>\n        <td className=\"fat\">{(totals().fat).toFixed(2)}</td>\n        <td className=\"carbs\">{(totals().carbs).toFixed(2)}</td>\n        <td className=\"protein\">{(totals().protein).toFixed(2)}</td>\n        <td className=\"sugar\">{(totals().sugar).toFixed(2)}</td>\n        \n    </tr>\n    <tr className=\"row\">\n      <th>Your daily goal  </th>\n      <td></td>\n      <td className=\"calorie\">{current_user.goal_calorie}</td>\n      <td className=\"fat\">{current_user.goal_fat}</td>\n      <td className=\"carbs\">{current_user.goal_carbs}</td>\n      <td className=\"protein\">{current_user.goal_protein}</td>\n      <td className=\"sugar\">{current_user.goal_sugar}</td>\n    </tr>\n    <tr className=\"row\">\n    <th>Remaining </th>\n   \n    <td></td>\n      { remaining().calories < 0 ? <td className=\"exeeded\">{remaining().calories}</td> : <td className=\"calorie\">{remaining().calories}</td>}\n      {remaining().fat < 0 ?  <td className=\"exeeded \">{(remaining().fat).toFixed(2)}</td> : <td className=\"fat\">{(remaining().fat).toFixed(2)}</td>}\n      {remaining().carbs < 0 ? <td className=\"exeeded\">{(remaining().carbs).toFixed(2)}</td> : <td className=\"carbs\">{(remaining().carbs).toFixed(2)}</td>}\n      {remaining().protein < 0 ?  <td className=\"exeeded\">{(remaining().protein).toFixed(2)}</td> : <td className=\"protein\">{(remaining().protein).toFixed(2)}</td>}\n      {remaining().sugar < 0 ?  <td className=\"exeeded\">{(remaining().sugar).toFixed(2)}</td> : <td className=\"sugar\">{(remaining().sugar).toFixed(2)}</td>}\n    \n    </tr>\n    </tbody>\n </table>\n </div>\n    )\n   }\n }\n\n const mapDispatchToProps = (dispatch) =>{\n return {\n  setUser: (userObject) => {\n    dispatch({\n        type: 'SET_USER', payload: userObject\n      })\n  }, \n  clearUser: () => {\n   dispatch({\n     type: 'CLEAR_USER'\n   })\n  }\n}\n}\n\nconst mapStateToProps = (state) => {\nreturn {\n  current_user: state.user\n}\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DailyIntake)","\nimport Login from './Login'\nimport Home from './Home'\nimport Profile from './Profile'\nimport Edit from './Edit'\nimport AddFood from './AddFood'\nimport FoodItem from './FoodItem'\nimport DailyIntake from './DailyIntake'\n\n\n\nexport default {\n    Login,\n    Home,\n    Profile,\n    Edit,\n    AddFood, \n    FoodItem,\n    DailyIntake\n}","import React from 'react';\nimport { Switch , Route } from 'react-router-dom' \nimport Pages from './Pages'\n\n\n\nconst Routes = () => {\n  return(\n    <div>\n          <Switch>\n            <Route exact path=\"/\" component={Pages.Home}/> \n            <Route exact path=\"/profile\" component= {Pages.Profile}/> \n            <Route exact path=\"/login\" component={Pages.Login}/> \n            <Route exact path='/edit' component={Pages.Edit}/>\n            <Route exact path=\"/add-food\" component={Pages.AddFood}/>\n            <Route exact path=\"/food/:id\" component={Pages.FoodItem}/>\n            <Route exact path=\"/daily-intake/:date\" component={Pages.DailyIntake}/>\n            <Route path=\"/daily-intake\" component={Pages.DailyIntake}/>\n          </Switch>\n    </div>\n   )\n\n }\n\nexport default Routes","import React from 'react'\nimport { Link, NavLink} from 'react-router-dom'\nimport { useSelector } from 'react-redux'\n\nfunction Nav(props){\n\n  const current_user = useSelector(state => {\n    // debugger \n    return state.user\n   })\n \n \n  \n  return(\n    <>\n    <div id=\"header\" >\n      <h1 className=\"header-name\">NutriTrack</h1>\n       <p className=\"user-name\">{current_user.name}</p>\n    </div>\n     <nav id=\"nav-bar\" >\n     {\n       current_user.id ? \n       <>\n       <div className=\"link-div\">\n       <Link className=\"link\" to=\"/\">Home</Link>\n       <Link className=\"link\"to=\"/profile\">Profile</Link>\n       <Link className=\"link\"to=\"/daily-intake\">My daily intake</Link>\n       <Link className=\"link\"to='/add-food'>Add Food</Link>\n       <NavLink className=\"link \" to='/login'><button id=\"logout\" onClick={props.clearUser}>Logout</button></NavLink>\n       </div>\n       </> : \n       <>\n       <div className=\"link-div\">\n       <Link className=\"link\" to=\"/\">Home</Link>\n       <Link className=\"link\"to=\"/login\">Login</Link>\n       </div>\n       </>\n     }\n       \n      \n   </nav>\n   </>\n    )\n   }\n\n\n\n\nexport default Nav","import React from 'react';\nimport './App.css';\nimport Routes from './Routes'\nimport { connect } from 'react-redux'\nimport Nav from './Components/Nav'\nimport './CSS/Home.css'\nimport './CSS/Nav.css'\nimport './CSS/DailySummary.css'\nimport './CSS/Profile.css'\nimport './CSS/Login.css'\nimport './CSS/AddFood.css'\nimport './CSS/FoodForm.css'\nimport './CSS/DailyIntake.css'\nimport './CSS/FoodItem.css'\nimport './CSS/EditProfile.css'\nimport './CSS/EditIntake.css'\n\n\nclass App  extends React.Component{\n\n   componentDidMount(){\n      fetch(\"https://nutritrack.herokuapp.com/profile\", {\n      headers: {\n        Authorization: localStorage.token\n      }\n    })\n    .then(res => res.json())\n    .then(userObject => {\n      this.props.setUser(userObject)\n\n    })\n  }\n \n  clearToken = () =>{\n    localStorage.clear()\n  }\n\n  logOut = () =>{\n    this.props.clearUser()\n    this.clearToken()\n    \n    // this.props.history.push('/login')\n  }\n \n render (){\n  //  console.log(this.props)\n  return (\n     <>\n        <Nav clearUser={this.logOut}/>\n        <Routes logOut={this.logOut} />\n    </>\n    )\n   }\n}\n\nconst mapDispatchToProps = (dispatch) =>{\n   return {\n     setUser: (userObject) => {\n       dispatch({\n           type: 'SET_USER', payload: userObject\n         })\n     }, \n     clearUser: () => {\n      dispatch({\n        type: 'CLEAR_USER'\n      })\n     }\n   }\n }\n \n const mapStateToProps = (state) => {\n   return {\n     current_user: state.user\n   }\n }\n \n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux'\nimport user from './userReducer'\nimport foods from './foodReducer'\n\nexport default combineReducers({\n    user: user, \n    foods: foods\n})\n","\nexport default function userReducer(state= {}, {type, payload}){\n    \n    switch (type) {\n        case \"SET_USER\":\n            // debugger\n            return payload\n        case 'CLEAR_USER':\n             return {}\n        default:\n            return state\n           \n    }\n}","\nexport default function userReducer(state= [], {type, payload}){\n    \n    switch (type) {\n        case \"GET_FOODS\":\n            // debugger\n            return payload\n       \n        default:\n            return state\n           \n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport rootReducers from './Reducers/rootReducers'\nimport { BrowserRouter} from 'react-router-dom'\n\n\nconst store = createStore(rootReducers)\n\nReactDOM.render(\n   <Provider store={store}>\n       <BrowserRouter>\n           <App />\n    </BrowserRouter>\n      \n    </Provider>\n     \n \n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}