{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Desktop/Projects/NutriTrack-App(Mod-5)/Frontend-NutriTrack/src/Pages/DailyIntake.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport EditDailyIntake from '../Components/EditDailyIntake';\n\nclass DailyIntake extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      editForm: false,\n      serving: null,\n      meal_type: \"\",\n      dailyIntake: {}\n    };\n\n    this.handleClick = (e, dailyIntakeItem) => {\n      console.log(dailyIntakeItem);\n      this.setState({\n        editForm: !this.state.editForm,\n        dailyIntake: dailyIntakeItem\n      });\n    };\n\n    this.handleChange = e => {\n      console.log(e.target.value);\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleEditSubmit = e => {\n      e.preventDefault();\n      console.log('submit');\n      fetch(\"http://localhost:3000/daily_intakes/\".concat(this.state.dailyIntake.id), {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({})\n      });\n    };\n  }\n\n  render() {\n    //  console.log(this.props.current_user.daily_intakes)\n    //  console.log(this.state.dailyIntakes)\n    // console.log(this.state.dailyIntake)\n    console.log(this.state.dailyIntake);\n    console.log(this.state.mealType, this.state.serving);\n    const current_user = this.props.current_user;\n\n    const breakfast = () => {\n      if (this.props.current_user.id && this.props.current_user.daily_intakes) {\n        let arr = this.props.current_user.daily_intakes.filter(dailyIntake => {\n          return dailyIntake.meal_type === 'breakfast';\n        });\n        return arr.map(dailyIntake => {\n          return React.createElement(\"tr\", {\n            key: dailyIntake.food.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            onClick: e => this.handleClick(e, dailyIntake),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72\n            },\n            __self: this\n          }, \" \", dailyIntake.food.name), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            },\n            __self: this\n          }, dailyIntake.serving, \" * (\", dailyIntake.food.serving_size, \" g)\"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74\n            },\n            __self: this\n          }, \" \", dailyIntake.food.calorie * dailyIntake.serving), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75\n            },\n            __self: this\n          }, \" \", dailyIntake.food.fat * dailyIntake.serving, \" \"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, \" \", dailyIntake.food.carbs * dailyIntake.serving), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          }, dailyIntake.food.protein * dailyIntake.serving), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            },\n            __self: this\n          }, \" \", dailyIntake.food.sugar * dailyIntake.serving));\n        });\n      }\n\n      return \"There is no food logged in..\";\n    };\n\n    const lunch = () => {\n      if (this.props.current_user.id && this.props.current_user.daily_intakes) {\n        let arr = this.props.current_user.daily_intakes.filter(dailyIntake => {\n          return dailyIntake.meal_type === 'lunch';\n        });\n        return arr.map(dailyIntake => {\n          return React.createElement(\"tr\", {\n            key: dailyIntake.food.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93\n            },\n            __self: this\n          }, \" \", dailyIntake.food.name), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94\n            },\n            __self: this\n          }, dailyIntake.serving, \" * (\", dailyIntake.food.serving_size, \" g)\"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95\n            },\n            __self: this\n          }, \" \", dailyIntake.food.calorie * dailyIntake.serving), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96\n            },\n            __self: this\n          }, \" \", dailyIntake.food.fat * dailyIntake.serving, \" \"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97\n            },\n            __self: this\n          }, \" \", dailyIntake.food.carbs * dailyIntake.serving), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98\n            },\n            __self: this\n          }, \" \", dailyIntake.food.protein * dailyIntake.serving), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99\n            },\n            __self: this\n          }, \" \", dailyIntake.food.sugar * dailyIntake.serving));\n        });\n      }\n\n      return \"There is no food logged in..\";\n    };\n\n    const dinner = () => {\n      if (this.props.current_user.id && this.props.current_user.daily_intakes) {\n        let arr = this.props.current_user.daily_intakes.filter(dailyIntake => {\n          return dailyIntake.meal_type === 'dinner';\n        });\n        return arr.map(dailyIntake => {\n          return React.createElement(\"tr\", {\n            key: dailyIntake.food.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115\n            },\n            __self: this\n          }, \" \", dailyIntake.food.name), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116\n            },\n            __self: this\n          }, dailyIntake.serving, \" * (\", dailyIntake.food.serving_size, \" g)\"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117\n            },\n            __self: this\n          }, \" \", dailyIntake.food.calorie * dailyIntake.serving), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118\n            },\n            __self: this\n          }, \" \", dailyIntake.food.fat * dailyIntake.serving, \" \"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119\n            },\n            __self: this\n          }, \" \", dailyIntake.food.carbs * dailyIntake.serving), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120\n            },\n            __self: this\n          }, \" \", dailyIntake.food.protein * dailyIntake.serving), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121\n            },\n            __self: this\n          }, \" \", dailyIntake.food.sugar * dailyIntake.serving));\n        });\n      }\n\n      return \"There is no food logged in..\";\n    };\n\n    const snacks = () => {\n      if (this.props.current_user.id && this.props.current_user.daily_intakes) {\n        let arr = this.props.current_user.daily_intakes.filter(dailyIntake => {\n          return dailyIntake.meal_type === 'snack';\n        });\n        return arr.map(dailyIntake => {\n          return React.createElement(\"tr\", {\n            key: dailyIntake.food.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 137\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138\n            },\n            __self: this\n          }, \" \", dailyIntake.food.name, \" \"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 139\n            },\n            __self: this\n          }, dailyIntake.serving, \" * (\", dailyIntake.food.serving_size, \" g)\"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 140\n            },\n            __self: this\n          }, \" \", dailyIntake.food.calorie * dailyIntake.serving), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 141\n            },\n            __self: this\n          }, \" \", dailyIntake.food.fat * dailyIntake.serving, \" \"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 142\n            },\n            __self: this\n          }, \" \", dailyIntake.food.carbs * dailyIntake.serving), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 143\n            },\n            __self: this\n          }, \" \", dailyIntake.food.protein * dailyIntake.serving), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 144\n            },\n            __self: this\n          }, \" \", dailyIntake.food.sugar * dailyIntake.serving));\n        });\n      }\n\n      return \"There is no food logged in..\";\n    };\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, this.state.editForm ? React.createElement(EditDailyIntake, {\n      handleChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }) : null, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Serving\"), React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Calorie ( kcal )\"), React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Fat ( g )\"), React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Carbs ( g )\"), React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"Protein ( g )\"), React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Sugar ( g )\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Breakfast\")), breakfast(), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Lunch\")), lunch(), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"Dinner\")), dinner(), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Snack\")), snacks(), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"Total\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, current_user.total_servings), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, current_user.total_calories), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, current_user.total_fat), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, current_user.total_carbs), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, current_user.total_protein), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, current_user.total_sugar)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"Your daily goal  \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, current_user.goal_calorie), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, current_user.goal_fat), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, current_user.goal_carbs), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, current_user.goal_protein), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, current_user.goal_sugar)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"Remaining \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, current_user.remaining_calories), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, current_user.remaining_fat), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, current_user.remaining_carbs), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, current_user.remaining_protein), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, current_user.remaining_sugar)))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    current_user: state.user\n  };\n};\n\nexport default connect(mapStateToProps)(DailyIntake);","map":{"version":3,"sources":["/Users/flatironschool/Desktop/Projects/NutriTrack-App(Mod-5)/Frontend-NutriTrack/src/Pages/DailyIntake.js"],"names":["React","Component","connect","EditDailyIntake","DailyIntake","state","editForm","serving","meal_type","dailyIntake","handleClick","e","dailyIntakeItem","console","log","setState","handleChange","target","value","name","handleEditSubmit","preventDefault","fetch","id","method","headers","body","JSON","stringify","render","mealType","current_user","props","breakfast","daily_intakes","arr","filter","map","food","serving_size","calorie","fat","carbs","protein","sugar","lunch","dinner","snacks","total_servings","total_calories","total_fat","total_carbs","total_protein","total_sugar","goal_calorie","goal_fat","goal_carbs","goal_protein","goal_sugar","remaining_calories","remaining_fat","remaining_carbs","remaining_protein","remaining_sugar","mapStateToProps","user"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport EditDailyIntake from '../Components/EditDailyIntake'\n\nclass DailyIntake extends Component {\n state = {\n   editForm: false, \n   serving: null, \n   meal_type: \"\",\n   dailyIntake: {}\n }\n\n\n// handleClick = (e, dailyIntakeItem) => {\n//   console.log(dailyIntakeItem.id)\n//   this.setState({\n//     show: false\n//   })\n//   fetch(`http://localhost:3000/daily_intakes/${dailyIntakeItem.id}`, {\n//      method: 'DELETE'\n//    })\n// }\n\n \n\nhandleClick = (e, dailyIntakeItem) => {\n console.log(dailyIntakeItem)\n this.setState({\n   editForm: !this.state.editForm,\n   dailyIntake: dailyIntakeItem\n })\n}\n\n\nhandleChange = (e) =>{\n  console.log(e.target.value)\n  this.setState({\n    [e.target.name] : e.target.value\n  })\n}\n\nhandleEditSubmit = (e) => {\n  e.preventDefault()\n  console.log('submit')\n  fetch(`http://localhost:3000/daily_intakes/${this.state.dailyIntake.id}`, {\n    method: 'PATCH', \n    headers: {\n      'Content-Type': 'application/json',\n      'Accept':'application/json'\n    },\n    body: JSON.stringify({\n      \n    })\n  })\n} \n\n render() {\n  //  console.log(this.props.current_user.daily_intakes)\n  //  console.log(this.state.dailyIntakes)\n  // console.log(this.state.dailyIntake)\n  console.log(this.state.dailyIntake)\n  console.log(this.state.mealType, this.state.serving)\n   const  {current_user} =this.props\n\n    const breakfast = () => {\n        if(this.props.current_user.id && this.props.current_user.daily_intakes ) {\n            let arr = this.props.current_user.daily_intakes.filter(dailyIntake => {\n                return dailyIntake.meal_type === 'breakfast'\n            }) \n            return arr.map(dailyIntake => {\n                return  <tr key={dailyIntake.food.id} >\n                  <td onClick={(e) => this.handleClick(e, dailyIntake)}> {dailyIntake.food.name }</td> \n                  <td>{dailyIntake.serving} * ({dailyIntake.food.serving_size} g)</td>\n                  <td> {dailyIntake.food.calorie * dailyIntake.serving}</td> \n                  <td> {dailyIntake.food.fat * dailyIntake.serving} </td> \n                  <td> {dailyIntake.food.carbs * dailyIntake.serving}</td> \n                  <td>{dailyIntake.food.protein * dailyIntake.serving}</td> \n                  <td> {dailyIntake.food.sugar * dailyIntake.serving}</td>\n                  {/* <td onClick={(e) => this.handleClick(e, dailyIntake)}> <span> ❌ </span> </td> */}\n                  </tr>\n             })\n           }\n           return \"There is no food logged in..\"\n        }\n\n    const lunch = () => {\n        if(this.props.current_user.id && this.props.current_user.daily_intakes ) {\n            let arr = this.props.current_user.daily_intakes.filter(dailyIntake => {\n                return dailyIntake.meal_type === 'lunch'\n            }) \n            return arr.map(dailyIntake => {\n                return  <tr key={dailyIntake.food.id}>\n                  <td> {dailyIntake.food.name }</td> \n                  <td>{dailyIntake.serving} * ({dailyIntake.food.serving_size} g)</td>\n                  <td> {dailyIntake.food.calorie * dailyIntake.serving}</td> \n                  <td> {dailyIntake.food.fat * dailyIntake.serving} </td> \n                  <td> {dailyIntake.food.carbs * dailyIntake.serving}</td> \n                  <td> {dailyIntake.food.protein * dailyIntake.serving}</td> \n                  <td> {dailyIntake.food.sugar * dailyIntake.serving}</td>\n                  {/* <td onClick={(e) => this.handleClick(e, dailyIntake)}> <span> ❌ </span> </td> */}\n                </tr>\n             })\n           }\n           return \"There is no food logged in..\"\n        }\n\n    const dinner = () => {\n        if(this.props.current_user.id && this.props.current_user.daily_intakes )  {\n            let arr = this.props.current_user.daily_intakes.filter(dailyIntake => {\n                return dailyIntake.meal_type === 'dinner'\n\n            }) \n            return arr.map(dailyIntake => {\n                return  <tr key={dailyIntake.food.id} >\n                  <td> {dailyIntake.food.name }</td>\n            <td>{dailyIntake.serving} * ({dailyIntake.food.serving_size} g)</td>\n                  <td> {dailyIntake.food.calorie * dailyIntake.serving}</td> \n                  <td> {dailyIntake.food.fat * dailyIntake.serving} </td> \n                  <td> {dailyIntake.food.carbs * dailyIntake.serving}</td> \n                  <td> {dailyIntake.food.protein * dailyIntake.serving}</td> \n                  <td> {dailyIntake.food.sugar * dailyIntake.serving}</td>\n                  {/* <td onClick={(e) => this.handleClick(e, dailyIntake)}> <span> ❌ </span> </td> */}\n                \n                </tr>\n              \n             })\n           }\n           return \"There is no food logged in..\"\n        }\n\n    const snacks = () => {\n        if(this.props.current_user.id && this.props.current_user.daily_intakes ) {\n            let arr = this.props.current_user.daily_intakes.filter(dailyIntake => {\n                return dailyIntake.meal_type === 'snack'\n            }) \n            return arr.map(dailyIntake => {\n                return  <tr key={dailyIntake.food.id} >\n                <td> {dailyIntake.food.name } </td> \n                <td>{dailyIntake.serving} * ({dailyIntake.food.serving_size} g)</td>\n                <td> {dailyIntake.food.calorie * dailyIntake.serving}</td> \n                <td> {dailyIntake.food.fat * dailyIntake.serving} </td> \n                <td> {dailyIntake.food.carbs * dailyIntake.serving}</td> \n                <td> {dailyIntake.food.protein * dailyIntake.serving}</td> \n                <td> {dailyIntake.food.sugar * dailyIntake.serving}</td>\n                {/* <td onClick={(e) => this.handleClick(e, dailyIntake)}> <span> ❌ </span> </td> */}\n                </tr>\n             })\n           }\n           return \"There is no food logged in..\"\n        }\n    \n        \n    \n  return(\n<div>\n{ this.state.editForm ?  <EditDailyIntake handleChange={this.handleChange} /> : null }\n\n<table>\n    <thead>\n     <tr>\n        <th width=\"10%\"></th> \n        <th width=\"10%\">Serving</th>\n        <th width=\"10%\">Calorie ( kcal )</th> \n       \n        <th width=\"10%\">Fat ( g )</th>\n        <th width=\"10%\">Carbs ( g )</th>\n        <th width=\"10%\">Protein ( g )</th>\n        <th width=\"10%\">Sugar ( g )</th>\n       \n     </tr>\n    </thead>\n    <tbody>\n        \n    <tr>\n      <th width=\"10%\">Breakfast</th>\n    </tr> \n      {breakfast()}\n      \n    <tr>\n      <th width=\"10%\">Lunch</th> \n    </tr>\n     {lunch()}\n    <tr>\n      <th width=\"10%\">Dinner</th> \n    </tr>\n     {dinner()}\n  \n    <tr>\n      <th width=\"10%\">Snack</th> \n    </tr>\n      {snacks()} \n     <tr>\n       </tr> \n    <tr>\n      \n      <th>\n        Total\n      </th>\n        <td>{current_user.total_servings}</td>\n        <td>{current_user.total_calories}</td>\n        <td>{current_user.total_fat}</td>\n        <td>{current_user.total_carbs}</td>\n        <td>{current_user.total_protein}</td>\n        <td>{current_user.total_sugar}</td>\n        \n    </tr>\n    <tr>\n      <th>Your daily goal  </th>\n      <td></td>\n      <td>{current_user.goal_calorie}</td>\n      <td>{current_user.goal_fat}</td>\n      <td>{current_user.goal_carbs}</td>\n      <td>{current_user.goal_protein}</td>\n      <td>{current_user.goal_sugar}</td>\n    </tr>\n    <tr>\n    <th>Remaining </th>\n      <td></td>\n      <td>{current_user.remaining_calories}</td>\n      <td>{current_user.remaining_fat}</td>\n      <td>{current_user.remaining_carbs}</td>\n      <td>{current_user.remaining_protein}</td>\n      <td>{current_user.remaining_sugar}</td>\n    </tr>\n    </tbody>\n </table>\n </div>\n    )\n   }\n }\n const mapStateToProps = (state) => {\n    return {\n      current_user: state.user\n    }\n  }\n  \n \n export default connect(mapStateToProps)(DailyIntake)"]},"metadata":{},"sourceType":"module"}