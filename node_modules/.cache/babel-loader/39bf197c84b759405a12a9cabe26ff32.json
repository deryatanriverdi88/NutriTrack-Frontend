{"ast":null,"code":"import _defineProperty from\"/Users/flatironschool/Desktop/Projects/NutriTrack-App(Mod-5)/Frontend-NutriTrack/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/flatironschool/Desktop/Projects/NutriTrack-App(Mod-5)/Frontend-NutriTrack/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/flatironschool/Desktop/Projects/NutriTrack-App(Mod-5)/Frontend-NutriTrack/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/flatironschool/Desktop/Projects/NutriTrack-App(Mod-5)/Frontend-NutriTrack/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/flatironschool/Desktop/Projects/NutriTrack-App(Mod-5)/Frontend-NutriTrack/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/flatironschool/Desktop/Projects/NutriTrack-App(Mod-5)/Frontend-NutriTrack/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{connect}from'react-redux';import FoodItem from\"../Pages/FoodItem\";import{withRouter}from'react-router-dom';var FoodForm=/*#__PURE__*/function(_Component){_inherits(FoodForm,_Component);function FoodForm(){var _getPrototypeOf2;var _this;_classCallCheck(this,FoodForm);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(FoodForm)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={serving:null,mealType:\"\",date:new Date().toLocaleDateString(),foodView:false,food:{}};_this.handleChange=function(e){console.log(e.target.name,e.target.value);_this.setState(_defineProperty({},e.target.name,e.target.value));};_this.handleClick=function(foodItem){_this.setState({foodView:!_this.state.foodView,food:foodItem});};_this.handleSubmit=function(e){e.preventDefault();console.log('submit');fetch('https://nutritrack.herokuapp.com/daily_intakes',{method:'POST',headers:{'Content-Type':\"application/json\",'Accept':'application/json'},body:JSON.stringify({user_id:_this.props.current_user.id,food_id:_this.props.food.id,meal_type:_this.state.mealType,serving:_this.state.serving,date:_this.state.date})}).then(function(res){return res.json();}).then(function(user){console.log(user);_this.props.setUser(user);setTimeout(function(){_this.props.history.push(\"/daily-intake/\".concat(_this.state.date));},50);});// .then( this.props.history.push('/daily-intake'))\n};return _this;}_createClass(FoodForm,[{key:\"render\",value:function render(){var _this2=this;console.log(this.state.date);// console.log(this.state.serving)\nvar name=this.props.food.name;return React.createElement(\"div\",{className:\"background-for-z-index\"},React.createElement(\"div\",{className:\"food-form\"},React.createElement(\"h3\",{className:\"food-name\"},name),React.createElement(\"form\",{onSubmit:this.handleSubmit},React.createElement(\"label\",{htmlFor:\"serving\"},\" \",React.createElement(\"span\",{className:\"serving\"},\" Servings of \")),React.createElement(\"input\",{id:\"serving\",name:\"serving\",type:\"number\",onChange:this.handleChange,value:this.state.serving}),React.createElement(\"input\",{type:\"hidden\",id:\"user\",name:\"userId\"}),React.createElement(\"input\",{type:\"hidden\",id:\"food\",name:\"foodId\"}),React.createElement(\"label\",{htmlFor:\"date\"},React.createElement(\"span\",{className:\"date\"},\"Date\"),React.createElement(\"input\",{type:\"date\",id:\"date\",name:\"date\",value:this.state.date,onChange:this.handleChange})),React.createElement(\"label\",{htmlFor:\"mealType\"},\" \",React.createElement(\"span\",{className:\"meal-type\"},\"Meal Type\"),\" \"),React.createElement(\"select\",{id:\"mealType\",name:\"mealType\",onChange:this.handleChange},React.createElement(\"option\",{name:\"\"}),React.createElement(\"option\",{value:\"breakfast\"},\"Breakfast\"),React.createElement(\"option\",{value:\"lunch\"},\"Lunch\"),React.createElement(\"option\",{value:\"dinner\"},\"Dinner\"),React.createElement(\"option\",{value:\"snack\"},\"Snack\")),React.createElement(\"input\",{className:\"add-your-diary\",type:\"submit\",value:\"Add to your diary!\"})),React.createElement(\"button\",{className:\"x\",onClick:this.props.handleClick},\" \",React.createElement(\"span\",null,\" \\u274C \")),React.createElement(\"button\",{className:\"nutrition-info-button\",onClick:function onClick(){return _this2.handleClick(_this2.props.food);}},\" See nutrition info \"),this.state.foodView?React.createElement(FoodItem,{food:this.state.food,handleClick:this.handleClick}):null));}}]);return FoodForm;}(Component);var mapDispatchToProps=function mapDispatchToProps(dispatch){return{setUser:function setUser(userObject){dispatch({type:'SET_USER',payload:userObject});},clearUser:function clearUser(){dispatch({type:'CLEAR_USER'});}};};var mapStateToProps=function mapStateToProps(state){return{current_user:state.user};};export default withRouter(connect(mapStateToProps,mapDispatchToProps)(FoodForm));","map":{"version":3,"sources":["/Users/flatironschool/Desktop/Projects/NutriTrack-App(Mod-5)/Frontend-NutriTrack/src/Components/FoodForm.js"],"names":["React","Component","connect","FoodItem","withRouter","FoodForm","state","serving","mealType","date","Date","toLocaleDateString","foodView","food","handleChange","e","console","log","target","name","value","setState","handleClick","foodItem","handleSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","user_id","props","current_user","id","food_id","meal_type","then","res","json","user","setUser","setTimeout","history","push","mapDispatchToProps","dispatch","userObject","type","payload","clearUser","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport FoodItem from \"../Pages/FoodItem\"\nimport { withRouter } from 'react-router-dom'\n\n\n\n\nclass FoodForm extends Component {\n\n   \n    state={\n        serving: null,\n        mealType: \"\",\n        date: new Date().toLocaleDateString(),\n        foodView: false,\n        food: {}\n        \n    }\n\n    handleChange = (e) => {\n        console.log(e.target.name, e.target.value)\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleClick = (foodItem) => {\n        this.setState({\n            foodView: !this.state.foodView, \n            food: foodItem\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        console.log('submit')\n      \n        fetch('https://nutritrack.herokuapp.com/daily_intakes', {\n            method: 'POST',\n            headers: {\n                'Content-Type': \"application/json\",\n                'Accept':'application/json'\n            },\n            body: JSON.stringify({\n                user_id: this.props.current_user.id,\n                food_id: this.props.food.id,\n                meal_type: this.state.mealType,\n                serving: this.state.serving,\n                date: this.state.date\n\n            })\n        })\n        .then(res => res.json())\n        .then(user => {\n            console.log(user)\n            this.props.setUser(user)\n            setTimeout(() => {\n                this.props.history.push(`/daily-intake/${this.state.date}`)\n            }, 50)\n        })\n        // .then( this.props.history.push('/daily-intake'))\n        \n    }\n\n\n    render() {\n       \n        console.log(this.state.date)\n   \n        // console.log(this.state.serving)\n        const {name} = this.props.food\n        return(\n            <div className=\"background-for-z-index\">\n            <div className=\"food-form\" > \n    \n        \n                     <h3 className=\"food-name\">{ name }</h3>\n                     <form onSubmit={this.handleSubmit}>\n                         <label htmlFor=\"serving\"> <span className=\"serving\"> Servings of </span></label> \n                            <input \n                                id=\"serving\"\n                                name=\"serving\"\n                                type=\"number\"\n                                onChange={this.handleChange}\n                                value={this.state.serving}\n                            />\n                            <input\n                                type=\"hidden\" \n                                id=\"user\"\n                                name=\"userId\"\n                            />\n                            <input\n                                type=\"hidden\" \n                                id=\"food\"\n                                name=\"foodId\"\n                            />\n                        <label htmlFor=\"date\">\n                            <span className=\"date\">Date</span>\n                             <input \n                                type=\"date\"\n                                id=\"date\"\n                                name='date'\n                                value={this.state.date}\n                                onChange={this.handleChange}\n                             />\n                        </label>\n                         <label htmlFor=\"mealType\"> <span className=\"meal-type\">Meal Type</span> </label>\n                           <select id=\"mealType\" name=\"mealType\" onChange={this.handleChange}>\n                                <option name=\"\"></option>\n                                <option value=\"breakfast\">Breakfast</option>\n                                <option value=\"lunch\">Lunch</option>\n                                <option value=\"dinner\">Dinner</option>\n                                <option value=\"snack\">Snack</option>\n                           </select>\n                           <input className=\"add-your-diary\" type=\"submit\" value=\"Add to your diary!\" />\n                     </form>\n                    <button className=\"x\" onClick={this.props.handleClick}> <span > ❌ </span></button>\n                    <button className=\"nutrition-info-button\" onClick={() => this.handleClick(this.props.food)}> See nutrition info </button>\n                    {\n                        this.state.foodView ? \n                        <FoodItem food={this.state.food} handleClick={this.handleClick} /> : \n                        null\n                    }\n            \n            </div>\n            </div>\n           )\n    }\n  \n\n }\n const mapDispatchToProps = (dispatch) =>{\n    return {\n     setUser: (userObject) => {\n       dispatch({\n           type: 'SET_USER', payload: userObject\n         })\n     }, \n     clearUser: () => {\n      dispatch({\n        type: 'CLEAR_USER'\n      })\n     }\n   }\n   }\n   \n   const mapStateToProps = (state) => {\n   return {\n     current_user: state.user\n   }\n   }\n   \n   \n   export default withRouter(connect(mapStateToProps, mapDispatchToProps)(FoodForm))\n\n\n"]},"metadata":{},"sourceType":"module"}