{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Desktop/Projects/NutriTrack-App(Mod-5)/Frontend-NutriTrack/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Routes from './Routes';\nimport { connect } from 'react-redux';\nimport Nav from './Components/Nav';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.clearToken = () => {\n      localStorage.clear();\n    };\n\n    this.logOut = () => {\n      this.props.clearUser();\n      this.clearToken(); // this.props.pathname('/login')\n\n      this.context.history.push('/path');\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000/profile\", {\n      headers: {\n        Authorization: localStorage.token\n      }\n    }).then(res => res.json()).then(userObject => {\n      this.props.setUser(userObject);\n    });\n  }\n\n  render() {\n    console.log(this.props);\n    return React.createElement(React.Fragment, null, React.createElement(Nav, {\n      clearUser: this.logOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(Routes, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setUser: userObject => {\n      dispatch({\n        type: 'SET_USER',\n        payload: userObject\n      });\n    },\n    clearUser: () => {\n      dispatch({\n        type: 'CLEAR_USER'\n      });\n    }\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    current_user: state.current_user\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/flatironschool/Desktop/Projects/NutriTrack-App(Mod-5)/Frontend-NutriTrack/src/App.js"],"names":["React","Routes","connect","Nav","App","Component","clearToken","localStorage","clear","logOut","props","clearUser","context","history","push","componentDidMount","fetch","headers","Authorization","token","then","res","json","userObject","setUser","render","console","log","mapDispatchToProps","dispatch","type","payload","mapStateToProps","state","current_user"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;;AAIA,MAAMC,GAAN,SAAmBJ,KAAK,CAACK,SAAzB,CAAkC;AAAA;AAAA;;AAAA,SAehCC,UAfgC,GAenB,MAAK;AAChBC,MAAAA,YAAY,CAACC,KAAb;AACD,KAjB+B;;AAAA,SAmBhCC,MAnBgC,GAmBvB,MAAK;AACZ,WAAKC,KAAL,CAAWC,SAAX;AACA,WAAKL,UAAL,GAFY,CAGZ;;AACA,WAAKM,OAAL,CAAaC,OAAb,CAAqBC,IAArB,CAA0B,OAA1B;AACD,KAxB+B;AAAA;;AAE/BC,EAAAA,iBAAiB,GAAE;AAChBC,IAAAA,KAAK,CAAC,+BAAD,EAAkC;AACvCC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAEX,YAAY,CAACY;AADrB;AAD8B,KAAlC,CAAL,CAKDC,IALC,CAKIC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EALX,EAMDF,IANC,CAMIG,UAAU,IAAI;AAClB,WAAKb,KAAL,CAAWc,OAAX,CAAmBD,UAAnB;AAED,KATC;AAUH;;AAaFE,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAjB;AACD,WACG,0CACG,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAE,KAAKD,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,EAEG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFH,CADH;AAME;;AAlC8B;;AAqClC,MAAMmB,kBAAkB,GAAIC,QAAD,IAAa;AACrC,SAAO;AACLL,IAAAA,OAAO,EAAGD,UAAD,IAAgB;AACvBM,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAE,UADD;AACaC,QAAAA,OAAO,EAAER;AADtB,OAAD,CAAR;AAGD,KALI;AAMLZ,IAAAA,SAAS,EAAE,MAAM;AAChBkB,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAE;AADC,OAAD,CAAR;AAGA;AAVI,GAAP;AAYD,CAbF;;AAeC,MAAME,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,YAAY,EAAED,KAAK,CAACC;AADf,GAAP;AAGD,CAJD;;AAOD,eAAehC,OAAO,CAAC8B,eAAD,EAAkBJ,kBAAlB,CAAP,CAA6CxB,GAA7C,CAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Routes from './Routes'\nimport { connect } from 'react-redux'\nimport Nav from './Components/Nav'\n\n\n\nclass App  extends React.Component{\n\n   componentDidMount(){\n      fetch(\"http://localhost:3000/profile\", {\n      headers: {\n        Authorization: localStorage.token\n      }\n    })\n    .then(res => res.json())\n    .then(userObject => {\n      this.props.setUser(userObject)\n\n    })\n  }\n \n  clearToken = () =>{\n    localStorage.clear()\n  }\n\n  logOut = () =>{\n    this.props.clearUser()\n    this.clearToken()\n    // this.props.pathname('/login')\n    this.context.history.push('/path')\n  }\n \n render (){\n   console.log(this.props)\n  return (\n     <>\n        <Nav clearUser={this.logOut}/>\n        <Routes/>\n    </>\n    )\n   }\n}\n\nconst mapDispatchToProps = (dispatch) =>{\n   return {\n     setUser: (userObject) => {\n       dispatch({\n           type: 'SET_USER', payload: userObject\n         })\n     }, \n     clearUser: () => {\n      dispatch({\n        type: 'CLEAR_USER'\n      })\n     }\n   }\n }\n \n const mapStateToProps = (state) => {\n   return {\n     current_user: state.current_user\n   }\n }\n \n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n"]},"metadata":{},"sourceType":"module"}