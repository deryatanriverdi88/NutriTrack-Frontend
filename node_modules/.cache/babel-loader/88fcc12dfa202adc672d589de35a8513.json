{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Desktop/Projects/NutriTrack-App(Mod-5)/Frontend-NutriTrack/src/Pages/DailyIntake.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport EditDailyIntake from '../Components/EditDailyIntake';\n\nclass DailyIntake extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      editForm: false,\n      dailyIntake: {},\n      serving: null,\n      mealType: \"\",\n      dailyIntakes: []\n    };\n\n    this.handleDeleteClick = (e, dailyIntakeItem) => {\n      console.log(dailyIntakeItem);\n      fetch(\"http://localhost:3000/daily_intakes/\".concat(dailyIntakeItem.id), {\n        method: 'DELETE'\n      }).then(res => {\n        const newArray = this.state.dailyIntakes.filter(dailyIntake => {\n          return dailyIntake.id !== dailyIntakeItem.id;\n        });\n        this.setState({\n          dailyIntakes: newArray\n        });\n      });\n    };\n\n    this.handleClick = (e, dailyIntakeItem) => {\n      //  console.log(dailyIntakeItem)\n      this.setState({\n        editForm: !this.state.editForm,\n        dailyIntake: dailyIntakeItem,\n        serving: dailyIntakeItem.serving,\n        mealType: dailyIntakeItem.meal_type\n      });\n    };\n\n    this.fetchDailyIntake = () => {\n      const config = {\n        method: 'GET',\n        headers: {\n          Authorization: localStorage.token\n        }\n      };\n      fetch('http://localhost:3000/daily_intakes', config).then(res => res.json()).then(dailyIntakeItems => {\n        console.log(dailyIntakeItems);\n        this.setState({\n          dailyIntakes: dailyIntakeItems\n        });\n      });\n    };\n\n    this.handleChange = e => {\n      // console.log(e.target.value)\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleEditSubmit = e => {\n      e.preventDefault(); // console.log('submit')\n\n      fetch(\"http://localhost:3000/daily_intakes/\".concat(this.state.dailyIntake.id), {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n          meal_type: this.state.mealType,\n          serving: this.state.serving\n        })\n      }).then(res => res.json()).then(intake => {\n        const newItem = this.state.dailyIntakes.map(intakeItem => {\n          return intakeItem.id === intake.id ? intake : intakeItem;\n        }); // this.props.setUser(user) \n\n        this.setState({\n          dailyIntake: intake,\n          dailyIntakes: newItem\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchDailyIntake();\n  }\n\n  render() {\n    // const date = (() => {\n    //   if (this.props.current_user.id && this.props.current_user.daily_intakes !==  undefined ){\n    //     return this.props.current_user.daily_intakes.map(dailyIntake => {\n    //       return new Date(dailyIntake.date).toLocaleDateString()\n    //     })\n    //   }\n    // })\n    // console.log(this.props.current_user.daily_intakes)\n    // console.log(this.state.dailyIntakes)\n    // console.log(this.state.dailyIntake)\n    // console.log(this.state.dailyIntake)\n    // console.log(this.state.mealType, this.state.serving)\n    const current_user = this.props.current_user;\n\n    const breakfast = () => {\n      if (this.state.dailyIntakes) {\n        let arr = this.state.dailyIntakes.filter(dailyIntake => {\n          return dailyIntake.meal_type === 'breakfast';\n        });\n        return arr.map(dailyIntake => {\n          return React.createElement(\"tr\", {\n            key: dailyIntake.food.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136\n            },\n            __self: this\n          }, \" \", dailyIntake.food.name, \" \", React.createElement(\"button\", {\n            onClick: e => this.handleClick(e, dailyIntake),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136\n            },\n            __self: this\n          }, \" Edit \")), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 137\n            },\n            __self: this\n          }, dailyIntake.serving, \" * (\", dailyIntake.food.serving_size, \" g)\"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138\n            },\n            __self: this\n          }, \" \", dailyIntake.food.calorie * dailyIntake.serving), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 139\n            },\n            __self: this\n          }, \" \", (dailyIntake.food.fat * dailyIntake.serving).toFixed(2), \" \"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 140\n            },\n            __self: this\n          }, \" \", (dailyIntake.food.carbs * dailyIntake.serving).toFixed(2)), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 141\n            },\n            __self: this\n          }, \" \", (dailyIntake.food.protein * dailyIntake.serving).toFixed(2)), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 142\n            },\n            __self: this\n          }, \" \", (dailyIntake.food.sugar * dailyIntake.serving).toFixed(2)), React.createElement(\"td\", {\n            onClick: e => this.handleDeleteClick(e, dailyIntake),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 143\n            },\n            __self: this\n          }, \" \", React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 143\n            },\n            __self: this\n          }, \" \\u274C \"), \" \"));\n        });\n      }\n\n      return \"There is no food logged in..\";\n    };\n\n    const lunch = () => {\n      if (this.state.dailyIntakes) {\n        let arr = this.state.dailyIntakes.filter(dailyIntake => {\n          return dailyIntake.meal_type === 'lunch';\n        });\n        return arr.map(dailyIntake => {\n          return React.createElement(\"tr\", {\n            key: dailyIntake.food.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 156\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 157\n            },\n            __self: this\n          }, \"  \", dailyIntake.food.name, \" \", React.createElement(\"button\", {\n            onClick: e => this.handleClick(e, dailyIntake),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 157\n            },\n            __self: this\n          }, \" Edit \")), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 158\n            },\n            __self: this\n          }, dailyIntake.serving, \" * (\", dailyIntake.food.serving_size, \" g)\"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 159\n            },\n            __self: this\n          }, \" \", dailyIntake.food.calorie * dailyIntake.serving), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 160\n            },\n            __self: this\n          }, \" \", (dailyIntake.food.fat * dailyIntake.serving).toFixed(2), \" \"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 161\n            },\n            __self: this\n          }, \" \", (dailyIntake.food.carbs * dailyIntake.serving).toFixed(2)), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 162\n            },\n            __self: this\n          }, \" \", (dailyIntake.food.protein * dailyIntake.serving).toFixed(2)), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 163\n            },\n            __self: this\n          }, \" \", (dailyIntake.food.sugar * dailyIntake.serving).toFixed(2)), React.createElement(\"td\", {\n            onClick: e => this.handleDeleteClick(e, dailyIntake),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 164\n            },\n            __self: this\n          }, \" \", React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 164\n            },\n            __self: this\n          }, \" \\u274C \"), \" \"));\n        });\n      }\n\n      return \"There is no food logged in..\";\n    };\n\n    const dinner = () => {\n      if (this.state.dailyIntakes) {\n        let arr = this.state.dailyIntakes.filter(dailyIntake => {\n          return dailyIntake.meal_type === 'dinner';\n        });\n        return arr.map(dailyIntake => {\n          return React.createElement(\"tr\", {\n            key: dailyIntake.food.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 178\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 179\n            },\n            __self: this\n          }, \" \", dailyIntake.food.name, \" \", React.createElement(\"button\", {\n            onClick: e => this.handleClick(e, dailyIntake),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 179\n            },\n            __self: this\n          }, \" Edit \"), \" \"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 180\n            },\n            __self: this\n          }, dailyIntake.serving, \" * (\", dailyIntake.food.serving_size, \" g)\"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 181\n            },\n            __self: this\n          }, \" \", dailyIntake.food.calorie * dailyIntake.serving), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 182\n            },\n            __self: this\n          }, \" \", (dailyIntake.food.fat * dailyIntake.serving).toFixed(2), \" \"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 183\n            },\n            __self: this\n          }, \" \", (dailyIntake.food.carbs * dailyIntake.serving).toFixed(2)), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 184\n            },\n            __self: this\n          }, \" \", (dailyIntake.food.protein * dailyIntake.serving).toFixed(2)), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 185\n            },\n            __self: this\n          }, \" \", (dailyIntake.food.sugar * dailyIntake.serving).toFixed(2)), React.createElement(\"td\", {\n            onClick: e => this.handleDeleteClick(e, dailyIntake),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 186\n            },\n            __self: this\n          }, \" \", React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 186\n            },\n            __self: this\n          }, \" \\u274C \"), \" \"));\n        });\n      }\n\n      return \"There is no food logged in..\";\n    };\n\n    const snacks = () => {\n      if (this.state.dailyIntakes) {\n        let arr = this.state.dailyIntakes.filter(dailyIntake => {\n          return dailyIntake.meal_type === 'snack';\n        });\n        return arr.map(dailyIntake => {\n          // debugger\n          return React.createElement(\"tr\", {\n            key: dailyIntake.food.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 203\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 205\n            },\n            __self: this\n          }, \" \", dailyIntake.food.name, \" \", React.createElement(\"button\", {\n            onClick: e => this.handleClick(e, dailyIntake),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 205\n            },\n            __self: this\n          }, \" Edit \")), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 206\n            },\n            __self: this\n          }, \" \", dailyIntake.serving, \" * (\", dailyIntake.food.serving_size, \" g)\"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 207\n            },\n            __self: this\n          }, \" \", dailyIntake.food.calorie * dailyIntake.serving), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 208\n            },\n            __self: this\n          }, \" \", (dailyIntake.food.fat * dailyIntake.serving).toFixed(2), \" \"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 209\n            },\n            __self: this\n          }, \" \", (dailyIntake.food.carbs * dailyIntake.serving).toFixed(2)), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 210\n            },\n            __self: this\n          }, \" \", (dailyIntake.food.protein * dailyIntake.serving).toFixed(2)), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 211\n            },\n            __self: this\n          }, \" \", (dailyIntake.food.sugar * dailyIntake.serving).toFixed(2)), React.createElement(\"td\", {\n            width: \"10%\",\n            onClick: e => this.handleDeleteClick(e, dailyIntake),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 213\n            },\n            __self: this\n          }, \" \", React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 213\n            },\n            __self: this\n          }, \" \\u274C \"), \" \"));\n        });\n      }\n\n      return \"There is no food logged in..\";\n    };\n\n    const totals = () => {\n      let totals = {\n        protein: 0,\n        sugar: 0,\n        carbs: 0,\n        fat: 0,\n        servings: 0,\n        calories: 0\n      };\n\n      if (this.state.dailyIntakes.length) {\n        this.state.dailyIntakes.forEach(i => {\n          totals.protein += i.user.total_protein;\n          totals.sugar += i.user.total_sugar;\n          totals.carbs += i.user.total_carbs;\n          totals.fat += i.user.total_fat;\n          totals.calories += i.user.total_calories;\n        });\n      }\n\n      return totals;\n    };\n\n    const remaining = () => {\n      let total = {\n        protein: 0,\n        sugar: 0,\n        carbs: 0,\n        fat: 0,\n        servings: 0,\n        calories: 0\n      };\n\n      if (this.state.dailyIntakes.length) {\n        this.state.dailyIntakes.forEach(i => {\n          totals.protein += i.user.remaining_protein;\n          totals.sugar += i.total_sugar;\n          totals.carbs += i.total_carbs;\n          totals.fat += i.total_fat;\n          totals.servings += i.serving;\n          totals.calories += i.total_calories;\n        });\n      }\n\n      return total;\n    };\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, \"Previous date\"), React.createElement(\"button\", {\n      onClick: this.fetchDailyIntake,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, \"Today :\", new Date().toLocaleDateString(), \" \"), this.state.editForm ? React.createElement(EditDailyIntake, {\n      handleChange: this.handleChange,\n      handleEditSubmit: this.handleEditSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }) : null, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      width: \"20%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }), React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, \"Serving\"), React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, \"Calorie ( kcal )\"), React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, \"Fat ( g )\"), React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, \"Carbs ( g )\"), React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, \"Protein ( g )\"), React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, \"Sugar ( g )\"), React.createElement(\"th\", {\n      width: \"5%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      width: \"0%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, \"Breakfast\")), breakfast(), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, \"Lunch\")), lunch(), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, \"Dinner\")), dinner(), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, \"Snack\")), snacks(), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, \"Total\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, totals().servings.toFixed(2)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, totals().calories.toFixed(2)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, totals().fat.toFixed(2)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, totals().carbs.toFixed(2)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, totals().protein.toFixed(2)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, totals().sugar.toFixed(2))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, \"Your daily goal  \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, current_user.goal_calorie), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, current_user.goal_fat), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, current_user.goal_carbs), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, current_user.goal_protein), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, current_user.goal_sugar)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, \"Remaining \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, current_user.remaining_calories), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, current_user.remaining_fat), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, current_user.remaining_carbs), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, current_user.remaining_protein), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, current_user.remaining_sugar)))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setUser: userObject => {\n      dispatch({\n        type: 'SET_USER',\n        payload: userObject\n      });\n    },\n    clearUser: () => {\n      dispatch({\n        type: 'CLEAR_USER'\n      });\n    }\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    current_user: state.user\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DailyIntake);","map":{"version":3,"sources":["/Users/flatironschool/Desktop/Projects/NutriTrack-App(Mod-5)/Frontend-NutriTrack/src/Pages/DailyIntake.js"],"names":["React","Component","connect","EditDailyIntake","DailyIntake","state","editForm","dailyIntake","serving","mealType","dailyIntakes","handleDeleteClick","e","dailyIntakeItem","console","log","fetch","id","method","then","res","newArray","filter","setState","handleClick","meal_type","fetchDailyIntake","config","headers","Authorization","localStorage","token","json","dailyIntakeItems","handleChange","target","name","value","handleEditSubmit","preventDefault","body","JSON","stringify","intake","newItem","map","intakeItem","componentDidMount","render","current_user","props","breakfast","arr","food","serving_size","calorie","fat","toFixed","carbs","protein","sugar","lunch","dinner","snacks","totals","servings","calories","length","forEach","i","user","total_protein","total_sugar","total_carbs","total_fat","total_calories","remaining","total","remaining_protein","Date","toLocaleDateString","goal_calorie","goal_fat","goal_carbs","goal_protein","goal_sugar","remaining_calories","remaining_fat","remaining_carbs","remaining_sugar","mapDispatchToProps","dispatch","setUser","userObject","type","payload","clearUser","mapStateToProps"],"mappings":"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","sourcesContent":["  \nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport EditDailyIntake from '../Components/EditDailyIntake'\n\nclass DailyIntake extends Component {\n state = {\n   editForm: false, \n   dailyIntake: {},\n   serving: null,\n   mealType: \"\", \n   dailyIntakes: []\n }\n\n\n// handleClick = (e, dailyIntakeItem) => {\n//   console.log(dailyIntakeItem.id)\n//   this.setState({\n//     show: false\n//   })\n//   fetch(`http://localhost:3000/daily_intakes/${dailyIntakeItem.id}`, {\n//      method: 'DELETE'\n//    })\n// }\n\nhandleDeleteClick = (e, dailyIntakeItem) => {\n   console.log(dailyIntakeItem)\n   fetch(`http://localhost:3000/daily_intakes/${dailyIntakeItem.id}`, {\n         method: 'DELETE'\n       }).then(res => {\n         const newArray = this.state.dailyIntakes.filter(dailyIntake =>{\n           return dailyIntake.id !== dailyIntakeItem.id\n          })\n          this.setState({\n           dailyIntakes: newArray\n         })\n        \n       })\n     \n}\n\n\nhandleClick = (e, dailyIntakeItem) => {\n//  console.log(dailyIntakeItem)\n this.setState({\n   editForm: !this.state.editForm,\n   dailyIntake: dailyIntakeItem,\n   serving: dailyIntakeItem.serving,\n   mealType: dailyIntakeItem.meal_type\n })\n}\n\ncomponentDidMount(){\n  this.fetchDailyIntake()\n}\n\nfetchDailyIntake =  () => {\n  const config = {\n    method: 'GET',\n    headers: {\n      Authorization: localStorage.token\n    }\n  }\n  fetch('http://localhost:3000/daily_intakes', config)\n  .then(res => res.json())\n  .then(dailyIntakeItems => {\n    console.log(dailyIntakeItems)\n   \n        this.setState({\n          dailyIntakes: dailyIntakeItems\n        })\n      \n\n  })\n}\n\nhandleChange = (e) =>{\n  // console.log(e.target.value)\n  this.setState({\n    [e.target.name] : e.target.value\n  })\n}\n\nhandleEditSubmit = (e) => {\n  e.preventDefault()\n  // console.log('submit')\n  fetch(`http://localhost:3000/daily_intakes/${this.state.dailyIntake.id}`, {\n    method: 'PATCH', \n    headers: {\n      'Content-Type': 'application/json',\n      'Accept':'application/json'\n    },\n    body: JSON.stringify({ \n     meal_type: this.state.mealType,\n     serving: this.state.serving\n    })\n  })\n  .then(res => res.json())\n  .then(intake => {\n    const newItem =  this.state.dailyIntakes.map(intakeItem => {\n        return intakeItem.id === intake.id ? intake : intakeItem\n    })\n    // this.props.setUser(user) \n    this.setState({\n      dailyIntake:  intake,\n      dailyIntakes:  newItem\n    })\n  })\n} \n\n render() {\n\n\n  // const date = (() => {\n  //   if (this.props.current_user.id && this.props.current_user.daily_intakes !==  undefined ){\n  //     return this.props.current_user.daily_intakes.map(dailyIntake => {\n  //       return new Date(dailyIntake.date).toLocaleDateString()\n  //     })\n  //   }\n  // })\n    \n  // console.log(this.props.current_user.daily_intakes)\n  // console.log(this.state.dailyIntakes)\n  // console.log(this.state.dailyIntake)\n  // console.log(this.state.dailyIntake)\n  // console.log(this.state.mealType, this.state.serving)\n   const  {current_user} =this.props\n\n    const breakfast = () => {\n        if(this.state.dailyIntakes) {\n            let arr = this.state.dailyIntakes.filter(dailyIntake => {\n                return dailyIntake.meal_type === 'breakfast'\n            }) \n            return arr.map(dailyIntake => {\n                return  <tr key={dailyIntake.food.id} >\n                  <td> {dailyIntake.food.name } <button onClick={(e) => this.handleClick(e, dailyIntake)}> Edit </button></td> \n                  <td>{dailyIntake.serving} * ({dailyIntake.food.serving_size} g)</td>\n                  <td> {dailyIntake.food.calorie * dailyIntake.serving}</td> \n                  <td> {(dailyIntake.food.fat * dailyIntake.serving).toFixed(2)} </td> \n                  <td> {(dailyIntake.food.carbs * dailyIntake.serving).toFixed(2)}</td> \n                  <td> {(dailyIntake.food.protein * dailyIntake.serving).toFixed(2)}</td> \n                  <td> {(dailyIntake.food.sugar * dailyIntake.serving).toFixed(2)}</td>\n                  <td onClick={(e) => this.handleDeleteClick(e, dailyIntake)}> <span> ❌ </span> </td>\n                  </tr>\n             })\n           }\n           return \"There is no food logged in..\"\n        }\n\n    const lunch = () => {\n        if(this.state.dailyIntakes) {\n            let arr = this.state.dailyIntakes.filter(dailyIntake => {\n                return dailyIntake.meal_type === 'lunch'\n            }) \n            return arr.map(dailyIntake => {\n                return  <tr key={dailyIntake.food.id}>\n                  <td>  {dailyIntake.food.name } <button onClick={(e) => this.handleClick(e, dailyIntake)}> Edit </button></td> \n                  <td>{dailyIntake.serving} * ({dailyIntake.food.serving_size} g)</td>\n                  <td> {dailyIntake.food.calorie * dailyIntake.serving}</td> \n                  <td> {(dailyIntake.food.fat * dailyIntake.serving).toFixed(2)} </td> \n                  <td> {(dailyIntake.food.carbs * dailyIntake.serving).toFixed(2)}</td> \n                  <td> {(dailyIntake.food.protein * dailyIntake.serving).toFixed(2)}</td> \n                  <td> {(dailyIntake.food.sugar * dailyIntake.serving).toFixed(2)}</td>\n                  <td onClick={(e) => this.handleDeleteClick(e, dailyIntake)}> <span> ❌ </span> </td>\n                </tr>\n             })\n           }\n           return \"There is no food logged in..\"\n        }\n\n    const dinner = () => {\n        if(this.state.dailyIntakes )  {\n            let arr = this.state.dailyIntakes.filter(dailyIntake => {\n                return dailyIntake.meal_type === 'dinner'\n\n            }) \n            return arr.map(dailyIntake => {\n                return  <tr key={dailyIntake.food.id} >\n                  <td> {dailyIntake.food.name } <button onClick={(e) => this.handleClick(e, dailyIntake)}> Edit </button> </td>\n            <td>{dailyIntake.serving} * ({dailyIntake.food.serving_size} g)</td>\n                  <td> {dailyIntake.food.calorie * dailyIntake.serving}</td> \n                  <td> {(dailyIntake.food.fat * dailyIntake.serving).toFixed(2)} </td> \n                  <td> {(dailyIntake.food.carbs * dailyIntake.serving).toFixed(2)}</td> \n                  <td> {(dailyIntake.food.protein * dailyIntake.serving).toFixed(2)}</td> \n                  <td> {(dailyIntake.food.sugar * dailyIntake.serving).toFixed(2)}</td>\n                  <td onClick={(e) => this.handleDeleteClick(e, dailyIntake)}> <span> ❌ </span> </td>\n                \n                </tr>\n              \n             })\n           }\n           return \"There is no food logged in..\"\n        }\n\n    const snacks = () => {\n        if(this.state.dailyIntakes) {\n            let arr = this.state.dailyIntakes.filter(dailyIntake => {\n                return dailyIntake.meal_type === 'snack'\n            }) \n           \n            return arr.map(dailyIntake => {\n              // debugger\n                return  <tr key={dailyIntake.food.id} >\n                  \n                <td> {dailyIntake.food.name } <button onClick={(e) => this.handleClick(e, dailyIntake)}> Edit </button></td> \n                <td> {dailyIntake.serving} * ({dailyIntake.food.serving_size} g)</td>\n                <td> {dailyIntake.food.calorie * dailyIntake.serving}</td> \n                <td> {(dailyIntake.food.fat * dailyIntake.serving).toFixed(2)} </td> \n                <td> {(dailyIntake.food.carbs * dailyIntake.serving).toFixed(2)}</td> \n                <td> {(dailyIntake.food.protein * dailyIntake.serving).toFixed(2)}</td> \n                <td> {(dailyIntake.food.sugar * dailyIntake.serving).toFixed(2)}</td>\n               \n                <td width=\"10%\" onClick={(e) => this.handleDeleteClick(e, dailyIntake)}> <span> ❌ </span> </td>\n                </tr>\n             })\n           }\n           return \"There is no food logged in..\"\n        }\n\n        const totals = () => {\n          let totals = {\n            protein: 0,\n            sugar: 0,\n            carbs: 0,\n            fat: 0,\n            servings: 0,\n            calories: 0\n          }\n          if (this.state.dailyIntakes.length){\n\n            this.state.dailyIntakes.forEach((i) => {\n              totals.protein += i.user.total_protein\n              totals.sugar += i.user.total_sugar \n              totals.carbs += i.user.total_carbs\n              totals.fat += i.user.total_fat\n              totals.calories += i.user.total_calories\n\n            })\n          }\n         return totals\n      }      \n      \n      \n      const remaining = () => {\n        let total = {\n          protein: 0,\n          sugar: 0,\n          carbs: 0,\n          fat: 0,\n          servings: 0,\n          calories: 0\n        }\n        if (this.state.dailyIntakes.length){\n   \n          this.state.dailyIntakes.forEach((i) => {\n            totals.protein += i.user.remaining_protein\n            totals.sugar += i.total_sugar \n            totals.carbs += i.total_carbs\n            totals.fat += i.total_fat\n            totals.servings += i.serving\n            totals.calories += i.total_calories\n\n          })\n        }\n       return total\n    }\n    \n  return(\n<div>\n  <button>Previous date</button>\n  \n  <button onClick={this.fetchDailyIntake}>Today :{new Date().toLocaleDateString()} </button>\n\n{ this.state.editForm ?  <EditDailyIntake handleChange={this.handleChange} handleEditSubmit={this.handleEditSubmit} /> : null }\n\n<table>\n    <thead>\n     <tr>\n        <th width=\"20%\"></th> \n        <th width=\"10%\">Serving</th>\n        <th width=\"10%\">Calorie ( kcal )</th> \n       \n        <th width=\"10%\">Fat ( g )</th>\n        <th width=\"10%\">Carbs ( g )</th>\n        <th width=\"10%\">Protein ( g )</th>\n        <th width=\"10%\">Sugar ( g )</th>\n        <th width=\"5%\"></th>\n       \n     </tr>\n    </thead>\n    <tbody>\n        \n    <tr>\n      <th width=\"0%\">Breakfast</th>\n    </tr> \n      {breakfast() }\n      \n      \n    <tr>\n      <th width=\"10%\">Lunch</th> \n    </tr>\n     {lunch()}\n    <tr>\n      <th width=\"10%\">Dinner</th> \n    </tr>\n     {dinner()}\n  \n    <tr>\n      <th width=\"10%\">Snack</th> \n    </tr>\n      {snacks()} \n     <tr>\n       </tr> \n    <tr>\n      \n      <th>\n        Total\n      </th>\n\n        <td>{(totals().servings).toFixed(2)}</td>\n        <td>{(totals().calories).toFixed(2)}</td>\n        <td>{(totals().fat).toFixed(2)}</td>\n        <td>{(totals().carbs).toFixed(2)}</td>\n        <td>{(totals().protein).toFixed(2)}</td>\n        <td>{(totals().sugar).toFixed(2)}</td>\n        \n    </tr>\n    <tr>\n      <th>Your daily goal  </th>\n      <td></td>\n      <td>{current_user.goal_calorie}</td>\n      <td>{current_user.goal_fat}</td>\n      <td>{current_user.goal_carbs}</td>\n      <td>{current_user.goal_protein}</td>\n      <td>{current_user.goal_sugar}</td>\n    </tr>\n    <tr>\n    <th>Remaining </th>\n   \n      <td></td>\n      <td>{current_user.remaining_calories}</td>\n      <td>{current_user.remaining_fat}</td>\n      <td>{current_user.remaining_carbs}</td>\n      <td>{current_user.remaining_protein}</td>\n      <td>{current_user.remaining_sugar}</td>\n    </tr>\n    </tbody>\n </table>\n </div>\n    )\n   }\n }\n\n const mapDispatchToProps = (dispatch) =>{\n return {\n  setUser: (userObject) => {\n    dispatch({\n        type: 'SET_USER', payload: userObject\n      })\n  }, \n  clearUser: () => {\n   dispatch({\n     type: 'CLEAR_USER'\n   })\n  }\n}\n}\n\nconst mapStateToProps = (state) => {\nreturn {\n  current_user: state.user\n}\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DailyIntake)"]},"metadata":{},"sourceType":"module"}