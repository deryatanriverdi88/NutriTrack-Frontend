{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Desktop/Projects/NutriTrack-App(Mod-5)/Frontend-NutriTrack/src/Pages/DailyIntake.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport EditDailyIntake from '../Components/EditDailyIntake';\n\nclass DailyIntake extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      editForm: false,\n      dailyIntake: {},\n      serving: null,\n      mealType: \"\",\n      dailyIntakes: []\n    };\n\n    this.handleClick = (e, dailyIntakeItem) => {\n      //  console.log(dailyIntakeItem)\n      this.setState({\n        editForm: !this.state.editForm,\n        dailyIntake: dailyIntakeItem,\n        serving: dailyIntakeItem.serving,\n        mealType: dailyIntakeItem.meal_type\n      });\n    };\n\n    this.fetchDailyIntake = () => {\n      const config = {\n        method: 'GET',\n        headers: {\n          Authorization: localStorage.token\n        }\n      };\n      fetch('http://localhost:3000/daily_intakes', config).then(res => res.json()).then(dailyIntakeItems => {\n        console.log(dailyIntakeItems);\n        this.setState({\n          dailyIntakes: dailyIntakeItems\n        }, () => console.log(\"state ----- \", this.state));\n      });\n    };\n\n    this.handleChange = e => {\n      // console.log(e.target.value)\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleEditSubmit = e => {\n      e.preventDefault(); // console.log('submit')\n\n      fetch(\"http://localhost:3000/daily_intakes/\".concat(this.state.dailyIntake.id), {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n          meal_type: this.state.mealType,\n          serving: this.state.serving\n        })\n      }).then(res => res.json()).then(intake => {\n        const newItem = this.state.dailyIntakes.map(intakeItem => {\n          return intakeItem.id === intake.id ? intake : intakeItem;\n        }); // this.props.setUser(user) \n\n        this.setState({\n          dailyIntake: intake,\n          dailyIntakes: newItem\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchDailyIntake();\n  }\n\n  render() {\n    // const date = (() => {\n    //   if (this.props.current_user.id && this.props.current_user.daily_intakes !==  undefined ){\n    //     return this.props.current_user.daily_intakes.map(dailyIntake => {\n    //       return new Date(dailyIntake.date).toLocaleDateString()\n    //     })\n    //   }\n    // }) \n    if (this.state.dail) console.log(this.state.dailyIntakes[0].user); // console.log(this.props.current_user.daily_intakes)\n    // console.log(this.state.dailyIntakes)\n    // console.log(this.state.dailyIntake)\n    // console.log(this.state.dailyIntake)\n    // console.log(this.state.mealType, this.state.serving)\n\n    const current_user = this.props.current_user;\n\n    const breakfast = () => {\n      if (this.props.current_user.id && this.state.dailyIntakes) {\n        let arr = this.state.dailyIntakes.filter(dailyIntake => {\n          return dailyIntake.meal_type === 'breakfast';\n        });\n        return arr.map(dailyIntake => {\n          return React.createElement(\"tr\", {\n            key: dailyIntake.food.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121\n            },\n            __self: this\n          }, \" \", dailyIntake.food.name, \" \", React.createElement(\"button\", {\n            onClick: e => this.handleClick(e, dailyIntake),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121\n            },\n            __self: this\n          }, \" Edit \")), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122\n            },\n            __self: this\n          }, dailyIntake.serving, \" * (\", dailyIntake.food.serving_size, \" g)\"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123\n            },\n            __self: this\n          }, \" \", dailyIntake.food.calorie * dailyIntake.serving), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124\n            },\n            __self: this\n          }, \" \", (dailyIntake.food.fat * dailyIntake.serving).toFixed(2), \" \"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125\n            },\n            __self: this\n          }, \" \", (dailyIntake.food.carbs * dailyIntake.serving).toFixed(2)), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126\n            },\n            __self: this\n          }, \" \", (dailyIntake.food.protein * dailyIntake.serving).toFixed(2)), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127\n            },\n            __self: this\n          }, \" \", (dailyIntake.food.sugar * dailyIntake.serving).toFixed(2)));\n        });\n      }\n\n      return \"There is no food logged in..\";\n    };\n\n    const lunch = () => {\n      if (this.props.current_user.id && this.state.dailyIntakes) {\n        let arr = this.state.dailyIntakes.filter(dailyIntake => {\n          return dailyIntake.meal_type === 'lunch';\n        });\n        return arr.map(dailyIntake => {\n          return React.createElement(\"tr\", {\n            key: dailyIntake.food.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 141\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 142\n            },\n            __self: this\n          }, \"  \", dailyIntake.food.name, \" \", React.createElement(\"button\", {\n            onClick: e => this.handleClick(e, dailyIntake),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 142\n            },\n            __self: this\n          }, \" Edit \")), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 143\n            },\n            __self: this\n          }, dailyIntake.serving, \" * (\", dailyIntake.food.serving_size, \" g)\"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 144\n            },\n            __self: this\n          }, \" \", dailyIntake.food.calorie * dailyIntake.serving), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 145\n            },\n            __self: this\n          }, \" \", (dailyIntake.food.fat * dailyIntake.serving).toFixed(2), \" \"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 146\n            },\n            __self: this\n          }, \" \", (dailyIntake.food.carbs * dailyIntake.serving).toFixed(2)), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 147\n            },\n            __self: this\n          }, \" \", (dailyIntake.food.protein * dailyIntake.serving).toFixed(2)), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 148\n            },\n            __self: this\n          }, \" \", (dailyIntake.food.sugar * dailyIntake.serving).toFixed(2)));\n        });\n      }\n\n      return \"There is no food logged in..\";\n    };\n\n    const dinner = () => {\n      if (this.props.current_user.id && this.state.dailyIntakes) {\n        let arr = this.state.dailyIntakes.filter(dailyIntake => {\n          return dailyIntake.meal_type === 'dinner';\n        });\n        return arr.map(dailyIntake => {\n          return React.createElement(\"tr\", {\n            key: dailyIntake.food.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 163\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 164\n            },\n            __self: this\n          }, \" \", dailyIntake.food.name, \" \", React.createElement(\"button\", {\n            onClick: e => this.handleClick(e, dailyIntake),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 164\n            },\n            __self: this\n          }, \" Edit \"), \" \"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 165\n            },\n            __self: this\n          }, dailyIntake.serving, \" * (\", dailyIntake.food.serving_size, \" g)\"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 166\n            },\n            __self: this\n          }, \" \", dailyIntake.food.calorie * dailyIntake.serving), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 167\n            },\n            __self: this\n          }, \" \", (dailyIntake.food.fat * dailyIntake.serving).toFixed(2), \" \"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 168\n            },\n            __self: this\n          }, \" \", (dailyIntake.food.carbs * dailyIntake.serving).toFixed(2)), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 169\n            },\n            __self: this\n          }, \" \", (dailyIntake.food.protein * dailyIntake.serving).toFixed(2)), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 170\n            },\n            __self: this\n          }, \" \", (dailyIntake.food.sugar * dailyIntake.serving).toFixed(2)));\n        });\n      }\n\n      return \"There is no food logged in..\";\n    };\n\n    const snacks = () => {\n      if (this.props.current_user.id && this.state.dailyIntakes) {\n        let arr = this.state.dailyIntakes.filter(dailyIntake => {\n          return dailyIntake.meal_type === 'snack';\n        });\n        return arr.map(dailyIntake => {\n          // debugger\n          return React.createElement(\"tr\", {\n            key: dailyIntake.food.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 188\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 190\n            },\n            __self: this\n          }, \" \", dailyIntake.food.name, \" \", React.createElement(\"button\", {\n            onClick: e => this.handleClick(e, dailyIntake),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 190\n            },\n            __self: this\n          }, \" Edit \")), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 191\n            },\n            __self: this\n          }, \" \", dailyIntake.serving, \" * (\", dailyIntake.food.serving_size, \" g)\"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 192\n            },\n            __self: this\n          }, \" \", dailyIntake.food.calorie * dailyIntake.serving), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 193\n            },\n            __self: this\n          }, \" \", (dailyIntake.food.fat * dailyIntake.serving).toFixed(2), \" \"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 194\n            },\n            __self: this\n          }, \" \", (dailyIntake.food.carbs * dailyIntake.serving).toFixed(2)), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 195\n            },\n            __self: this\n          }, \" \", (dailyIntake.food.protein * dailyIntake.serving).toFixed(2)), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 196\n            },\n            __self: this\n          }, \" \", (dailyIntake.food.sugar * dailyIntake.serving).toFixed(2)));\n        });\n      }\n\n      return \"There is no food logged in..\";\n    };\n\n    const totals = () => {\n      if (this.state.dailyIntakes) {\n        this.state.dailyIntakes.map(dailyIntake => {\n          return React.createElement(React.Fragment, null, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 208\n            },\n            __self: this\n          }, \" \", dailyIntake.user.total_servings), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 209\n            },\n            __self: this\n          }, \" \", dailyIntake.user.total_calories), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 210\n            },\n            __self: this\n          }, \" \", dailyIntake.user.total_fat, \" \"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 211\n            },\n            __self: this\n          }, \" \", dailyIntake.user.total_carbs), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 212\n            },\n            __self: this\n          }, \" \", dailyIntake.user.total_protein), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 213\n            },\n            __self: this\n          }, \" \", dailyIntake.user.total_sugar));\n        });\n      }\n\n      return \"no food\";\n    };\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \"Previous date\"), React.createElement(\"button\", {\n      onClick: this.fetchDailyIntake,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, \"Today :\", new Date().toLocaleDateString(), \" \"), this.state.editForm ? React.createElement(EditDailyIntake, {\n      handleChange: this.handleChange,\n      handleEditSubmit: this.handleEditSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }) : null, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }), React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \"Serving\"), React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, \"Calorie ( kcal )\"), React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, \"Fat ( g )\"), React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, \"Carbs ( g )\"), React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, \"Protein ( g )\"), React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, \"Sugar ( g )\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, \"Breakfast\")), breakfast(), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, \"Lunch\")), lunch(), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, \"Dinner\")), dinner(), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, \"Snack\")), snacks(), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, \"Total\"), totals()), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, \"Your daily goal  \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, current_user.goal_calorie), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, current_user.goal_fat), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, current_user.goal_carbs), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, current_user.goal_protein), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, current_user.goal_sugar)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, \"Remaining \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, current_user.remaining_calories), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, current_user.remaining_fat), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, current_user.remaining_carbs), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, current_user.remaining_protein), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, current_user.remaining_sugar)))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setUser: userObject => {\n      dispatch({\n        type: 'SET_USER',\n        payload: userObject\n      });\n    },\n    clearUser: () => {\n      dispatch({\n        type: 'CLEAR_USER'\n      });\n    }\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    current_user: state.user\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DailyIntake);","map":{"version":3,"sources":["/Users/flatironschool/Desktop/Projects/NutriTrack-App(Mod-5)/Frontend-NutriTrack/src/Pages/DailyIntake.js"],"names":["React","Component","connect","EditDailyIntake","DailyIntake","state","editForm","dailyIntake","serving","mealType","dailyIntakes","handleClick","e","dailyIntakeItem","setState","meal_type","fetchDailyIntake","config","method","headers","Authorization","localStorage","token","fetch","then","res","json","dailyIntakeItems","console","log","handleChange","target","name","value","handleEditSubmit","preventDefault","id","body","JSON","stringify","intake","newItem","map","intakeItem","componentDidMount","render","dail","user","current_user","props","breakfast","arr","filter","food","serving_size","calorie","fat","toFixed","carbs","protein","sugar","lunch","dinner","snacks","totals","total_servings","total_calories","total_fat","total_carbs","total_protein","total_sugar","Date","toLocaleDateString","goal_calorie","goal_fat","goal_carbs","goal_protein","goal_sugar","remaining_calories","remaining_fat","remaining_carbs","remaining_protein","remaining_sugar","mapDispatchToProps","dispatch","setUser","userObject","type","payload","clearUser","mapStateToProps"],"mappings":"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","sourcesContent":["  \nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport EditDailyIntake from '../Components/EditDailyIntake'\n\nclass DailyIntake extends Component {\n state = {\n   editForm: false, \n   dailyIntake: {},\n   serving: null,\n   mealType: \"\", \n   dailyIntakes: []\n }\n\n\n// handleClick = (e, dailyIntakeItem) => {\n//   console.log(dailyIntakeItem.id)\n//   this.setState({\n//     show: false\n//   })\n//   fetch(`http://localhost:3000/daily_intakes/${dailyIntakeItem.id}`, {\n//      method: 'DELETE'\n//    })\n// }\n\n\nhandleClick = (e, dailyIntakeItem) => {\n//  console.log(dailyIntakeItem)\n this.setState({\n   editForm: !this.state.editForm,\n   dailyIntake: dailyIntakeItem,\n   serving: dailyIntakeItem.serving,\n   mealType: dailyIntakeItem.meal_type\n })\n}\n\ncomponentDidMount(){\n  this.fetchDailyIntake()\n}\n\nfetchDailyIntake =  () => {\n  const config = {\n    method: 'GET',\n    headers: {\n      Authorization: localStorage.token\n    }\n  }\n  fetch('http://localhost:3000/daily_intakes', config)\n  .then(res => res.json())\n  .then(dailyIntakeItems => {\n    console.log(dailyIntakeItems)\n   \n        this.setState({\n          dailyIntakes: dailyIntakeItems\n        }, () => console.log(\"state ----- \", this.state))\n      \n\n  })\n}\n\nhandleChange = (e) =>{\n  // console.log(e.target.value)\n  this.setState({\n    [e.target.name] : e.target.value\n  })\n}\n\nhandleEditSubmit = (e) => {\n  e.preventDefault()\n  // console.log('submit')\n  fetch(`http://localhost:3000/daily_intakes/${this.state.dailyIntake.id}`, {\n    method: 'PATCH', \n    headers: {\n      'Content-Type': 'application/json',\n      'Accept':'application/json'\n    },\n    body: JSON.stringify({ \n     meal_type: this.state.mealType,\n     serving: this.state.serving\n    })\n  })\n  .then(res => res.json())\n  .then(intake => {\n    const newItem =  this.state.dailyIntakes.map(intakeItem => {\n        return intakeItem.id === intake.id ? intake : intakeItem\n    })\n    // this.props.setUser(user) \n    this.setState({\n      dailyIntake:  intake,\n      dailyIntakes:  newItem\n    })\n  })\n} \n\n render() {\n\n\n  // const date = (() => {\n  //   if (this.props.current_user.id && this.props.current_user.daily_intakes !==  undefined ){\n  //     return this.props.current_user.daily_intakes.map(dailyIntake => {\n  //       return new Date(dailyIntake.date).toLocaleDateString()\n  //     })\n  //   }\n  // }) \n  if(this.state.dail)\n     console.log(this.state.dailyIntakes[0].user)\n  // console.log(this.props.current_user.daily_intakes)\n  // console.log(this.state.dailyIntakes)\n  // console.log(this.state.dailyIntake)\n  // console.log(this.state.dailyIntake)\n  // console.log(this.state.mealType, this.state.serving)\n   const  {current_user} =this.props\n\n    const breakfast = () => {\n        if(this.props.current_user.id && this.state.dailyIntakes) {\n            let arr = this.state.dailyIntakes.filter(dailyIntake => {\n                return dailyIntake.meal_type === 'breakfast'\n            }) \n            return arr.map(dailyIntake => {\n                return  <tr key={dailyIntake.food.id} >\n                  <td> {dailyIntake.food.name } <button onClick={(e) => this.handleClick(e, dailyIntake)}> Edit </button></td> \n                  <td>{dailyIntake.serving} * ({dailyIntake.food.serving_size} g)</td>\n                  <td> {dailyIntake.food.calorie * dailyIntake.serving}</td> \n                  <td> {(dailyIntake.food.fat * dailyIntake.serving).toFixed(2)} </td> \n                  <td> {(dailyIntake.food.carbs * dailyIntake.serving).toFixed(2)}</td> \n                  <td> {(dailyIntake.food.protein * dailyIntake.serving).toFixed(2)}</td> \n                  <td> {(dailyIntake.food.sugar * dailyIntake.serving).toFixed(2)}</td>\n                  {/* <td onClick={(e) => this.handleClick(e, dailyIntake)}> <span> ❌ </span> </td> */}\n                  </tr>\n             })\n           }\n           return \"There is no food logged in..\"\n        }\n\n    const lunch = () => {\n        if(this.props.current_user.id && this.state.dailyIntakes) {\n            let arr = this.state.dailyIntakes.filter(dailyIntake => {\n                return dailyIntake.meal_type === 'lunch'\n            }) \n            return arr.map(dailyIntake => {\n                return  <tr key={dailyIntake.food.id}>\n                  <td>  {dailyIntake.food.name } <button onClick={(e) => this.handleClick(e, dailyIntake)}> Edit </button></td> \n                  <td>{dailyIntake.serving} * ({dailyIntake.food.serving_size} g)</td>\n                  <td> {dailyIntake.food.calorie * dailyIntake.serving}</td> \n                  <td> {(dailyIntake.food.fat * dailyIntake.serving).toFixed(2)} </td> \n                  <td> {(dailyIntake.food.carbs * dailyIntake.serving).toFixed(2)}</td> \n                  <td> {(dailyIntake.food.protein * dailyIntake.serving).toFixed(2)}</td> \n                  <td> {(dailyIntake.food.sugar * dailyIntake.serving).toFixed(2)}</td>\n                  {/* <td onClick={(e) => this.handleClick(e, dailyIntake)}> <span> ❌ </span> </td> */}\n                </tr>\n             })\n           }\n           return \"There is no food logged in..\"\n        }\n\n    const dinner = () => {\n        if(this.props.current_user.id && this.state.dailyIntakes )  {\n            let arr = this.state.dailyIntakes.filter(dailyIntake => {\n                return dailyIntake.meal_type === 'dinner'\n\n            }) \n            return arr.map(dailyIntake => {\n                return  <tr key={dailyIntake.food.id} >\n                  <td> {dailyIntake.food.name } <button onClick={(e) => this.handleClick(e, dailyIntake)}> Edit </button> </td>\n            <td>{dailyIntake.serving} * ({dailyIntake.food.serving_size} g)</td>\n                  <td> {dailyIntake.food.calorie * dailyIntake.serving}</td> \n                  <td> {(dailyIntake.food.fat * dailyIntake.serving).toFixed(2)} </td> \n                  <td> {(dailyIntake.food.carbs * dailyIntake.serving).toFixed(2)}</td> \n                  <td> {(dailyIntake.food.protein * dailyIntake.serving).toFixed(2)}</td> \n                  <td> {(dailyIntake.food.sugar * dailyIntake.serving).toFixed(2)}</td>\n                  {/* <td onClick={(e) => this.handleClick(e, dailyIntake)}> <span> ❌ </span> </td> */}\n                \n                </tr>\n              \n             })\n           }\n           return \"There is no food logged in..\"\n        }\n\n    const snacks = () => {\n        if(this.props.current_user.id && this.state.dailyIntakes) {\n            let arr = this.state.dailyIntakes.filter(dailyIntake => {\n                return dailyIntake.meal_type === 'snack'\n            }) \n           \n            return arr.map(dailyIntake => {\n              // debugger\n                return  <tr key={dailyIntake.food.id} >\n                  \n                <td> {dailyIntake.food.name } <button onClick={(e) => this.handleClick(e, dailyIntake)}> Edit </button></td> \n                <td> {dailyIntake.serving} * ({dailyIntake.food.serving_size} g)</td>\n                <td> {dailyIntake.food.calorie * dailyIntake.serving}</td> \n                <td> {(dailyIntake.food.fat * dailyIntake.serving).toFixed(2)} </td> \n                <td> {(dailyIntake.food.carbs * dailyIntake.serving).toFixed(2)}</td> \n                <td> {(dailyIntake.food.protein * dailyIntake.serving).toFixed(2)}</td> \n                <td> {(dailyIntake.food.sugar * dailyIntake.serving).toFixed(2)}</td>\n               \n                {/* <td onClick={(e) => this.handleClick(e, dailyIntake)}> <span> ❌ </span> </td> */}\n                </tr>\n             })\n           }\n           return \"There is no food logged in..\"\n        }\n\n        const totals = () => {\n          if(this.state.dailyIntakes) {\n           this.state.dailyIntakes.map(dailyIntake => {\n                  return <><td> {dailyIntake.user.total_servings}</td>\n                  <td> {dailyIntake.user.total_calories}</td> \n                  <td> {dailyIntake.user.total_fat} </td> \n                  <td> {dailyIntake.user.total_carbs}</td> \n                  <td> {dailyIntake.user.total_protein}</td> \n                  <td> {dailyIntake.user.total_sugar}</td></>\n                 \n              }) \n            }\n            return \"no food\"\n          }\n        \n    \n        \n    \n  return(\n<div>\n  <button>Previous date</button>\n  \n  <button onClick={this.fetchDailyIntake}>Today :{new Date().toLocaleDateString()} </button>\n\n{ this.state.editForm ?  <EditDailyIntake handleChange={this.handleChange} handleEditSubmit={this.handleEditSubmit} /> : null }\n\n<table>\n    <thead>\n     <tr>\n        <th width=\"10%\"></th> \n        <th width=\"10%\">Serving</th>\n        <th width=\"10%\">Calorie ( kcal )</th> \n       \n        <th width=\"10%\">Fat ( g )</th>\n        <th width=\"10%\">Carbs ( g )</th>\n        <th width=\"10%\">Protein ( g )</th>\n        <th width=\"10%\">Sugar ( g )</th>\n       \n     </tr>\n    </thead>\n    <tbody>\n        \n    <tr>\n      <th width=\"10%\">Breakfast</th>\n    </tr> \n      {breakfast() }\n      \n      \n    <tr>\n      <th width=\"10%\">Lunch</th> \n    </tr>\n     {lunch()}\n    <tr>\n      <th width=\"10%\">Dinner</th> \n    </tr>\n     {dinner()}\n  \n    <tr>\n      <th width=\"10%\">Snack</th> \n    </tr>\n      {snacks()} \n     <tr>\n       </tr> \n    <tr>\n      \n      <th>\n        Total\n      </th>\n\n       {totals()}\n        {/* <td>{current_user.total_servings}</td>\n        <td>{current_user.total_calories}</td>\n        <td>{current_user.total_fat}</td>\n        <td>{current_user.total_carbs}</td>\n        <td>{current_user.total_protein}</td>\n        <td>{current_user.total_sugar}</td> */}\n        \n    </tr>\n    <tr>\n      <th>Your daily goal  </th>\n      <td></td>\n      <td>{current_user.goal_calorie}</td>\n      <td>{current_user.goal_fat}</td>\n      <td>{current_user.goal_carbs}</td>\n      <td>{current_user.goal_protein}</td>\n      <td>{current_user.goal_sugar}</td>\n    </tr>\n    <tr>\n    <th>Remaining </th>\n      <td></td>\n      <td>{current_user.remaining_calories}</td>\n      <td>{current_user.remaining_fat}</td>\n      <td>{current_user.remaining_carbs}</td>\n      <td>{current_user.remaining_protein}</td>\n      <td>{current_user.remaining_sugar}</td>\n    </tr>\n    </tbody>\n </table>\n </div>\n    )\n   }\n }\n\n const mapDispatchToProps = (dispatch) =>{\n return {\n  setUser: (userObject) => {\n    dispatch({\n        type: 'SET_USER', payload: userObject\n      })\n  }, \n  clearUser: () => {\n   dispatch({\n     type: 'CLEAR_USER'\n   })\n  }\n}\n}\n\nconst mapStateToProps = (state) => {\nreturn {\n  current_user: state.user\n}\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DailyIntake)"]},"metadata":{},"sourceType":"module"}