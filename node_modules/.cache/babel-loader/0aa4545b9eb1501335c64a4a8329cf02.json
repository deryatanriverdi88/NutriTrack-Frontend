{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Desktop/Projects/NutriTrack-App(Mod-5)/Frontend-NutriTrack/src/Pages/DailyIntake.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass DailyIntake extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dailyIntake: {}\n    };\n\n    this.handleClick = (e, dailyIntakeItem) => {\n      console.log(dailyIntakeItem);\n      this.setState({\n        dailyIntake: dailyIntakeItem\n      });\n    };\n  }\n\n  render() {\n    console.log(this.props.current_user.daily_intakes);\n    const current_user = this.props.current_user;\n\n    const breakfast = () => {\n      if (this.props.current_user.id && this.props.current_user.daily_intakes) {\n        let arr = this.props.current_user.daily_intakes.filter(dailyIntake => {\n          return dailyIntake.meal_type === 'breakfast';\n        });\n        return arr.map(dailyIntake => {\n          return React.createElement(\"tr\", {\n            key: dailyIntake.food.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32\n            },\n            __self: this\n          }, \" \", dailyIntake.food.name), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33\n            },\n            __self: this\n          }, dailyIntake.serving), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34\n            },\n            __self: this\n          }, \" \", dailyIntake.food.calorie), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }, \" \", dailyIntake.food.fat, \" \"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          }, \" \", dailyIntake.food.carbs), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37\n            },\n            __self: this\n          }, dailyIntake.food.protein), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38\n            },\n            __self: this\n          }, \" \", dailyIntake.food.sugar), React.createElement(\"td\", {\n            onClick: () => this.handleClick(dailyIntake),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          }, \" \", React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          }, \" \\u274C \"), \" \"));\n        });\n      }\n\n      return \"There is no food logged in..\";\n    };\n\n    const lunch = () => {\n      if (this.props.current_user.id && this.props.current_user.daily_intakes) {\n        let arr = this.props.current_user.daily_intakes.filter(dailyIntake => {\n          return dailyIntake.meal_type === 'lunch';\n        });\n        return arr.map(dailyIntake => {\n          return React.createElement(\"tr\", {\n            key: dailyIntake.food.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }, \" \", dailyIntake.food.name), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          }, dailyIntake.serving), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }, \" \", dailyIntake.food.calorie), \" \", React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }, \" \", dailyIntake.food.fat, \" \"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          }, \" \", dailyIntake.food.carbs), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          }, \" \", dailyIntake.food.protein), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          }, \" \", dailyIntake.food.sugar), React.createElement(\"td\", {\n            onClick: () => this.handleClick(dailyIntake),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }, \" \", React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }, \" \\u274C \"), \" \"));\n        });\n      }\n\n      return \"There is no food logged in..\";\n    };\n\n    const dinner = () => {\n      if (this.props.current_user.id && this.props.current_user.daily_intakes) {\n        let arr = this.props.current_user.daily_intakes.filter(dailyIntake => {\n          return dailyIntake.meal_type === 'dinner';\n        });\n        return arr.map(dailyIntake => {\n          return React.createElement(\"tr\", {\n            key: dailyIntake.food.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74\n            },\n            __self: this\n          }, \" \", dailyIntake.food.name), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75\n            },\n            __self: this\n          }, dailyIntake.serving), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, \" \", dailyIntake.food.calorie), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          }, \" \", dailyIntake.food.fat, \" \"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            },\n            __self: this\n          }, \" \", dailyIntake.food.carbs), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }, \" \", dailyIntake.food.protein), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          }, \" \", dailyIntake.food.sugar), React.createElement(\"td\", {\n            onClick: e => this.handleClick(e, dailyIntake),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81\n            },\n            __self: this\n          }, \" X \"));\n        });\n      }\n\n      return \"There is no food logged in..\";\n    };\n\n    const snacks = () => {\n      if (this.props.current_user.id && this.props.current_user.daily_intakes) {\n        let arr = this.props.current_user.daily_intakes.filter(dailyIntake => {\n          return dailyIntake.meal_type === 'snack';\n        });\n        return arr.map(dailyIntake => {\n          return React.createElement(\"tr\", {\n            key: dailyIntake.food.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97\n            },\n            __self: this\n          }, \" \", dailyIntake.food.name), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98\n            },\n            __self: this\n          }, dailyIntake.serving), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99\n            },\n            __self: this\n          }, \" \", dailyIntake.food.calorie), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100\n            },\n            __self: this\n          }, \" \", dailyIntake.food.fat, \" \"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101\n            },\n            __self: this\n          }, \" \", dailyIntake.food.carbs), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102\n            },\n            __self: this\n          }, \" \", dailyIntake.food.protein), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 103\n            },\n            __self: this\n          }, \" \", dailyIntake.food.sugar), React.createElement(\"td\", {\n            onClick: () => this.handleClick(dailyIntake),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104\n            },\n            __self: this\n          }, \" \", React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104\n            },\n            __self: this\n          }, \" \\u274C \"), \" \"));\n        });\n      }\n\n      return \"There is no food logged in..\";\n    };\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Serving\"), React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Calorie ( kcal )\"), React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Fat ( g )\"), React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Carbs ( g )\"), React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Protein ( g )\"), React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Sugar ( g )\"), React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Breakfast\")), breakfast(), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Lunch\")), lunch(), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Dinner\")), dinner(), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Snack\")), snacks(), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Total\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, current_user.total_servings), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, current_user.total_calories), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, current_user.total_fat), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, current_user.total_carbs), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, current_user.total_protein), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, current_user.total_sugar)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Your daily goal  \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, current_user.goal_calorie), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, current_user.goal_fat), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, current_user.goal_carbs), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, current_user.goal_protein), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, current_user.goal_sugar)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Remaining \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, current_user.remaining_calories), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, current_user.remaining_fat), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, current_user.remaining_carbs), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, current_user.remaining_protein), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, current_user.remaining_sugar)))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    current_user: state.user\n  };\n};\n\nexport default connect(mapStateToProps)(DailyIntake);","map":{"version":3,"sources":["/Users/flatironschool/Desktop/Projects/NutriTrack-App(Mod-5)/Frontend-NutriTrack/src/Pages/DailyIntake.js"],"names":["React","Component","connect","DailyIntake","state","dailyIntake","handleClick","e","dailyIntakeItem","console","log","setState","render","props","current_user","daily_intakes","breakfast","id","arr","filter","meal_type","map","food","name","serving","calorie","fat","carbs","protein","sugar","lunch","dinner","snacks","total_servings","total_calories","total_fat","total_carbs","total_protein","total_sugar","goal_calorie","goal_fat","goal_carbs","goal_protein","goal_sugar","remaining_calories","remaining_fat","remaining_carbs","remaining_protein","remaining_sugar","mapStateToProps","user"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nclass DailyIntake extends Component {\n state = {\n   dailyIntake: {}\n\n }\n\nhandleClick = (e, dailyIntakeItem) => {\n  console.log(dailyIntakeItem)\n  this.setState({\n    dailyIntake: dailyIntakeItem\n  },\n  \n  )\n}\n\n \n render() {\n    \n     console.log(this.props.current_user.daily_intakes)\n   const  {current_user} =this.props\n\n    const breakfast = () => {\n        if(this.props.current_user.id && this.props.current_user.daily_intakes) {\n            let arr = this.props.current_user.daily_intakes.filter(dailyIntake => {\n                return dailyIntake.meal_type === 'breakfast'\n            }) \n            return arr.map(dailyIntake => {\n                return  <tr key={dailyIntake.food.id}>\n                  <td > {dailyIntake.food.name }</td> \n                  <td>{dailyIntake.serving}</td>\n                  <td> {dailyIntake.food.calorie}</td> \n                  <td> {dailyIntake.food.fat} </td> \n                  <td> {dailyIntake.food.carbs}</td> \n                  <td>{dailyIntake.food.protein}</td> \n                  <td> {dailyIntake.food.sugar}</td>\n                  <td onClick={() => this.handleClick(dailyIntake)}> <span> ❌ </span> </td>\n                  </tr>\n             })\n           }\n           return \"There is no food logged in..\"\n        }\n\n    const lunch = () => {\n        if(this.props.current_user.id && this.props.current_user.daily_intakes) {\n            let arr = this.props.current_user.daily_intakes.filter(dailyIntake => {\n                return dailyIntake.meal_type === 'lunch'\n            }) \n            return arr.map(dailyIntake => {\n                return  <tr key={dailyIntake.food.id}>\n                  <td> {dailyIntake.food.name }</td> \n                  <td>{dailyIntake.serving}</td>\n                  <td> {dailyIntake.food.calorie}</td> <td> {dailyIntake.food.fat} </td> \n                  <td> {dailyIntake.food.carbs}</td> \n                  <td> {dailyIntake.food.protein}</td> \n                  <td> {dailyIntake.food.sugar}</td>\n                  <td onClick={() => this.handleClick(dailyIntake)}> <span> ❌ </span> </td>\n                </tr>\n             })\n           }\n           return \"There is no food logged in..\"\n        }\n\n    const dinner = () => {\n        if(this.props.current_user.id && this.props.current_user.daily_intakes)  {\n            let arr = this.props.current_user.daily_intakes.filter(dailyIntake => {\n                return dailyIntake.meal_type === 'dinner'\n\n            }) \n            return arr.map(dailyIntake => {\n                return  <tr key={dailyIntake.food.id}>\n                  <td> {dailyIntake.food.name }</td>\n                  <td>{dailyIntake.serving}</td>\n                  <td> {dailyIntake.food.calorie}</td> \n                  <td> {dailyIntake.food.fat} </td> \n                  <td> {dailyIntake.food.carbs}</td> \n                  <td> {dailyIntake.food.protein}</td> \n                  <td> {dailyIntake.food.sugar}</td>\n                  <td onClick={(e) => this.handleClick(e,dailyIntake)}> X </td>\n                \n                </tr>\n              \n             })\n           }\n           return \"There is no food logged in..\"\n        }\n\n    const snacks = () => {\n        if(this.props.current_user.id && this.props.current_user.daily_intakes) {\n            let arr = this.props.current_user.daily_intakes.filter(dailyIntake => {\n                return dailyIntake.meal_type === 'snack'\n            }) \n            return arr.map(dailyIntake => {\n                return  <tr key={dailyIntake.food.id}>\n                <td> {dailyIntake.food.name }</td> \n                <td>{dailyIntake.serving}</td>\n                <td> {dailyIntake.food.calorie}</td> \n                <td> {dailyIntake.food.fat} </td> \n                <td> {dailyIntake.food.carbs}</td> \n                <td> {dailyIntake.food.protein}</td> \n                <td> {dailyIntake.food.sugar}</td>\n                <td onClick={() => this.handleClick(dailyIntake)}> <span> ❌ </span> </td>\n                </tr>\n             })\n           }\n           return \"There is no food logged in..\"\n        }\n    \n        \n    \n  return(\n<div>\n\n<table>\n    <thead>\n     <tr>\n        <th width=\"10%\"></th> \n        <th width=\"10%\">Serving</th>\n        <th width=\"10%\">Calorie ( kcal )</th> \n       \n        <th width=\"10%\">Fat ( g )</th>\n        <th width=\"10%\">Carbs ( g )</th>\n        <th width=\"10%\">Protein ( g )</th>\n        <th width=\"10%\">Sugar ( g )</th>\n        <th width=\"10%\"></th>\n     </tr>\n    </thead>\n    <tbody>\n        \n    <tr>\n      <th width=\"10%\">Breakfast</th>\n    </tr> \n      {breakfast()}\n      \n    <tr>\n      <th width=\"10%\">Lunch</th> \n    </tr>\n     {lunch()}\n    <tr>\n      <th width=\"10%\">Dinner</th> \n    </tr>\n     {dinner()}\n  \n    <tr>\n      <th width=\"10%\">Snack</th> \n    </tr>\n      {snacks()} \n     <tr>\n       </tr> \n    <tr>\n      \n      <th>\n        Total\n      </th>\n        <td>{current_user.total_servings}</td>\n        <td>{current_user.total_calories}</td>\n        <td>{current_user.total_fat}</td>\n        <td>{current_user.total_carbs}</td>\n        <td>{current_user.total_protein}</td>\n        <td>{current_user.total_sugar}</td>\n        \n    </tr>\n    <tr>\n      <th>Your daily goal  </th>\n      <td></td>\n      <td>{current_user.goal_calorie}</td>\n      <td>{current_user.goal_fat}</td>\n      <td>{current_user.goal_carbs}</td>\n      <td>{current_user.goal_protein}</td>\n      <td>{current_user.goal_sugar}</td>\n    </tr>\n    <tr>\n    <th>Remaining </th>\n      <td></td>\n      <td>{current_user.remaining_calories}</td>\n      <td>{current_user.remaining_fat}</td>\n      <td>{current_user.remaining_carbs}</td>\n      <td>{current_user.remaining_protein}</td>\n      <td>{current_user.remaining_sugar}</td>\n    </tr>\n    </tbody>\n </table>\n </div>\n    )\n   }\n }\n const mapStateToProps = (state) => {\n    return {\n      current_user: state.user\n    }\n  }\n  \n \n export default connect(mapStateToProps)(DailyIntake)"]},"metadata":{},"sourceType":"module"}