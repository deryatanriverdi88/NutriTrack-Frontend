{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Desktop/Projects/NutriTrack-App(Mod-5)/Frontend-NutriTrack/src/Pages/DailyIntake.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport withFixedColumns from \"react-table-hoc-fixed-columns\";\nimport \"react-table-hoc-fixed-columns/lib/styles.css\";\nconst ReactTableFixedColumns = withFixedColumns(ReactTable);\n\nclass DailyIntake extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  render() {\n    console.log(this.props.current_user.daily_intakes); //  console.log(this.state.breakfast)\n\n    const breakfast = () => {\n      if (this.props.current_user.id) {\n        let arr = this.props.current_user.daily_intakes.filter(dailyIntake => {\n          return dailyIntake.meal_type === 'breakfast';\n        });\n        return arr.map(dailyIntake => {\n          return React.createElement(\"tr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 25\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 25\n            },\n            __self: this\n          }, \" \", dailyIntake.food.name));\n        });\n      }\n\n      return \"nope!\";\n    };\n\n    const lunch = () => {\n      if (this.props.current_user.id) {\n        let arr = this.props.current_user.daily_intakes.filter(dailyIntake => {\n          return dailyIntake.meal_type === 'lunch';\n        });\n        return arr.map(dailyIntake => {\n          return React.createElement(\"tr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37\n            },\n            __self: this\n          }, \" \", dailyIntake.food.name));\n        });\n      }\n\n      return \"nope!\";\n    };\n\n    const dinner = () => {\n      if (this.props.current_user.id) {\n        let arr = this.props.current_user.daily_intakes.filter(dailyIntake => {\n          return dailyIntake.meal_type === 'dinner';\n        });\n        return arr.map(dailyIntake => {\n          return React.createElement(\"tr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          }, \" \", dailyIntake.food.name));\n        });\n      }\n\n      return \"nope!\";\n    };\n\n    const snacks = () => {\n      if (this.props.current_user.id) {\n        let arr = this.props.current_user.daily_intakes.filter(dailyIntake => {\n          return dailyIntake.meal_type === 'snack';\n        });\n        return arr.map(dailyIntake => {\n          return React.createElement(\"tr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          }, \" \", dailyIntake.food.name));\n        });\n      }\n\n      return \"nope!\";\n    };\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(ReactTableFixedColumns, {\n      data: data,\n      columns: [{\n        Header: \"Name\",\n        fixed: \"left\",\n        columns: [{\n          Header: \"First Name\",\n          accessor: \"firstName\",\n          width: 100\n        }, {\n          Header: \"Last Name\",\n          accessor: \"lastName\",\n          width: 100\n        }]\n      }, {\n        Header: \"Info\",\n        columns: [{\n          Header: \"protein\",\n          accessor: \"protein\",\n          width: 300,\n          Footer: row => {\n            const length = row.data.length;\n            const proteinSum = row.data.map(({\n              protein\n            }) => protein).reduce((a, b) => a + b, 0);\n            const averprotein = Math.round(proteinSum / length);\n            return React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 103\n              },\n              __self: this\n            }, \"averprotein: \", averprotein);\n          }\n        }, {\n          Header: \"Visits\",\n          accessor: \"visits\",\n          width: 300\n        }, {\n          Header: \"Progress\",\n          accessor: \"progress\",\n          width: 300\n        }, {\n          Header: \"Protein\",\n          accessor: \"age\",\n          id: \"age2\",\n          width: 300\n        }, {\n          Header: \"Visits\",\n          accessor: \"visits\",\n          id: \"visits2\",\n          width: 300\n        }, {\n          Header: \"Progress\",\n          accessor: \"progress\",\n          id: \"progress2\",\n          width: 300\n        }]\n      }, {\n        Header: \"\",\n        fixed: \"right\",\n        columns: [{\n          Header: \"Status\",\n          accessor: \"status\"\n        }]\n      }],\n      defaultPageSize: 50,\n      style: {\n        height: 500\n      },\n      className: \"-striped\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), React.createElement(Tips, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    current_user: state.user\n  };\n};\n\nexport default connect(mapStateToProps)(DailyIntake);\n{\n  /* <table>\n     <thead>\n      <tr>\n         <th width=\"10%\"></th> \n         <th width=\"10%\">Calorie</th> \n          <th width=\"10%\">Fat</th>\n         <th width=\"10%\">Carbs</th>\n         <th width=\"10%\">Protein</th>\n         <th width=\"10%\">Sugar</th>\n      </tr>\n     </thead>\n     <tbody>\n         \n     <tr>\n       <th width=\"10%\">Breakfast</th>\n     </tr> \n       {breakfast()}\n     <tr>\n       <th width=\"10%\">Lunch</th> \n     </tr>\n      {lunch()}\n     <tr>\n       <th width=\"10%\">Dinner</th> \n     </tr>\n      {dinner()}\n     <tr>\n       <th width=\"10%\">Snack</th> \n     </tr>\n       {snacks()} \n     </tbody>\n  </table> */\n}","map":{"version":3,"sources":["/Users/flatironschool/Desktop/Projects/NutriTrack-App(Mod-5)/Frontend-NutriTrack/src/Pages/DailyIntake.js"],"names":["React","Component","connect","ReactTable","withFixedColumns","ReactTableFixedColumns","DailyIntake","state","render","console","log","props","current_user","daily_intakes","breakfast","id","arr","filter","dailyIntake","meal_type","map","food","name","lunch","dinner","snacks","data","Header","fixed","columns","accessor","width","Footer","row","length","proteinSum","protein","reduce","a","b","averprotein","Math","round","height","mapStateToProps","user"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport withFixedColumns from \"react-table-hoc-fixed-columns\";\nimport \"react-table-hoc-fixed-columns/lib/styles.css\";\n\nconst ReactTableFixedColumns = withFixedColumns(ReactTable);\n\nclass DailyIntake extends Component {\n state = {\n  \n }\n\n render() {\n     console.log(this.props.current_user.daily_intakes)\n    //  console.log(this.state.breakfast)\n\n    const breakfast = () => {\n        if(this.props.current_user.id) {\n            let arr = this.props.current_user.daily_intakes.filter(dailyIntake => {\n                return dailyIntake.meal_type === 'breakfast'\n            }) \n            return arr.map(dailyIntake => {\n                return  <tr><td> {dailyIntake.food.name }</td></tr>\n             })\n           }\n           return \"nope!\"\n        }\n\n    const lunch = () => {\n        if(this.props.current_user.id) {\n            let arr = this.props.current_user.daily_intakes.filter(dailyIntake => {\n                return dailyIntake.meal_type === 'lunch'\n            }) \n            return arr.map(dailyIntake => {\n                return  <tr><td> {dailyIntake.food.name }</td></tr>\n             })\n           }\n           return \"nope!\"\n        }\n\n    const dinner = () => {\n        if(this.props.current_user.id) {\n            let arr = this.props.current_user.daily_intakes.filter(dailyIntake => {\n                return dailyIntake.meal_type === 'dinner'\n            }) \n            return arr.map(dailyIntake => {\n                return  <tr><td> {dailyIntake.food.name }</td></tr>\n             })\n           }\n           return \"nope!\"\n        }\n\n    const snacks = () => {\n        if(this.props.current_user.id) {\n            let arr = this.props.current_user.daily_intakes.filter(dailyIntake => {\n                return dailyIntake.meal_type === 'snack'\n            }) \n            return arr.map(dailyIntake => {\n                return  <tr><td> {dailyIntake.food.name }</td></tr>\n             })\n           }\n           return \"nope!\"\n        }\n    \n        \n    \n  return(\n<div>\n<ReactTableFixedColumns\n          data={data}\n          columns={[\n            {\n              Header: \"Name\",\n              fixed: \"left\",\n              columns: [\n                {\n                  Header: \"First Name\",\n                  accessor: \"firstName\",\n                  width: 100\n                },\n                {\n                  Header: \"Last Name\",\n                  accessor: \"lastName\",\n                  width: 100\n                }\n              ]\n            },\n            {\n              Header: \"Info\",\n              columns: [\n                {\n                  Header: \"protein\",\n                  accessor: \"protein\",\n                  width: 300,\n                  Footer: row => {\n                    const length = row.data.length;\n                    const proteinSum = row.data\n                      .map(({ protein }) => protein)\n                      .reduce((a, b) => a + b, 0);\n                    const averprotein = Math.round(proteinSum / length);\n                    return <div>averprotein: {averprotein}</div>;\n                  }\n                },\n                {\n                  Header: \"Visits\",\n                  accessor: \"visits\",\n                  width: 300\n                },\n                {\n                  Header: \"Progress\",\n                  accessor: \"progress\",\n                  width: 300\n                },\n                {\n                  Header: \"Protein\",\n                  accessor: \"age\",\n                  id: \"age2\",\n                  width: 300\n                },\n                {\n                  Header: \"Visits\",\n                  accessor: \"visits\",\n                  id: \"visits2\",\n                  width: 300\n                },\n                {\n                  Header: \"Progress\",\n                  accessor: \"progress\",\n                  id: \"progress2\",\n                  width: 300\n                }\n              ]\n            },\n            {\n              Header: \"\",\n              fixed: \"right\",\n              columns: [\n                {\n                  Header: \"Status\",\n                  accessor: \"status\"\n                }\n              ]\n            }\n          ]}\n          defaultPageSize={50}\n          style={{ height: 500 }}\n          className=\"-striped\"\n        />\n        <br />\n        <Tips />\n        <Logo />\n </div>\n    )\n   }\n }\n const mapStateToProps = (state) => {\n    return {\n      current_user: state.user\n    }\n  }\n  \n \n export default connect(mapStateToProps)(DailyIntake)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n{/* <table>\n    <thead>\n     <tr>\n        <th width=\"10%\"></th> \n        <th width=\"10%\">Calorie</th> \n\n        <th width=\"10%\">Fat</th>\n        <th width=\"10%\">Carbs</th>\n        <th width=\"10%\">Protein</th>\n        <th width=\"10%\">Sugar</th>\n     </tr>\n    </thead>\n    <tbody>\n        \n    <tr>\n      <th width=\"10%\">Breakfast</th>\n    </tr> \n      {breakfast()}\n    <tr>\n      <th width=\"10%\">Lunch</th> \n    </tr>\n     {lunch()}\n    <tr>\n      <th width=\"10%\">Dinner</th> \n    </tr>\n     {dinner()}\n    <tr>\n      <th width=\"10%\">Snack</th> \n    </tr>\n      {snacks()} \n    </tbody>\n </table> */}"]},"metadata":{},"sourceType":"module"}