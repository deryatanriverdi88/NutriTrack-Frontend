{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Desktop/Projects/NutriTrack-App(Mod-5)/Frontend-NutriTrack/src/Pages/DailyIntake.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass DailyIntake extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userIntake: this.props.current_user.daily_intakes\n    };\n  }\n\n  render() {\n    console.log(this.props.current_user.daily_intakes); //  console.log(this.state.breakfast)\n\n    const breakfast = () => {\n      if (this.props.current_user.id && this.props.current_user.daily_intakes) {\n        let arr = this.props.current_user.daily_intakes.filter(dailyIntake => {\n          return dailyIntake.meal_type === 'breakfast';\n        });\n        return arr.map(dailyIntake => {\n          return React.createElement(\"tr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 19\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            key: dailyIntake.food.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 19\n            },\n            __self: this\n          }, \" \", dailyIntake.food.name), \" \", React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 19\n            },\n            __self: this\n          }, \" \", dailyIntake.food.calorie), \" \", React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 19\n            },\n            __self: this\n          }, \" \", dailyIntake.food.fat, \" \"), \" \", React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 19\n            },\n            __self: this\n          }, \" \", dailyIntake.food.carbs), \" \", React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 19\n            },\n            __self: this\n          }, \" \", dailyIntake.food.protein), \" \", React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 19\n            },\n            __self: this\n          }, \" \", dailyIntake.food.sugar));\n        });\n      }\n\n      return \"nope!\";\n    };\n\n    const lunch = () => {\n      if (this.props.current_user.id) {\n        let arr = this.props.current_user.daily_intakes.filter(dailyIntake => {\n          return dailyIntake.meal_type === 'lunch';\n        });\n        return arr.map(dailyIntake => {\n          return React.createElement(\"tr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            key: dailyIntake.food.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33\n            },\n            __self: this\n          }, \" \", dailyIntake.food.name), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34\n            },\n            __self: this\n          }, \" \", dailyIntake.food.calorie), \" \", React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34\n            },\n            __self: this\n          }, \" \", dailyIntake.food.fat, \" \"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }, \" \", dailyIntake.food.carbs), \" \", React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }, \" \", dailyIntake.food.protein), \" \", React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }, \" \", dailyIntake.food.sugar));\n        });\n      }\n\n      return \"nope!\";\n    };\n\n    const dinner = () => {\n      if (this.props.current_user.id) {\n        let arr = this.props.current_user.daily_intakes.filter(dailyIntake => {\n          return dailyIntake.meal_type === 'dinner';\n        });\n        return arr.map(dailyIntake => {\n          return React.createElement(\"tr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            key: dailyIntake.food.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          }, \" \", dailyIntake.food.name), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }, \" \", dailyIntake.food.calorie), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          }, \" \", dailyIntake.food.fat, \" \"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }, \" \", dailyIntake.food.carbs), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }, \" \", dailyIntake.food.protein), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          }, \" \", dailyIntake.food.sugar));\n        });\n      }\n\n      return \"nope!\";\n    };\n\n    const snacks = () => {\n      if (this.props.current_user.id) {\n        let arr = this.props.current_user.daily_intakes.filter(dailyIntake => {\n          return dailyIntake.meal_type === 'snack';\n        });\n        return arr.map(dailyIntake => {\n          return React.createElement(\"tr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            key: dailyIntake.food.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            },\n            __self: this\n          }, \" \", dailyIntake.food.name), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            },\n            __self: this\n          }, \" \", dailyIntake.food.calorie), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            },\n            __self: this\n          }, \" \", dailyIntake.food.fat, \" \"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          }, \" \", dailyIntake.food.carbs), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72\n            },\n            __self: this\n          }, \" \", dailyIntake.food.protein), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            },\n            __self: this\n          }, \" \", dailyIntake.food.sugar));\n        });\n      }\n\n      return \"nope!\";\n    };\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Calorie\"), React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Fat\"), React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Carbs\"), React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Protein\"), React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Sugar\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Breakfast\")), breakfast(), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Total \")), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Lunch\")), lunch(), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Total \")), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Dinner\")), dinner(), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Total \")), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Snack\")), snacks(), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Total \")))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    current_user: state.user\n  };\n};\n\nexport default connect(mapStateToProps)(DailyIntake);","map":{"version":3,"sources":["/Users/flatironschool/Desktop/Projects/NutriTrack-App(Mod-5)/Frontend-NutriTrack/src/Pages/DailyIntake.js"],"names":["React","Component","connect","DailyIntake","state","userIntake","props","current_user","daily_intakes","render","console","log","breakfast","id","arr","filter","dailyIntake","meal_type","map","food","name","calorie","fat","carbs","protein","sugar","lunch","dinner","snacks","mapStateToProps","user"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nclass DailyIntake extends Component {\n state = {\n     userIntake: this.props.current_user.daily_intakes\n }\n\n render() {\n     console.log(this.props.current_user.daily_intakes)\n    //  console.log(this.state.breakfast)\n\n    const breakfast = () => {\n        if(this.props.current_user.id && this.props.current_user.daily_intakes) {\n            let arr = this.props.current_user.daily_intakes.filter(dailyIntake => {\n                return dailyIntake.meal_type === 'breakfast'\n            }) \n            return arr.map(dailyIntake => {\n                return  <tr><td key={dailyIntake.food.id}> {dailyIntake.food.name }</td> <td> {dailyIntake.food.calorie}</td> <td> {dailyIntake.food.fat} </td> <td> {dailyIntake.food.carbs}</td> <td> {dailyIntake.food.protein}</td> <td> {dailyIntake.food.sugar}</td>\n                  </tr>\n             })\n           }\n           return \"nope!\"\n        }\n\n    const lunch = () => {\n        if(this.props.current_user.id) {\n            let arr = this.props.current_user.daily_intakes.filter(dailyIntake => {\n                return dailyIntake.meal_type === 'lunch'\n            }) \n            return arr.map(dailyIntake => {\n                return  <tr>\n                  <td key={dailyIntake.food.id}> {dailyIntake.food.name }</td> \n                  <td> {dailyIntake.food.calorie}</td> <td> {dailyIntake.food.fat} </td> \n                  <td> {dailyIntake.food.carbs}</td> <td> {dailyIntake.food.protein}</td> <td> {dailyIntake.food.sugar}</td>\n                </tr>\n             })\n           }\n           return \"nope!\"\n        }\n\n    const dinner = () => {\n        if(this.props.current_user.id) {\n            let arr = this.props.current_user.daily_intakes.filter(dailyIntake => {\n                return dailyIntake.meal_type === 'dinner'\n            }) \n            return arr.map(dailyIntake => {\n                return  <tr>\n                  <td key={dailyIntake.food.id}> {dailyIntake.food.name }</td>\n                  <td> {dailyIntake.food.calorie}</td> \n                  <td> {dailyIntake.food.fat} </td> \n                  <td> {dailyIntake.food.carbs}</td> \n                  <td> {dailyIntake.food.protein}</td> \n                  <td> {dailyIntake.food.sugar}</td>\n                </tr>\n             })\n           }\n           return \"nope!\"\n        }\n\n    const snacks = () => {\n        if(this.props.current_user.id) {\n            let arr = this.props.current_user.daily_intakes.filter(dailyIntake => {\n                return dailyIntake.meal_type === 'snack'\n            }) \n            return arr.map(dailyIntake => {\n                return  <tr>\n                <td key={dailyIntake.food.id}> {dailyIntake.food.name }</td> \n                <td> {dailyIntake.food.calorie}</td> \n                <td> {dailyIntake.food.fat} </td> \n                <td> {dailyIntake.food.carbs}</td> \n                <td> {dailyIntake.food.protein}</td> \n                <td> {dailyIntake.food.sugar}</td>\n                </tr>\n             })\n           }\n           return \"nope!\"\n        }\n    \n        \n    \n  return(\n<div>\n\n<table>\n    <thead>\n     <tr>\n        <th width=\"10%\"></th> \n        <th width=\"10%\">Calorie</th> \n\n        <th width=\"10%\">Fat</th>\n        <th width=\"10%\">Carbs</th>\n        <th width=\"10%\">Protein</th>\n        <th width=\"10%\">Sugar</th>\n     </tr>\n    </thead>\n    <tbody>\n        \n    <tr>\n      <th width=\"10%\">Breakfast</th>\n    </tr> \n      {breakfast()}\n    <tr>\n    <td>Total </td>\n    </tr>\n      \n    <tr>\n      <th width=\"10%\">Lunch</th> \n    </tr>\n     {lunch()}\n\n     <tr>\n    <td>Total </td>\n    </tr>\n    <tr>\n      <th width=\"10%\">Dinner</th> \n    </tr>\n     {dinner()}\n     <tr>\n    <td>Total </td>\n    </tr>\n    <tr>\n      <th width=\"10%\">Snack</th> \n    </tr>\n      {snacks()} \n       <tr>\n    <td>Total </td>\n    </tr>\n    </tbody>\n </table>\n </div>\n    )\n   }\n }\n const mapStateToProps = (state) => {\n    return {\n      current_user: state.user\n    }\n  }\n  \n \n export default connect(mapStateToProps)(DailyIntake)"]},"metadata":{},"sourceType":"module"}