{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Desktop/Projects/NutriTrack-App(Mod-5)/Frontend-NutriTrack/src/Components/FoodForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass FoodForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      serving: null,\n      mealType: \"\",\n      mealTypeId: null\n    };\n\n    this.handleChange = e => {\n      // console.log('handle change', e.target.value)\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      console.log('submit');\n      fetch(\"http://localhost:3000/meal_types\", {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n          meal_type: this.state.mealType\n        })\n      }).then(res => res.json()).then(mealTypeObject => {\n        this.setState({\n          mealTypeId: mealTypeObject.id\n        });\n      });\n      fetch('http://localhost:3000/daily_intakes', {\n        method: 'POST',\n        headers: {\n          'Content-Type': \"application/json\",\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n          user_id: this.props.current_user.id,\n          food_id: this.props.food.id,\n          meal_type_id: this.state.mealTypeId\n        })\n      }).then(res => res.json()).then(dailyIntakeObject => {\n        console.log(dailyIntakeObject);\n      });\n    };\n  }\n\n  render() {\n    // console.log(this.props.current_user.id)\n    console.log(this.state);\n    const _this$props$food = this.props.food,\n          name = _this$props$food.name,\n          calorie = _this$props$food.calorie,\n          carb = _this$props$food.carb,\n          sugar = _this$props$food.sugar,\n          fat = _this$props$food.fat,\n          serving_size = _this$props$food.serving_size,\n          protein = _this$props$food.protein;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Food Form\", React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, name), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"serving\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \" Servings of \"), React.createElement(\"input\", {\n      id: \"serving\",\n      name: \"serving\",\n      type: \"number\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"hidden\",\n      id: \"user\",\n      name: \"userId\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"hidden\",\n      id: \"food\",\n      name: \"foodId\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"hidden\",\n      id: \"mealType\",\n      name: \"mealType\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"mealType\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \" Meal Type \"), React.createElement(\"select\", {\n      id: \"mealType\",\n      name: \"mealType\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      name: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"option\", {\n      value: \"breakfast\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Breakfast\"), React.createElement(\"option\", {\n      value: \"lunch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Lunch\"), React.createElement(\"option\", {\n      value: \"dinner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Dinner\"), React.createElement(\"option\", {\n      value: \"snack\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Snack\")), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Add to your dairy!\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: this.props.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \" \\u274C\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    current_user: state.user\n  };\n};\n\nexport default connect(mapStateToProps)(FoodForm);","map":{"version":3,"sources":["/Users/flatironschool/Desktop/Projects/NutriTrack-App(Mod-5)/Frontend-NutriTrack/src/Components/FoodForm.js"],"names":["React","Component","connect","FoodForm","state","serving","mealType","mealTypeId","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","console","log","fetch","method","headers","body","JSON","stringify","meal_type","then","res","json","mealTypeObject","id","user_id","props","current_user","food_id","food","meal_type_id","dailyIntakeObject","render","calorie","carb","sugar","fat","serving_size","protein","handleClick","mapStateToProps","user"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\n\n\n\nclass FoodForm extends Component {\n\n   \n    state={\n        serving: null,\n        mealType: \"\",\n        mealTypeId: null\n    }\n\n    handleChange = (e) => {\n        // console.log('handle change', e.target.value)\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        console.log('submit')\n        fetch(\"http://localhost:3000/meal_types\", {\n            method: 'POST',\n            headers: {\n                'Content-type':'application/json',\n                'Accept':'application/json'\n            },\n            body: JSON.stringify({\n                meal_type: this.state.mealType\n            })\n        })\n        .then(res => res.json())\n        .then(mealTypeObject => {\n            this.setState({\n                mealTypeId: mealTypeObject.id\n            })\n        })\n        fetch('http://localhost:3000/daily_intakes', {\n            method: 'POST',\n            headers: {\n                'Content-Type': \"application/json\",\n                'Accept':'application/json'\n            },\n            body: JSON.stringify({\n                user_id: this.props.current_user.id,\n                food_id: this.props.food.id,\n                meal_type_id: this.state.mealTypeId\n            })\n        }).then(res => res.json())\n        .then(dailyIntakeObject => {\n            console.log(dailyIntakeObject)\n        })\n        \n    }\n    \n    render() {\n\n        // console.log(this.props.current_user.id)\n   \n        console.log(this.state)\n        const {name, calorie, carb, sugar, fat, serving_size, protein} = this.props.food\n        return(\n            <div> \n                Food Form\n           \n        \n                     <h3>{ name }</h3>\n                     <form onSubmit={this.handleSubmit}>\n                         <label htmlFor=\"serving\"> Servings of </label> \n                            <input \n                                id=\"serving\"\n                                name=\"serving\"\n                                type=\"number\"\n                                onChange={this.handleChange}\n                            />\n                            <input\n                                type=\"hidden\" \n                                id=\"user\"\n                                name=\"userId\"\n                            />\n                            <input\n                                type=\"hidden\" \n                                id=\"food\"\n                                name=\"foodId\"\n                            />\n                            <input\n                                type=\"hidden\" \n                                id=\"mealType\"\n                                name=\"mealType\"\n                            />\n                         <label htmlFor=\"mealType\"> Meal Type </label>\n                           <select id=\"mealType\" name=\"mealType\" onChange={this.handleChange}>\n                                <option name=\"\"></option>\n                                <option value=\"breakfast\">Breakfast</option>\n                                <option value=\"lunch\">Lunch</option>\n                                <option value=\"dinner\">Dinner</option>\n                                <option value=\"snack\">Snack</option>\n                           </select>\n                           <input type=\"submit\" value=\"Add to your dairy!\" />\n                     </form>\n                    <button onClick={this.props.handleClick}> ❌</button>\n                 \n            \n            </div>\n           )\n    }\n  \n\n }\n const mapStateToProps = (state) => {\n    return {\n      current_user: state.user\n    }\n  }\n  \n \n export default connect(mapStateToProps)(FoodForm)\n\n\n"]},"metadata":{},"sourceType":"module"}