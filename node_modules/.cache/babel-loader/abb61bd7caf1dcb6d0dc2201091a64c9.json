{"ast":null,"code":"// import React, { Component } from 'react'\n// import { connect } from 'react-redux'\n// class Edit extends Component {\n//  state = {\n//      errors: ''\n//  }\n//  static getDerivedStateFromProps(props, state) {\n//      if(state.id !== props.current_user.id) {\n//         return props.current_user\n//      }\n//  }\n//  handleChange = (event) => {\n//     console.log(event.target.value)\n//     this.setState({\n//       [event.target.name] : event.target.value\n//     })\n//   }\n//   handleLoginSubmit = (event) => {\n//     // debugger\n//     event.preventDefault()\n//    //  debugger\n//     fetch(`http://localhost:3000/users/${this.props.current_user.id}`, {\n//       method: 'PATCH',\n//       headers: {\n//         \"Content-Type\" : \"application/json\",\n//         \"Accept\" : \"application/json\"\n//       }, \n//       body: JSON.stringify({\n//         name: this.state.name,\n//         username: this.state.username,\n//         gender: this.state.gender,\n//         age: this.state.age,\n//         weight: this.state.weight,\n//         height: this.state.height,\n//         goal_calorie: this.state.goalCalorie,\n//         image: this.state.image\n//       })\n//     })\n//     .then(res => res.json())\n//     .then(userData =>{\n//     //   localStorage.setItem('token', userData.token)\n//       console.log(userData)\n//        if(userData){\n//         // debugger\n//          this.props.setUser(userData)\n//          this.props.history.push(`/profile`)\n//        }  else {\n//          this.setState({\n//            errors: userData.error[0]\n//          })\n//        }\n//     })\n//  }\n//  render(){\n//     // console.log(\"state ------\", this.state)\n//     //  console.log(this.props.current_user)\n//     // console.log(this.state)\n//   const {name, username, age, weight, height, goalCalorie} = this.state\n//   console.log(name, this.state.goalCalorie)\n//   return(\n//       <>\n//       {this.props.current_user.id  ? \n//         <div>\n//        Edit Form\n//     <form onSubmit={this.handleLoginSubmit}>\n//     <label htmlFor=\"name\">\n//       Name :\n//        <input \n//          id=\"name\"\n//          name=\"name\"\n//          value={name}\n//          type=\"text\"\n//          onChange={this.handleChange}\n//        />\n//     </label>\n//     <label htmlFor=\"username\">\n//       Username : \n//        <input \n//          id=\"username\"\n//          name=\"username\"\n//          value={username}\n//          type=\"text\"\n//          onChange={this.handleChange}\n//        />\n//     </label>\n//     <label htmlFor=\"age\">\n//       Age: \n//        <input \n//          name=\"age\"\n//          id=\"age\"\n//          age=\"age\"\n//          value={age}\n//          type=\"number\"\n//          onChange={this.handleChange}\n//        />\n//     </label>\n//     <label htmlFor=\"image\">\n//       Image :\n//         <input \n//           id=\"image\"\n//           name=\"image\"\n//           value={this.state.image}\n//           type=\"text\"\n//           onChange={this.handleChange}\n//         />\n//     </label>\n//     <label htmlFor=\"gender\">\n//       Gender :\n//       <select name=\"gender\" id=\"gender\"\n//       onChange={this.handleChange}>\n//         <option> Select</option>\n//          <option value=\"Female\">Female</option>\n//          <option value=\"Male\">Male</option>\n//          <option value=\"Prefered not to say\">Prefered not to say</option>\n//       </select>\n//     </label>\n//     <label htmlFor=\"weight\" >\n//       Weight : \n//        <input \n//          id=\"weight\"\n//          name=\"weight\"\n//          value={weight}\n//          type=\"number\"\n//          onChange={this.handleChange}\n//        />\n//     </label>\n//     <label htmlFor=\"height\">\n//       Height : \n//        <input \n//          id=\"height\"\n//          name=\"height\"\n//          value={height}\n//          type=\"float\"\n//          onChange={this.handleChange}\n//        />\n//     </label>\n//     <label htmlFor=\"goalCalorie\" >\n//       Daily goal calorie : \n//        <input \n//          id=\"goalCalorie\"\n//          name=\"goalCalorie\"\n//          value={goalCalorie}\n//          type=\"number\"\n//          onChange={this.handleChange}\n//        />\n//     </label>\n//     <input type=\"submit\"/>\n//     </form>\n//    </div> : null\n//      }\n//      </>\n//     )\n//    }\n//  }\n//  const mapDispatchToProps = (dispatch) =>{\n//     return {\n//       setUser: (userObject) => {\n//         dispatch({\n//             type: 'SET_USER', payload: userObject\n//           })\n//       }\n//     }\n//   }\n//   const mapStateToProps = (state) => {\n//     return {\n//       current_user: state.user\n//     }\n//   }\n//   export default connect(mapStateToProps, mapDispatchToProps) (Edit)","map":{"version":3,"sources":["/Users/flatironschool/Desktop/Projects/NutriTrack-App(Mod-5)/Frontend-NutriTrack/src/Pages/Edit.js"],"names":[],"mappingssourcesContent":["// import React, { Component } from 'react'\n// import { connect } from 'react-redux'\n\n\n\n// class Edit extends Component {\n   \n    \n    \n//  state = {\n//      errors: ''\n//  }\n\n//  static getDerivedStateFromProps(props, state) {\n//      if(state.id !== props.current_user.id) {\n//         return props.current_user\n//      }\n//  }\n\n//  handleChange = (event) => {\n//     console.log(event.target.value)\n\n//     this.setState({\n//       [event.target.name] : event.target.value\n//     })\n//   }\n\n//   handleLoginSubmit = (event) => {\n//     // debugger\n//     event.preventDefault()\n//    //  debugger\n//     fetch(`http://localhost:3000/users/${this.props.current_user.id}`, {\n//       method: 'PATCH',\n//       headers: {\n//         \"Content-Type\" : \"application/json\",\n//         \"Accept\" : \"application/json\"\n//       }, \n//       body: JSON.stringify({\n//         name: this.state.name,\n//         username: this.state.username,\n//         gender: this.state.gender,\n//         age: this.state.age,\n//         weight: this.state.weight,\n//         height: this.state.height,\n//         goal_calorie: this.state.goalCalorie,\n//         image: this.state.image\n//       })\n//     })\n//     .then(res => res.json())\n//     .then(userData =>{\n//     //   localStorage.setItem('token', userData.token)\n//       console.log(userData)\n//        if(userData){\n//         // debugger\n//          this.props.setUser(userData)\n//          this.props.history.push(`/profile`)\n \n//        }  else {\n//          this.setState({\n//            errors: userData.error[0]\n//          })\n//        }\n//     })\n    \n//  }\n//  render(){\n//     // console.log(\"state ------\", this.state)\n//     //  console.log(this.props.current_user)\n//     // console.log(this.state)\n//   const {name, username, age, weight, height, goalCalorie} = this.state\n//   console.log(name, this.state.goalCalorie)\n//   return(\n//       <>\n       \n//       {this.props.current_user.id  ? \n     \n//         <div>\n//        Edit Form\n//     <form onSubmit={this.handleLoginSubmit}>\n//     <label htmlFor=\"name\">\n//       Name :\n//        <input \n//          id=\"name\"\n//          name=\"name\"\n//          value={name}\n//          type=\"text\"\n//          onChange={this.handleChange}\n//        />\n//     </label>\n//     <label htmlFor=\"username\">\n//       Username : \n//        <input \n//          id=\"username\"\n//          name=\"username\"\n//          value={username}\n//          type=\"text\"\n//          onChange={this.handleChange}\n//        />\n//     </label>\n//     <label htmlFor=\"age\">\n//       Age: \n//        <input \n//          name=\"age\"\n//          id=\"age\"\n//          age=\"age\"\n//          value={age}\n//          type=\"number\"\n//          onChange={this.handleChange}\n//        />\n//     </label>\n//     <label htmlFor=\"image\">\n//       Image :\n//         <input \n//           id=\"image\"\n//           name=\"image\"\n//           value={this.state.image}\n//           type=\"text\"\n//           onChange={this.handleChange}\n//         />\n//     </label>\n//     <label htmlFor=\"gender\">\n//       Gender :\n//       <select name=\"gender\" id=\"gender\"\n//       onChange={this.handleChange}>\n//         <option> Select</option>\n//          <option value=\"Female\">Female</option>\n//          <option value=\"Male\">Male</option>\n//          <option value=\"Prefered not to say\">Prefered not to say</option>\n//       </select>\n//     </label>\n//     <label htmlFor=\"weight\" >\n//       Weight : \n//        <input \n//          id=\"weight\"\n//          name=\"weight\"\n//          value={weight}\n//          type=\"number\"\n//          onChange={this.handleChange}\n//        />\n//     </label>\n//     <label htmlFor=\"height\">\n//       Height : \n//        <input \n//          id=\"height\"\n//          name=\"height\"\n//          value={height}\n//          type=\"float\"\n//          onChange={this.handleChange}\n//        />\n//     </label>\n//     <label htmlFor=\"goalCalorie\" >\n//       Daily goal calorie : \n//        <input \n//          id=\"goalCalorie\"\n//          name=\"goalCalorie\"\n//          value={goalCalorie}\n//          type=\"number\"\n//          onChange={this.handleChange}\n//        />\n//     </label>\n  \n//     <input type=\"submit\"/>\n//     </form>\n//    </div> : null\n//      }\n//      </>\n   \n//     )\n//    }\n//  }\n\n\n\n//  const mapDispatchToProps = (dispatch) =>{\n//     return {\n//       setUser: (userObject) => {\n//         dispatch({\n//             type: 'SET_USER', payload: userObject\n//           })\n//       }\n//     }\n//   }\n  \n//   const mapStateToProps = (state) => {\n//     return {\n//       current_user: state.user\n//     }\n//   }\n  \n  \n//   export default connect(mapStateToProps, mapDispatchToProps) (Edit)\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}