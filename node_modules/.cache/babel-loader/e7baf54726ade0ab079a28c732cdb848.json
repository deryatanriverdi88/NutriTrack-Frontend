{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Desktop/Projects/NutriTrack-App(Mod-5)/Frontend-NutriTrack/src/Pages/DailyIntake.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass DailyIntake extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: [],\n      dailyIntake: {},\n      show: true\n    };\n\n    this.handleClick = (e, dailyIntakeItem) => {\n      console.log(dailyIntakeItem.id);\n      this.setState({\n        show: !this.state.show,\n        dailyIntake: dailyIntakeItem\n      });\n      fetch(\"http://localhost:3000/daily_intakes/\".concat(dailyIntakeItem.id), {\n        method: 'DELETE'\n      });\n    };\n  }\n\n  async componentDidMount() {\n    const dailyIntakeData = await this.props.current_user;\n    this.setState({\n      user: dailyIntakeData\n    });\n  }\n\n  render() {\n    console.log(this.props.current_user.daily_intakes);\n    console.log(this.state.dailyIntakes);\n    console.log(this.state.dailyIntake);\n    const current_user = this.props.current_user;\n\n    const breakfast = () => {\n      if (this.props.current_user.id && this.props.current_user.daily_intakes) {\n        let arr = this.props.current_user.daily_intakes.filter(dailyIntake => {\n          return dailyIntake.meal_type === 'breakfast';\n        });\n        return arr.map(dailyIntake => {\n          return React.createElement(\"tr\", {\n            key: dailyIntake.food.id,\n            style: {\n              display: this.state.show ? '' : 'none'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44\n            },\n            __self: this\n          }, \" \", dailyIntake.food.name), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45\n            },\n            __self: this\n          }, dailyIntake.serving), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46\n            },\n            __self: this\n          }, \" \", dailyIntake.food.calorie), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            },\n            __self: this\n          }, \" \", dailyIntake.food.fat, \" \"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          }, \" \", dailyIntake.food.carbs), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          }, dailyIntake.food.protein), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }, \" \", dailyIntake.food.sugar), React.createElement(\"td\", {\n            onClick: e => this.handleClick(e, dailyIntake),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          }, \" \", React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          }, \" \\u274C \"), \" \"));\n        });\n      }\n\n      return \"There is no food logged in..\";\n    };\n\n    const lunch = () => {\n      if (this.props.current_user.id && this.props.current_user.daily_intakes) {\n        let arr = this.props.current_user.daily_intakes.filter(dailyIntake => {\n          return dailyIntake.meal_type === 'lunch';\n        });\n        return arr.map(dailyIntake => {\n          return React.createElement(\"tr\", {\n            key: dailyIntake.food.id,\n            style: {\n              display: this.state.show ? '' : 'none'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          }, \" \", dailyIntake.food.name), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66\n            },\n            __self: this\n          }, dailyIntake.serving), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67\n            },\n            __self: this\n          }, \" \", dailyIntake.food.calorie), \" \", React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67\n            },\n            __self: this\n          }, \" \", dailyIntake.food.fat, \" \"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            },\n            __self: this\n          }, \" \", dailyIntake.food.carbs), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            },\n            __self: this\n          }, \" \", dailyIntake.food.protein), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            },\n            __self: this\n          }, \" \", dailyIntake.food.sugar), React.createElement(\"td\", {\n            onClick: e => this.handleClick(e, dailyIntake),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          }, \" \", React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          }, \" \\u274C \"), \" \"));\n        });\n      }\n\n      return \"There is no food logged in..\";\n    };\n\n    const dinner = () => {\n      if (this.props.current_user.id && this.props.current_user.daily_intakes) {\n        let arr = this.props.current_user.daily_intakes.filter(dailyIntake => {\n          return dailyIntake.meal_type === 'dinner';\n        });\n        return arr.map(dailyIntake => {\n          return React.createElement(\"tr\", {\n            key: dailyIntake.food.id,\n            style: {\n              display: this.state.show ? '' : 'none'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          }, \" \", dailyIntake.food.name), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87\n            },\n            __self: this\n          }, dailyIntake.serving), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            },\n            __self: this\n          }, \" \", dailyIntake.food.calorie), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          }, \" \", dailyIntake.food.fat, \" \"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90\n            },\n            __self: this\n          }, \" \", dailyIntake.food.carbs), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          }, \" \", dailyIntake.food.protein), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }, \" \", dailyIntake.food.sugar), React.createElement(\"td\", {\n            onClick: e => this.handleClick(e, dailyIntake),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93\n            },\n            __self: this\n          }, \" \", React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93\n            },\n            __self: this\n          }, \" \\u274C \"), \" \"));\n        });\n      }\n\n      return \"There is no food logged in..\";\n    };\n\n    const snacks = () => {\n      if (this.props.current_user.id && this.props.current_user.daily_intakes) {\n        let arr = this.props.current_user.daily_intakes.filter(dailyIntake => {\n          return dailyIntake.meal_type === 'snack';\n        });\n        return arr.map(dailyIntake => {\n          return React.createElement(\"tr\", {\n            key: dailyIntake.food.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109\n            },\n            __self: this\n          }, \" \", dailyIntake.food.name), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110\n            },\n            __self: this\n          }, dailyIntake.serving), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111\n            },\n            __self: this\n          }, \" \", dailyIntake.food.calorie), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112\n            },\n            __self: this\n          }, \" \", dailyIntake.food.fat, \" \"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113\n            },\n            __self: this\n          }, \" \", dailyIntake.food.carbs), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114\n            },\n            __self: this\n          }, \" \", dailyIntake.food.protein), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115\n            },\n            __self: this\n          }, \" \", dailyIntake.food.sugar), React.createElement(\"td\", {\n            onClick: e => this.handleClick(e, dailyIntake),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116\n            },\n            __self: this\n          }, \" \", React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116\n            },\n            __self: this\n          }, \" \\u274C \"), \" \"));\n        });\n      }\n\n      return \"There is no food logged in..\";\n    };\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Serving\"), React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Calorie ( kcal )\"), React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Fat ( g )\"), React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Carbs ( g )\"), React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Protein ( g )\"), React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Sugar ( g )\"), React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Breakfast\")), breakfast(), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Lunch\")), lunch(), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Dinner\")), dinner(), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Snack\")), snacks(), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Total\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, current_user.total_servings), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, current_user.total_calories), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, current_user.total_fat), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, current_user.total_carbs), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, current_user.total_protein), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, current_user.total_sugar)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"Your daily goal  \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, current_user.goal_calorie), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, current_user.goal_fat), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, current_user.goal_carbs), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, current_user.goal_protein), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, current_user.goal_sugar)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Remaining \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, current_user.remaining_calories), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, current_user.remaining_fat), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, current_user.remaining_carbs), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, current_user.remaining_protein), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, current_user.remaining_sugar)))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    current_user: state.user\n  };\n};\n\nexport default connect(mapStateToProps)(DailyIntake);","map":{"version":3,"sources":["/Users/flatironschool/Desktop/Projects/NutriTrack-App(Mod-5)/Frontend-NutriTrack/src/Pages/DailyIntake.js"],"names":["React","Component","connect","DailyIntake","state","user","dailyIntake","show","handleClick","e","dailyIntakeItem","console","log","id","setState","fetch","method","componentDidMount","dailyIntakeData","props","current_user","render","daily_intakes","dailyIntakes","breakfast","arr","filter","meal_type","map","food","display","name","serving","calorie","fat","carbs","protein","sugar","lunch","dinner","snacks","total_servings","total_calories","total_fat","total_carbs","total_protein","total_sugar","goal_calorie","goal_fat","goal_carbs","goal_protein","goal_sugar","remaining_calories","remaining_fat","remaining_carbs","remaining_protein","remaining_sugar","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nclass DailyIntake extends Component {\n state = {\n   user: [],\n   dailyIntake: {},\n   show: true\n }\n\n\n async componentDidMount() {\n   const dailyIntakeData = await this.props.current_user\n  this.setState({ user: dailyIntakeData })\n\n}\n\n\nhandleClick = (e, dailyIntakeItem) => {\n  console.log(dailyIntakeItem.id)\n  this.setState({\n    show: !this.state.show,\n    dailyIntake: dailyIntakeItem\n  })\n  fetch(`http://localhost:3000/daily_intakes/${dailyIntakeItem.id}`, {\n     method: 'DELETE'\n   })\n}\n\n \n render() {\n   console.log(this.props.current_user.daily_intakes)\n   console.log(this.state.dailyIntakes)\n  console.log(this.state.dailyIntake)\n   const  {current_user} =this.props\n\n    const breakfast = () => {\n        if(this.props.current_user.id && this.props.current_user.daily_intakes ) {\n            let arr = this.props.current_user.daily_intakes.filter(dailyIntake => {\n                return dailyIntake.meal_type === 'breakfast'\n            }) \n            return arr.map(dailyIntake => {\n                return  <tr key={dailyIntake.food.id} style={{display:  this.state.show ? '' : 'none' }}>\n                  <td > {dailyIntake.food.name }</td> \n                  <td>{dailyIntake.serving}</td>\n                  <td> {dailyIntake.food.calorie}</td> \n                  <td> {dailyIntake.food.fat} </td> \n                  <td> {dailyIntake.food.carbs}</td> \n                  <td>{dailyIntake.food.protein}</td> \n                  <td> {dailyIntake.food.sugar}</td>\n                  <td onClick={(e) => this.handleClick(e, dailyIntake)}> <span> ❌ </span> </td>\n                  </tr>\n             })\n           }\n           return \"There is no food logged in..\"\n        }\n\n    const lunch = () => {\n        if(this.props.current_user.id && this.props.current_user.daily_intakes ) {\n            let arr = this.props.current_user.daily_intakes.filter(dailyIntake => {\n                return dailyIntake.meal_type === 'lunch'\n            }) \n            return arr.map(dailyIntake => {\n                return  <tr key={dailyIntake.food.id} style={{display:  this.state.show ? '' : 'none' }}>\n                  <td> {dailyIntake.food.name }</td> \n                  <td>{dailyIntake.serving}</td>\n                  <td> {dailyIntake.food.calorie}</td> <td> {dailyIntake.food.fat} </td> \n                  <td> {dailyIntake.food.carbs}</td> \n                  <td> {dailyIntake.food.protein}</td> \n                  <td> {dailyIntake.food.sugar}</td>\n                  <td onClick={(e) => this.handleClick(e, dailyIntake)}> <span> ❌ </span> </td>\n                </tr>\n             })\n           }\n           return \"There is no food logged in..\"\n        }\n\n    const dinner = () => {\n        if(this.props.current_user.id && this.props.current_user.daily_intakes )  {\n            let arr = this.props.current_user.daily_intakes.filter(dailyIntake => {\n                return dailyIntake.meal_type === 'dinner'\n\n            }) \n            return arr.map(dailyIntake => {\n                return  <tr key={dailyIntake.food.id} style={{display:  this.state.show ? '' : 'none' }}>\n                  <td> {dailyIntake.food.name }</td>\n                  <td>{dailyIntake.serving}</td>\n                  <td> {dailyIntake.food.calorie}</td> \n                  <td> {dailyIntake.food.fat} </td> \n                  <td> {dailyIntake.food.carbs}</td> \n                  <td> {dailyIntake.food.protein}</td> \n                  <td> {dailyIntake.food.sugar}</td>\n                  <td onClick={(e) => this.handleClick(e, dailyIntake)}> <span> ❌ </span> </td>\n                \n                </tr>\n              \n             })\n           }\n           return \"There is no food logged in..\"\n        }\n\n    const snacks = () => {\n        if(this.props.current_user.id && this.props.current_user.daily_intakes ) {\n            let arr = this.props.current_user.daily_intakes.filter(dailyIntake => {\n                return dailyIntake.meal_type === 'snack'\n            }) \n            return arr.map(dailyIntake => {\n                return  <tr key={dailyIntake.food.id} >\n                <td> {dailyIntake.food.name }</td> \n                <td>{dailyIntake.serving}</td>\n                <td> {dailyIntake.food.calorie}</td> \n                <td> {dailyIntake.food.fat} </td> \n                <td> {dailyIntake.food.carbs}</td> \n                <td> {dailyIntake.food.protein}</td> \n                <td> {dailyIntake.food.sugar}</td>\n                <td onClick={(e) => this.handleClick(e, dailyIntake)}> <span> ❌ </span> </td>\n                </tr>\n             })\n           }\n           return \"There is no food logged in..\"\n        }\n    \n        \n    \n  return(\n<div>\n\n<table>\n    <thead>\n     <tr>\n        <th width=\"10%\"></th> \n        <th width=\"10%\">Serving</th>\n        <th width=\"10%\">Calorie ( kcal )</th> \n       \n        <th width=\"10%\">Fat ( g )</th>\n        <th width=\"10%\">Carbs ( g )</th>\n        <th width=\"10%\">Protein ( g )</th>\n        <th width=\"10%\">Sugar ( g )</th>\n        <th width=\"10%\"></th>\n     </tr>\n    </thead>\n    <tbody>\n        \n    <tr>\n      <th width=\"10%\">Breakfast</th>\n    </tr> \n      {breakfast()}\n      \n    <tr>\n      <th width=\"10%\">Lunch</th> \n    </tr>\n     {lunch()}\n    <tr>\n      <th width=\"10%\">Dinner</th> \n    </tr>\n     {dinner()}\n  \n    <tr>\n      <th width=\"10%\">Snack</th> \n    </tr>\n      {snacks()} \n     <tr>\n       </tr> \n    <tr>\n      \n      <th>\n        Total\n      </th>\n        <td>{current_user.total_servings}</td>\n        <td>{current_user.total_calories}</td>\n        <td>{current_user.total_fat}</td>\n        <td>{current_user.total_carbs}</td>\n        <td>{current_user.total_protein}</td>\n        <td>{current_user.total_sugar}</td>\n        \n    </tr>\n    <tr>\n      <th>Your daily goal  </th>\n      <td></td>\n      <td>{current_user.goal_calorie}</td>\n      <td>{current_user.goal_fat}</td>\n      <td>{current_user.goal_carbs}</td>\n      <td>{current_user.goal_protein}</td>\n      <td>{current_user.goal_sugar}</td>\n    </tr>\n    <tr>\n    <th>Remaining </th>\n      <td></td>\n      <td>{current_user.remaining_calories}</td>\n      <td>{current_user.remaining_fat}</td>\n      <td>{current_user.remaining_carbs}</td>\n      <td>{current_user.remaining_protein}</td>\n      <td>{current_user.remaining_sugar}</td>\n    </tr>\n    </tbody>\n </table>\n </div>\n    )\n   }\n }\n const mapStateToProps = (state) => {\n    return {\n      current_user: state.user\n    }\n  }\n  \n \n export default connect(mapStateToProps)(DailyIntake)"]},"metadata":{},"sourceType":"module"}