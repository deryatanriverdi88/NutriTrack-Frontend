{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Desktop/Projects/NutriTrack-App(Mod-5)/Frontend-NutriTrack/src/Pages/DailyIntake.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport EditDailyIntake from '../Components/EditDailyIntake';\n\nclass DailyIntake extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      editForm: false,\n      dailyIntake: {},\n      serving: null,\n      mealType: \"\",\n      dailyIntakes: [],\n      date: ''\n    };\n\n    this.handleClick = (e, dailyIntakeItem) => {\n      //  console.log(dailyIntakeItem)\n      this.setState({\n        editForm: !this.state.editForm,\n        dailyIntake: dailyIntakeItem,\n        serving: dailyIntakeItem.serving,\n        mealType: dailyIntakeItem.meal_type\n      });\n    };\n\n    this.handleDateChange = e => {\n      console.log(e.target.value);\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.fetchDailyIntake = () => {\n      fetch('http://localhost:3000/daily_intakes').then(res => res.json()).then(dailyIntakeItems => {\n        console.log(dailyIntakeItems);\n        console.log(dailyIntakeItems[0].user.id);\n\n        if (this.props.current_user.id) {\n          if (dailyIntakeItems[0].user.id === this.props.current_user.id) {\n            const todayIntakes = dailyIntakeItems.filter(dailyIntakeItem => {\n              return dailyIntakeItem.changed_date === new Date().toLocaleDateString();\n            });\n            this.setState({\n              dailyIntakes: todayIntakes\n            });\n          }\n        }\n      });\n    };\n\n    this.handleChange = e => {\n      // console.log(e.target.value)\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleEditSubmit = e => {\n      e.preventDefault(); // console.log('submit')\n\n      fetch(\"http://localhost:3000/daily_intakes/\".concat(this.state.dailyIntake.id), {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n          meal_type: this.state.mealType,\n          serving: this.state.serving\n        })\n      }).then(res => res.json()).then(user => {\n        this.props.setUser(user);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchDailyIntake();\n  }\n\n  render() {\n    // const date = (() => {\n    //   if (this.props.current_user.id && this.props.current_user.daily_intakes !==  undefined ){\n    //     return this.props.current_user.daily_intakes.map(dailyIntake => {\n    //       return new Date(dailyIntake.date).toLocaleDateString()\n    //     })\n    //   }\n    // }) \n    //  console.log(this.state.dailyIntakes) \n    console.log(this.state.date === this.state.dailyIntakes); // console.log(this.props.current_user.daily_intakes)\n    // console.log(this.state.dailyIntakes)\n    // console.log(this.state.dailyIntake)\n    // console.log(this.state.dailyIntake)\n    // console.log(this.state.mealType, this.state.serving)\n\n    const current_user = this.props.current_user;\n\n    const breakfast = () => {\n      if (this.props.current_user.id && this.state.dailyIntakes) {\n        let arr = this.state.dailyIntakes.filter(dailyIntake => {\n          return dailyIntake.meal_type === 'breakfast';\n        });\n        return arr.map(dailyIntake => {\n          return React.createElement(\"tr\", {\n            key: dailyIntake.food.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122\n            },\n            __self: this\n          }, \" \", dailyIntake.food.name, \" \", React.createElement(\"button\", {\n            onClick: e => this.handleClick(e, dailyIntake),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122\n            },\n            __self: this\n          }, \" Edit \")), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123\n            },\n            __self: this\n          }, dailyIntake.serving, \" * (\", dailyIntake.food.serving_size, \" g)\"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124\n            },\n            __self: this\n          }, \" \", dailyIntake.food.calorie * dailyIntake.serving), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125\n            },\n            __self: this\n          }, \" \", (dailyIntake.food.fat * dailyIntake.serving).toFixed(2), \" \"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126\n            },\n            __self: this\n          }, \" \", (dailyIntake.food.carbs * dailyIntake.serving).toFixed(2)), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127\n            },\n            __self: this\n          }, \" \", (dailyIntake.food.protein * dailyIntake.serving).toFixed(2)), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128\n            },\n            __self: this\n          }, \" \", (dailyIntake.food.sugar * dailyIntake.serving).toFixed(2)));\n        });\n      }\n\n      return \"There is no food logged in..\";\n    };\n\n    const lunch = () => {\n      if (this.props.current_user.id && this.state.dailyIntakes) {\n        let arr = this.state.dailyIntakes.filter(dailyIntake => {\n          return dailyIntake.meal_type === 'lunch';\n        });\n        return arr.map(dailyIntake => {\n          return React.createElement(\"tr\", {\n            key: dailyIntake.food.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 142\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 143\n            },\n            __self: this\n          }, \"  \", dailyIntake.food.name, \" \", React.createElement(\"button\", {\n            onClick: e => this.handleClick(e, dailyIntake),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 143\n            },\n            __self: this\n          }, \" Edit \")), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 144\n            },\n            __self: this\n          }, dailyIntake.serving, \" * (\", dailyIntake.food.serving_size, \" g)\"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 145\n            },\n            __self: this\n          }, \" \", dailyIntake.food.calorie * dailyIntake.serving), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 146\n            },\n            __self: this\n          }, \" \", (dailyIntake.food.fat * dailyIntake.serving).toFixed(2), \" \"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 147\n            },\n            __self: this\n          }, \" \", (dailyIntake.food.carbs * dailyIntake.serving).toFixed(2)), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 148\n            },\n            __self: this\n          }, \" \", (dailyIntake.food.protein * dailyIntake.serving).toFixed(2)), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 149\n            },\n            __self: this\n          }, \" \", (dailyIntake.food.sugar * dailyIntake.serving).toFixed(2)));\n        });\n      }\n\n      return \"There is no food logged in..\";\n    };\n\n    const dinner = () => {\n      if (this.props.current_user.id && this.state.dailyIntakes) {\n        let arr = this.state.dailyIntakes.filter(dailyIntake => {\n          return dailyIntake.meal_type === 'dinner';\n        });\n        return arr.map(dailyIntake => {\n          return React.createElement(\"tr\", {\n            key: dailyIntake.food.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 164\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 165\n            },\n            __self: this\n          }, \" \", dailyIntake.food.name, \" \", React.createElement(\"button\", {\n            onClick: e => this.handleClick(e, dailyIntake),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 165\n            },\n            __self: this\n          }, \" Edit \"), \" \"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 166\n            },\n            __self: this\n          }, dailyIntake.serving, \" * (\", dailyIntake.food.serving_size, \" g)\"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 167\n            },\n            __self: this\n          }, \" \", dailyIntake.food.calorie * dailyIntake.serving), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 168\n            },\n            __self: this\n          }, \" \", (dailyIntake.food.fat * dailyIntake.serving).toFixed(2), \" \"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 169\n            },\n            __self: this\n          }, \" \", (dailyIntake.food.carbs * dailyIntake.serving).toFixed(2)), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 170\n            },\n            __self: this\n          }, \" \", (dailyIntake.food.protein * dailyIntake.serving).toFixed(2)), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 171\n            },\n            __self: this\n          }, \" \", (dailyIntake.food.sugar * dailyIntake.serving).toFixed(2)));\n        });\n      }\n\n      return \"There is no food logged in..\";\n    };\n\n    const snacks = () => {\n      if (this.props.current_user.id && this.state.dailyIntakes) {\n        let arr = this.state.dailyIntakes.filter(dailyIntake => {\n          return dailyIntake.meal_type === 'snack';\n        });\n        return arr.map(dailyIntake => {\n          debugger;\n          return React.createElement(\"tr\", {\n            key: dailyIntake.food.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 189\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 191\n            },\n            __self: this\n          }, \" \", dailyIntake.food.name, \" \", React.createElement(\"button\", {\n            onClick: e => this.handleClick(e, dailyIntake),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 191\n            },\n            __self: this\n          }, \" Edit \")), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 192\n            },\n            __self: this\n          }, \" \", dailyIntake.serving, \" * (\", dailyIntake.food.serving_size, \" g)\"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 193\n            },\n            __self: this\n          }, \" \", dailyIntake.food.calorie * dailyIntake.serving), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 194\n            },\n            __self: this\n          }, \" \", (dailyIntake.food.fat * dailyIntake.serving).toFixed(2), \" \"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 195\n            },\n            __self: this\n          }, \" \", (dailyIntake.food.carbs * dailyIntake.serving).toFixed(2)), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 196\n            },\n            __self: this\n          }, \" \", (dailyIntake.food.protein * dailyIntake.serving).toFixed(2)), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 197\n            },\n            __self: this\n          }, \" \", (dailyIntake.food.sugar * dailyIntake.serving).toFixed(2)));\n        });\n      }\n\n      return \"There is no food logged in..\";\n    };\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"date\",\n      value: this.state.date,\n      name: \"date\",\n      onChange: this.handleDateChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.fetchDailyIntake,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"Today :\", new Date().toLocaleDateString(), \" \"), this.state.editForm ? React.createElement(EditDailyIntake, {\n      handleChange: this.handleChange,\n      handleEditSubmit: this.handleEditSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }) : null, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }), React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \"Serving\"), React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, \"Calorie ( kcal )\"), React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, \"Fat ( g )\"), React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, \"Carbs ( g )\"), React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, \"Protein ( g )\"), React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, \"Sugar ( g )\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, \"Breakfast\")), breakfast(), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, \"Lunch\")), lunch(), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, \"Dinner\")), dinner(), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, \"Snack\")), snacks(), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, \"Total\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, current_user.total_servings), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, current_user.total_calories), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, current_user.total_fat), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, current_user.total_carbs), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, current_user.total_protein), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, current_user.total_sugar)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, \"Your daily goal  \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, current_user.goal_calorie), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, current_user.goal_fat), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, current_user.goal_carbs), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, current_user.goal_protein), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, current_user.goal_sugar)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, \"Remaining \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, current_user.remaining_calories), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, current_user.remaining_fat), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, current_user.remaining_carbs), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, current_user.remaining_protein), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, current_user.remaining_sugar)))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setUser: userObject => {\n      dispatch({\n        type: 'SET_USER',\n        payload: userObject\n      });\n    },\n    clearUser: () => {\n      dispatch({\n        type: 'CLEAR_USER'\n      });\n    }\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    current_user: state.user\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DailyIntake);","map":{"version":3,"sources":["/Users/flatironschool/Desktop/Projects/NutriTrack-App(Mod-5)/Frontend-NutriTrack/src/Pages/DailyIntake.js"],"names":["React","Component","connect","EditDailyIntake","DailyIntake","state","editForm","dailyIntake","serving","mealType","dailyIntakes","date","handleClick","e","dailyIntakeItem","setState","meal_type","handleDateChange","console","log","target","value","name","fetchDailyIntake","fetch","then","res","json","dailyIntakeItems","user","id","props","current_user","todayIntakes","filter","changed_date","Date","toLocaleDateString","handleChange","handleEditSubmit","preventDefault","method","headers","body","JSON","stringify","setUser","componentDidMount","render","breakfast","arr","map","food","serving_size","calorie","fat","toFixed","carbs","protein","sugar","lunch","dinner","snacks","total_servings","total_calories","total_fat","total_carbs","total_protein","total_sugar","goal_calorie","goal_fat","goal_carbs","goal_protein","goal_sugar","remaining_calories","remaining_fat","remaining_carbs","remaining_protein","remaining_sugar","mapDispatchToProps","dispatch","userObject","type","payload","clearUser","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport EditDailyIntake from '../Components/EditDailyIntake'\n\nclass DailyIntake extends Component {\n state = {\n   editForm: false, \n   dailyIntake: {},\n   serving: null,\n   mealType: \"\", \n   dailyIntakes: [], \n   date: ''\n }\n\n\n// handleClick = (e, dailyIntakeItem) => {\n//   console.log(dailyIntakeItem.id)\n//   this.setState({\n//     show: false\n//   })\n//   fetch(`http://localhost:3000/daily_intakes/${dailyIntakeItem.id}`, {\n//      method: 'DELETE'\n//    })\n// }\n\n\nhandleClick = (e, dailyIntakeItem) => {\n//  console.log(dailyIntakeItem)\n this.setState({\n   editForm: !this.state.editForm,\n   dailyIntake: dailyIntakeItem,\n   serving: dailyIntakeItem.serving,\n   mealType: dailyIntakeItem.meal_type\n })\n}\n\nhandleDateChange = (e) => {\n  console.log(e.target.value)\n  this.setState({\n    [e.target.name] : e.target.value\n  })\n}\n\ncomponentDidMount(){\n  this.fetchDailyIntake ()\n}\n\nfetchDailyIntake =  () => {\n  fetch('http://localhost:3000/daily_intakes')\n  .then(res => res.json())\n  .then(dailyIntakeItems => {\n    console.log(dailyIntakeItems)\n    console.log(dailyIntakeItems[0].user.id)\n\n    if (this.props.current_user.id){\n      if(dailyIntakeItems[0].user.id === this.props.current_user.id){\n        const todayIntakes = dailyIntakeItems.filter(dailyIntakeItem => {\n          return  dailyIntakeItem.changed_date === new Date().toLocaleDateString()\n         \n        })\n        this.setState({\n          dailyIntakes: todayIntakes\n        })\n      }\n    }\n  })\n}\n\nhandleChange = (e) =>{\n  // console.log(e.target.value)\n  this.setState({\n    [e.target.name] : e.target.value\n  })\n}\n\nhandleEditSubmit = (e) => {\n  e.preventDefault()\n  // console.log('submit')\n  fetch(`http://localhost:3000/daily_intakes/${this.state.dailyIntake.id}`, {\n    method: 'PATCH', \n    headers: {\n      'Content-Type': 'application/json',\n      'Accept':'application/json'\n    },\n    body: JSON.stringify({ \n     meal_type: this.state.mealType,\n     serving: this.state.serving\n    })\n  })\n  .then(res => res.json())\n  .then(user => {\n    this.props.setUser(user)\n  })\n} \n\n render() {\n\n\n  // const date = (() => {\n  //   if (this.props.current_user.id && this.props.current_user.daily_intakes !==  undefined ){\n  //     return this.props.current_user.daily_intakes.map(dailyIntake => {\n  //       return new Date(dailyIntake.date).toLocaleDateString()\n  //     })\n  //   }\n  // }) \n    //  console.log(this.state.dailyIntakes) \n     console.log(this.state.date === this.state.dailyIntakes)\n  // console.log(this.props.current_user.daily_intakes)\n  // console.log(this.state.dailyIntakes)\n  // console.log(this.state.dailyIntake)\n  // console.log(this.state.dailyIntake)\n  // console.log(this.state.mealType, this.state.serving)\n   const  {current_user} =this.props\n\n    const breakfast = () => {\n        if(this.props.current_user.id && this.state.dailyIntakes) {\n            let arr = this.state.dailyIntakes.filter(dailyIntake => {\n                return dailyIntake.meal_type === 'breakfast'\n            }) \n            return arr.map(dailyIntake => {\n                return  <tr key={dailyIntake.food.id} >\n                  <td> {dailyIntake.food.name } <button onClick={(e) => this.handleClick(e, dailyIntake)}> Edit </button></td> \n                  <td>{dailyIntake.serving} * ({dailyIntake.food.serving_size} g)</td>\n                  <td> {dailyIntake.food.calorie * dailyIntake.serving}</td> \n                  <td> {(dailyIntake.food.fat * dailyIntake.serving).toFixed(2)} </td> \n                  <td> {(dailyIntake.food.carbs * dailyIntake.serving).toFixed(2)}</td> \n                  <td> {(dailyIntake.food.protein * dailyIntake.serving).toFixed(2)}</td> \n                  <td> {(dailyIntake.food.sugar * dailyIntake.serving).toFixed(2)}</td>\n                  {/* <td onClick={(e) => this.handleClick(e, dailyIntake)}> <span> ❌ </span> </td> */}\n                  </tr>\n             })\n           }\n           return \"There is no food logged in..\"\n        }\n\n    const lunch = () => {\n        if(this.props.current_user.id && this.state.dailyIntakes) {\n            let arr = this.state.dailyIntakes.filter(dailyIntake => {\n                return dailyIntake.meal_type === 'lunch'\n            }) \n            return arr.map(dailyIntake => {\n                return  <tr key={dailyIntake.food.id}>\n                  <td>  {dailyIntake.food.name } <button onClick={(e) => this.handleClick(e, dailyIntake)}> Edit </button></td> \n                  <td>{dailyIntake.serving} * ({dailyIntake.food.serving_size} g)</td>\n                  <td> {dailyIntake.food.calorie * dailyIntake.serving}</td> \n                  <td> {(dailyIntake.food.fat * dailyIntake.serving).toFixed(2)} </td> \n                  <td> {(dailyIntake.food.carbs * dailyIntake.serving).toFixed(2)}</td> \n                  <td> {(dailyIntake.food.protein * dailyIntake.serving).toFixed(2)}</td> \n                  <td> {(dailyIntake.food.sugar * dailyIntake.serving).toFixed(2)}</td>\n                  {/* <td onClick={(e) => this.handleClick(e, dailyIntake)}> <span> ❌ </span> </td> */}\n                </tr>\n             })\n           }\n           return \"There is no food logged in..\"\n        }\n\n    const dinner = () => {\n        if(this.props.current_user.id && this.state.dailyIntakes )  {\n            let arr = this.state.dailyIntakes.filter(dailyIntake => {\n                return dailyIntake.meal_type === 'dinner'\n\n            }) \n            return arr.map(dailyIntake => {\n                return  <tr key={dailyIntake.food.id} >\n                  <td> {dailyIntake.food.name } <button onClick={(e) => this.handleClick(e, dailyIntake)}> Edit </button> </td>\n            <td>{dailyIntake.serving} * ({dailyIntake.food.serving_size} g)</td>\n                  <td> {dailyIntake.food.calorie * dailyIntake.serving}</td> \n                  <td> {(dailyIntake.food.fat * dailyIntake.serving).toFixed(2)} </td> \n                  <td> {(dailyIntake.food.carbs * dailyIntake.serving).toFixed(2)}</td> \n                  <td> {(dailyIntake.food.protein * dailyIntake.serving).toFixed(2)}</td> \n                  <td> {(dailyIntake.food.sugar * dailyIntake.serving).toFixed(2)}</td>\n                  {/* <td onClick={(e) => this.handleClick(e, dailyIntake)}> <span> ❌ </span> </td> */}\n                \n                </tr>\n              \n             })\n           }\n           return \"There is no food logged in..\"\n        }\n\n    const snacks = () => {\n        if(this.props.current_user.id && this.state.dailyIntakes) {\n            let arr = this.state.dailyIntakes.filter(dailyIntake => {\n                return dailyIntake.meal_type === 'snack'\n            }) \n           \n            return arr.map(dailyIntake => {\n              debugger\n                return  <tr key={dailyIntake.food.id} >\n                  \n                <td> {dailyIntake.food.name } <button onClick={(e) => this.handleClick(e, dailyIntake)}> Edit </button></td> \n                <td> {dailyIntake.serving} * ({dailyIntake.food.serving_size} g)</td>\n                <td> {dailyIntake.food.calorie * dailyIntake.serving}</td> \n                <td> {(dailyIntake.food.fat * dailyIntake.serving).toFixed(2)} </td> \n                <td> {(dailyIntake.food.carbs * dailyIntake.serving).toFixed(2)}</td> \n                <td> {(dailyIntake.food.protein * dailyIntake.serving).toFixed(2)}</td> \n                <td> {(dailyIntake.food.sugar * dailyIntake.serving).toFixed(2)}</td>\n               \n                {/* <td onClick={(e) => this.handleClick(e, dailyIntake)}> <span> ❌ </span> </td> */}\n                </tr>\n             })\n           }\n           return \"There is no food logged in..\"\n        }\n    \n        \n    \n  return(\n<div>\n  \n   <input \n         type=\"date\"\n         value={this.state.date}\n         name=\"date\"\n         onChange={this.handleDateChange}\n   />\n\n  <button onClick={this.fetchDailyIntake}>Today :{new Date().toLocaleDateString()} </button>\n\n{ this.state.editForm ?  <EditDailyIntake handleChange={this.handleChange} handleEditSubmit={this.handleEditSubmit} /> : null }\n\n<table>\n    <thead>\n     <tr>\n        <th width=\"10%\"></th> \n        <th width=\"10%\">Serving</th>\n        <th width=\"10%\">Calorie ( kcal )</th> \n       \n        <th width=\"10%\">Fat ( g )</th>\n        <th width=\"10%\">Carbs ( g )</th>\n        <th width=\"10%\">Protein ( g )</th>\n        <th width=\"10%\">Sugar ( g )</th>\n       \n     </tr>\n    </thead>\n    <tbody>\n        \n    <tr>\n      <th width=\"10%\">Breakfast</th>\n    </tr> \n      {breakfast() }\n      \n      \n    <tr>\n      <th width=\"10%\">Lunch</th> \n    </tr>\n     {lunch()}\n    <tr>\n      <th width=\"10%\">Dinner</th> \n    </tr>\n     {dinner()}\n  \n    <tr>\n      <th width=\"10%\">Snack</th> \n    </tr>\n      {snacks()} \n     <tr>\n       </tr> \n    <tr>\n      \n      <th>\n        Total\n      </th>\n        <td>{current_user.total_servings}</td>\n        <td>{current_user.total_calories}</td>\n        <td>{current_user.total_fat}</td>\n        <td>{current_user.total_carbs}</td>\n        <td>{current_user.total_protein}</td>\n        <td>{current_user.total_sugar}</td>\n        \n    </tr>\n    <tr>\n      <th>Your daily goal  </th>\n      <td></td>\n      <td>{current_user.goal_calorie}</td>\n      <td>{current_user.goal_fat}</td>\n      <td>{current_user.goal_carbs}</td>\n      <td>{current_user.goal_protein}</td>\n      <td>{current_user.goal_sugar}</td>\n    </tr>\n    <tr>\n    <th>Remaining </th>\n      <td></td>\n      <td>{current_user.remaining_calories}</td>\n      <td>{current_user.remaining_fat}</td>\n      <td>{current_user.remaining_carbs}</td>\n      <td>{current_user.remaining_protein}</td>\n      <td>{current_user.remaining_sugar}</td>\n    </tr>\n    </tbody>\n </table>\n </div>\n    )\n   }\n }\n\n const mapDispatchToProps = (dispatch) =>{\n return {\n  setUser: (userObject) => {\n    dispatch({\n        type: 'SET_USER', payload: userObject\n      })\n  }, \n  clearUser: () => {\n   dispatch({\n     type: 'CLEAR_USER'\n   })\n  }\n}\n}\n\nconst mapStateToProps = (state) => {\nreturn {\n  current_user: state.user\n}\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DailyIntake)"]},"metadata":{},"sourceType":"module"}