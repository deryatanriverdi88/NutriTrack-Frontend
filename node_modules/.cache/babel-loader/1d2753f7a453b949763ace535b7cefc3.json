{"ast":null,"code":"import _defineProperty from\"/Users/flatironschool/Desktop/Projects/NutriTrack-App(Mod-5)/Frontend-NutriTrack/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/flatironschool/Desktop/Projects/NutriTrack-App(Mod-5)/Frontend-NutriTrack/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/flatironschool/Desktop/Projects/NutriTrack-App(Mod-5)/Frontend-NutriTrack/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/flatironschool/Desktop/Projects/NutriTrack-App(Mod-5)/Frontend-NutriTrack/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/flatironschool/Desktop/Projects/NutriTrack-App(Mod-5)/Frontend-NutriTrack/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/flatironschool/Desktop/Projects/NutriTrack-App(Mod-5)/Frontend-NutriTrack/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{connect}from'react-redux';import EditDailyIntake from'../Components/EditDailyIntake';var DailyIntake=/*#__PURE__*/function(_Component){_inherits(DailyIntake,_Component);function DailyIntake(){var _getPrototypeOf2;var _this;_classCallCheck(this,DailyIntake);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(DailyIntake)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={editForm:false,dailyIntake:{},serving:null,mealType:\"\",dailyIntakes:[],date:new Date().toLocaleDateString()};_this.handleDeleteClick=function(e,dailyIntakeItem){console.log(dailyIntakeItem);fetch(\"https://nutritrack.herokuapp.com/daily_intakes/\".concat(dailyIntakeItem.id),{method:'DELETE'}).then(function(res){var newArray=_this.state.dailyIntakes.filter(function(dailyIntake){return dailyIntake.id!==dailyIntakeItem.id;});_this.setState({dailyIntakes:newArray});});};_this.handleEditForm=function(){_this.setState({editForm:false});};_this.handleClick=function(e,dailyIntakeItem){//  console.log(dailyIntakeItem)\n_this.setState({editForm:!_this.state.editForm,dailyIntake:dailyIntakeItem,serving:dailyIntakeItem.serving,mealType:dailyIntakeItem.meal_type});};_this.handleDateClick=function(){_this.setState({date:new Date().toLocaleDateString()});var date=new Date().toLocaleDateString();_this.fetchDailyIntake();_this.props.history.push(\"/daily-intake/\".concat(date));};_this.fetchDailyIntake=function(){var config={method:'GET',headers:{Authorization:localStorage.token}};fetch('https://nutritrack.herokuapp.com/daily_intakes',config).then(function(res){return res.json();}).then(function(dailyIntakeItems){// console.log(dailyIntakeItems)\nvar newIntakes=dailyIntakeItems.filter(function(dailyIntake){if(_this.state.date===new Date().toLocaleDateString()){return dailyIntake.changed_date===_this.state.date;}else{return dailyIntake.date===_this.state.date;}});_this.setState({dailyIntakes:newIntakes});});};_this.handleChange=function(e){// console.log(e.target.value)\n_this.setState(_defineProperty({},e.target.name,e.target.value));};_this.handleDateChange=function(e){console.log(e.target.value);_this.setState(_defineProperty({},e.target.name,e.target.value));_this.fetchDailyIntake();_this.props.history.push(\"/daily-intake/\".concat(e.target.value));};_this.handleEditSubmit=function(e){e.preventDefault();// console.log('submit')\nfetch(\"https://nutritrack.herokuapp.com/daily_intakes/\".concat(_this.state.dailyIntake.id),{method:'PATCH',headers:{'Content-Type':'application/json','Accept':'application/json'},body:JSON.stringify({meal_type:_this.state.mealType,serving:_this.state.serving})}).then(function(res){return res.json();}).then(function(intake){var newItem=_this.state.dailyIntakes.map(function(intakeItem){return intakeItem.id===intake.id?intake:intakeItem;});// this.props.setUser(user) \n_this.setState({dailyIntake:intake,dailyIntakes:newItem,editForm:false});});};return _this;}_createClass(DailyIntake,[{key:\"componentDidMount\",value:function componentDidMount(){this.fetchDailyIntake();var date=this.props.match.params.date;if(date){this.setState({date:date});}else{this.setState({date:new Date().toLocaleDateString()});}// debugger\n}},{key:\"render\",value:function render(){var _this2=this;console.log(this.state.date);var current_user=this.props.current_user;var breakfast=function breakfast(){if(_this2.state.dailyIntakes){var arr=_this2.state.dailyIntakes.filter(function(dailyIntake){return dailyIntake.meal_type==='breakfast';});return arr.map(function(dailyIntake){return React.createElement(\"tr\",{key:dailyIntake.food.id},React.createElement(\"td\",null,\" \",dailyIntake.food.name,\" \",dailyIntake.changed_date,\" \",React.createElement(\"button\",{className:\"edit-intake\",onClick:function onClick(e){return _this2.handleClick(e,dailyIntake);}},\" Edit \")),React.createElement(\"td\",null,dailyIntake.serving,\" \\u2716\\uFE0F  (\",dailyIntake.food.serving_size,\" g)\"),React.createElement(\"td\",{className:\"calorie\"},\" \",dailyIntake.food.calorie*dailyIntake.serving),React.createElement(\"td\",{className:\"fat\"},\" \",(dailyIntake.food.fat*dailyIntake.serving).toFixed(2),\" \"),React.createElement(\"td\",{className:\"carbs\"},\" \",(dailyIntake.food.carbs*dailyIntake.serving).toFixed(2)),React.createElement(\"td\",{className:\"protein\"},\" \",(dailyIntake.food.protein*dailyIntake.serving).toFixed(2)),React.createElement(\"td\",{className:\"sugar\"},\" \",(dailyIntake.food.sugar*dailyIntake.serving).toFixed(2)),React.createElement(\"td\",{className:\"delete\",onClick:function onClick(e){return _this2.handleDeleteClick(e,dailyIntake);}},\" \",React.createElement(\"span\",null,\" \\u274C \"),\" \"));});}return\"There is no food logged in..\";};var lunch=function lunch(){if(_this2.state.dailyIntakes){var arr=_this2.state.dailyIntakes.filter(function(dailyIntake){return dailyIntake.meal_type==='lunch';});return arr.map(function(dailyIntake){return React.createElement(\"tr\",{key:dailyIntake.food.id},React.createElement(\"td\",null,\"  \",dailyIntake.food.name,\" \",dailyIntake.changed_date,\" \",React.createElement(\"button\",{className:\"edit-intake\",onClick:function onClick(e){return _this2.handleClick(e,dailyIntake);}},\" Edit \")),React.createElement(\"td\",null,dailyIntake.serving,\" \\u2716\\uFE0F  (\",dailyIntake.food.serving_size,\" g)\"),React.createElement(\"td\",{className:\"calorie\"},\" \",dailyIntake.food.calorie*dailyIntake.serving),React.createElement(\"td\",{className:\"fat\"},\" \",(dailyIntake.food.fat*dailyIntake.serving).toFixed(2),\" \"),React.createElement(\"td\",{className:\"carbs\"},\" \",(dailyIntake.food.carbs*dailyIntake.serving).toFixed(2)),React.createElement(\"td\",{className:\"protein\"},\" \",(dailyIntake.food.protein*dailyIntake.serving).toFixed(2)),React.createElement(\"td\",{className:\"sugar\"},\" \",(dailyIntake.food.sugar*dailyIntake.serving).toFixed(2)),React.createElement(\"td\",{className:\"delete\",onClick:function onClick(e){return _this2.handleDeleteClick(e,dailyIntake);}},\" \",React.createElement(\"span\",null,\" \\u274C \"),\" \"));});}return\"There is no food logged in..\";};var dinner=function dinner(){if(_this2.state.dailyIntakes){var arr=_this2.state.dailyIntakes.filter(function(dailyIntake){return dailyIntake.meal_type==='dinner';});return arr.map(function(dailyIntake){return React.createElement(\"tr\",{key:dailyIntake.food.id},React.createElement(\"td\",null,\" \",dailyIntake.food.name,\" \",dailyIntake.changed_date,React.createElement(\"button\",{className:\"edit-intake\",onClick:function onClick(e){return _this2.handleClick(e,dailyIntake);}},\" Edit \"),\" \"),React.createElement(\"td\",null,dailyIntake.serving,\" \\u2716\\uFE0F  (\",dailyIntake.food.serving_size,\" g)\"),React.createElement(\"td\",{className:\"calorie\"},\" \",dailyIntake.food.calorie*dailyIntake.serving),React.createElement(\"td\",{className:\"fat\"},\" \",(dailyIntake.food.fat*dailyIntake.serving).toFixed(2),\" \"),React.createElement(\"td\",{className:\"carbs\"},\" \",(dailyIntake.food.carbs*dailyIntake.serving).toFixed(2)),React.createElement(\"td\",{className:\"protein\"},\" \",(dailyIntake.food.protein*dailyIntake.serving).toFixed(2)),React.createElement(\"td\",{className:\"sugar\"},\" \",(dailyIntake.food.sugar*dailyIntake.serving).toFixed(2)),React.createElement(\"td\",{onClick:function onClick(e){return _this2.handleDeleteClick(e,dailyIntake);}},\" \",React.createElement(\"span\",null,\" \\u274C \"),\" \"));});}return\"There is no food logged in..\";};var snacks=function snacks(){if(_this2.state.dailyIntakes){var arr=_this2.state.dailyIntakes.filter(function(dailyIntake){return dailyIntake.meal_type==='snack';});return arr.map(function(dailyIntake){// debugger\nreturn React.createElement(\"tr\",{key:dailyIntake.food.id},React.createElement(\"td\",null,\" \",dailyIntake.food.name,\" \",dailyIntake.changed_date,\" \",React.createElement(\"button\",{className:\"edit-intake\",onClick:function onClick(e){return _this2.handleClick(e,dailyIntake);}},\" Edit \")),React.createElement(\"td\",null,\" \",dailyIntake.serving,\" \\u2716\\uFE0F (\",dailyIntake.food.serving_size,\" g)\"),React.createElement(\"td\",{className:\"calorie\"},\" \",dailyIntake.food.calorie*dailyIntake.serving),React.createElement(\"td\",{className:\"fat\"},\" \",(dailyIntake.food.fat*dailyIntake.serving).toFixed(2),\" \"),React.createElement(\"td\",{className:\"carbs\"},\" \",(dailyIntake.food.carbs*dailyIntake.serving).toFixed(2)),React.createElement(\"td\",{className:\"protein\"},\" \",(dailyIntake.food.protein*dailyIntake.serving).toFixed(2)),React.createElement(\"td\",{className:\"sugar\"},\"  \",(dailyIntake.food.sugar*dailyIntake.serving).toFixed(2)),React.createElement(\"td\",{className:\"deleteIntake\",width:\"10%\",onClick:function onClick(e){return _this2.handleDeleteClick(e,dailyIntake);}},\" \",React.createElement(\"span\",null,\" \\u274C \"),\" \"));});}return\"There is no food logged in..\";};var totals=function totals(){var totals={protein:0,sugar:0,carbs:0,fat:0,servings:0,calories:0};if(_this2.state.dailyIntakes.length){_this2.state.dailyIntakes.forEach(function(i){totals.servings+=i.serving;totals.protein+=i.total_protein;totals.sugar+=i.total_sugar;totals.carbs+=i.total_carbs;totals.fat+=i.total_fat;totals.calories+=i.total_calories;});}return totals;};var remaining=function remaining(){var total={protein:0,sugar:0,carbs:0,fat:0,calories:0};if(_this2.state.dailyIntakes.length){_this2.state.dailyIntakes.forEach(function(i){// debugger\ntotal.calories=current_user.goal_calorie-totals().calories;total.protein=current_user.goal_protein-totals().protein;total.sugar=current_user.goal_sugar-totals().sugar;total.carbs=current_user.goal_carbs-totals().carbs;total.fat=current_user.goal_fat-totals().fat;});}return total;};return React.createElement(\"div\",{className:\"daily-intake\"},React.createElement(\"p\",{className:\"select-day\"},\" Select a date\"),React.createElement(\"input\",{type:\"date\",className:\"date\",value:this.state.date,onChange:this.handleDateChange,name:\"date\"}),React.createElement(\"button\",{className:\"date today\",onClick:this.handleDateClick},\"Today \"),this.state.editForm?React.createElement(EditDailyIntake,{intake:this.state.dailyIntake,handleClick:this.handleEditForm,handleChange:this.handleChange,handleEditSubmit:this.handleEditSubmit}):null,React.createElement(\"table\",null,React.createElement(\"thead\",null,React.createElement(\"tr\",{className:\"row\"},React.createElement(\"th\",{width:\"20%\",style:{border:'none'}}),React.createElement(\"th\",{width:\"10%\"},\"Serving\"),React.createElement(\"th\",{className:\"calorie\",width:\"10%\"},\"Calorie ( kcal )\"),React.createElement(\"th\",{width:\"10%\",className:\"fat\"},\"Fat ( g )\"),React.createElement(\"th\",{width:\"10%\",className:\"carbs\"},\"Carbs ( g )\"),React.createElement(\"th\",{width:\"10%\",className:\"protein\"},\"Protein ( g )\"),React.createElement(\"th\",{width:\"10%\",className:\"sugar\"},\"Sugar ( g )\"),React.createElement(\"th\",{width:\"1%\",style:{border:'none'}}))),React.createElement(\"tbody\",null,React.createElement(\"tr\",{className:\"row\"},React.createElement(\"th\",{width:\"0%\",className:\"breakfast\"},\"Breakfast\")),breakfast(),React.createElement(\"tr\",{className:\"row\"},React.createElement(\"th\",{width:\"10%\",className:\"lunch\"},\"Lunch\")),lunch(),React.createElement(\"tr\",{className:\"row\"},React.createElement(\"th\",{width:\"10%\",className:\"dinner\"},\"Dinner\")),dinner(),React.createElement(\"tr\",{className:\"row\"},React.createElement(\"th\",{width:\"10%\",className:\"snack\"},\"Snack\")),snacks(),React.createElement(\"tr\",{className:\"row\"}),React.createElement(\"tr\",{className:\"row\"},React.createElement(\"th\",null,\"Total\"),React.createElement(\"td\",null,totals().servings),React.createElement(\"td\",{className:\"calorie\"},totals().calories),React.createElement(\"td\",{className:\"fat\"},totals().fat.toFixed(2)),React.createElement(\"td\",{className:\"carbs\"},totals().carbs.toFixed(2)),React.createElement(\"td\",{className:\"protein\"},totals().protein.toFixed(2)),React.createElement(\"td\",{className:\"sugar\"},totals().sugar.toFixed(2))),React.createElement(\"tr\",{className:\"row\"},React.createElement(\"th\",null,\"Your daily goal  \"),React.createElement(\"td\",null),React.createElement(\"td\",{className:\"calorie\"},current_user.goal_calorie),React.createElement(\"td\",{className:\"fat\"},current_user.goal_fat),React.createElement(\"td\",{className:\"carbs\"},current_user.goal_carbs),React.createElement(\"td\",{className:\"protein\"},current_user.goal_protein),React.createElement(\"td\",{className:\"sugar\"},current_user.goal_sugar)),React.createElement(\"tr\",{className:\"row\"},React.createElement(\"th\",null,\"Remaining \"),React.createElement(\"td\",null),remaining().calories<0?React.createElement(\"td\",{className:\"exeeded\"},remaining().calories):React.createElement(\"td\",{className:\"calorie\"},remaining().calories),remaining().fat<0?React.createElement(\"td\",{className:\"exeeded \"},remaining().fat.toFixed(2)):React.createElement(\"td\",{className:\"fat\"},remaining().fat.toFixed(2)),remaining().carbs<0?React.createElement(\"td\",{className:\"exeeded\"},remaining().carbs.toFixed(2)):React.createElement(\"td\",{className:\"carbs\"},remaining().carbs.toFixed(2)),remaining().protein<0?React.createElement(\"td\",{className:\"exeeded\"},remaining().protein.toFixed(2)):React.createElement(\"td\",{className:\"protein\"},remaining().protein.toFixed(2)),remaining().sugar<0?React.createElement(\"td\",{className:\"exeeded\"},remaining().sugar.toFixed(2)):React.createElement(\"td\",{className:\"sugar\"},remaining().sugar.toFixed(2))))));}}]);return DailyIntake;}(Component);var mapDispatchToProps=function mapDispatchToProps(dispatch){return{setUser:function setUser(userObject){dispatch({type:'SET_USER',payload:userObject});},clearUser:function clearUser(){dispatch({type:'CLEAR_USER'});}};};var mapStateToProps=function mapStateToProps(state){return{current_user:state.user};};export default connect(mapStateToProps,mapDispatchToProps)(DailyIntake);","map":{"version":3,"sources":["/Users/flatironschool/Desktop/Projects/NutriTrack-App(Mod-5)/Frontend-NutriTrack/src/Pages/DailyIntake.js"],"names":["React","Component","connect","EditDailyIntake","DailyIntake","state","editForm","dailyIntake","serving","mealType","dailyIntakes","date","Date","toLocaleDateString","handleDeleteClick","e","dailyIntakeItem","console","log","fetch","id","method","then","res","newArray","filter","setState","handleEditForm","handleClick","meal_type","handleDateClick","fetchDailyIntake","props","history","push","config","headers","Authorization","localStorage","token","json","dailyIntakeItems","newIntakes","changed_date","handleChange","target","name","value","handleDateChange","handleEditSubmit","preventDefault","body","JSON","stringify","intake","newItem","map","intakeItem","match","params","current_user","breakfast","arr","food","serving_size","calorie","fat","toFixed","carbs","protein","sugar","lunch","dinner","snacks","totals","servings","calories","length","forEach","i","total_protein","total_sugar","total_carbs","total_fat","total_calories","remaining","total","goal_calorie","goal_protein","goal_sugar","goal_carbs","goal_fat","border","mapDispatchToProps","dispatch","setUser","userObject","type","payload","clearUser","mapStateToProps","user"],"mappings":"k+BAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,eAAP,KAA4B,+BAA5B,C,GAEMC,CAAAA,W,mZACLC,K,CAAQ,CACNC,QAAQ,CAAE,KADJ,CAENC,WAAW,CAAE,EAFP,CAGNC,OAAO,CAAE,IAHH,CAINC,QAAQ,CAAE,EAJJ,CAKNC,YAAY,CAAE,EALR,CAMNC,IAAI,CAAE,GAAIC,CAAAA,IAAJ,GAAWC,kBAAX,EANA,C,OAYTC,iB,CAAoB,SAACC,CAAD,CAAIC,eAAJ,CAAwB,CACzCC,OAAO,CAACC,GAAR,CAAYF,eAAZ,EACAG,KAAK,0DAAmDH,eAAe,CAACI,EAAnE,EAAyE,CACxEC,MAAM,CAAE,QADgE,CAAzE,CAAL,CAEOC,IAFP,CAEY,SAAAC,GAAG,CAAI,CACb,GAAMC,CAAAA,QAAQ,CAAG,MAAKnB,KAAL,CAAWK,YAAX,CAAwBe,MAAxB,CAA+B,SAAAlB,WAAW,CAAG,CAC5D,MAAOA,CAAAA,WAAW,CAACa,EAAZ,GAAmBJ,eAAe,CAACI,EAA1C,CACA,CAFe,CAAjB,CAGC,MAAKM,QAAL,CAAc,CACbhB,YAAY,CAAEc,QADD,CAAd,EAGF,CATL,EAWF,C,OAEDG,c,CAAiB,UAAK,CACpB,MAAKD,QAAL,CAAc,CACZpB,QAAQ,CAAE,KADE,CAAd,EAGD,C,OAGDsB,W,CAAc,SAACb,CAAD,CAAIC,eAAJ,CAAwB,CACtC;AACC,MAAKU,QAAL,CAAc,CACZpB,QAAQ,CAAE,CAAC,MAAKD,KAAL,CAAWC,QADV,CAEZC,WAAW,CAAES,eAFD,CAGZR,OAAO,CAAEQ,eAAe,CAACR,OAHb,CAIZC,QAAQ,CAAEO,eAAe,CAACa,SAJd,CAAd,EAMA,C,OAEDC,e,CAAkB,UAAK,CACrB,MAAKJ,QAAL,CAAc,CACZf,IAAI,CAAE,GAAIC,CAAAA,IAAJ,GAAWC,kBAAX,EADM,CAAd,EAGA,GAAMF,CAAAA,IAAI,CAAG,GAAIC,CAAAA,IAAJ,GAAWC,kBAAX,EAAb,CACA,MAAKkB,gBAAL,GACA,MAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,yBAAyCvB,IAAzC,GACD,C,OAiBDoB,gB,CAAoB,UAAM,CACxB,GAAMI,CAAAA,MAAM,CAAG,CACbd,MAAM,CAAE,KADK,CAEbe,OAAO,CAAE,CACPC,aAAa,CAAEC,YAAY,CAACC,KADrB,CAFI,CAAf,CAMApB,KAAK,CAAC,gDAAD,CAAmDgB,MAAnD,CAAL,CACCb,IADD,CACM,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACiB,IAAJ,EAAJ,EADT,EAEClB,IAFD,CAEM,SAAAmB,gBAAgB,CAAI,CACxB;AAED,GAAMC,CAAAA,UAAU,CAAGD,gBAAgB,CAAChB,MAAjB,CAAwB,SAAAlB,WAAW,CAAI,CACxD,GAAI,MAAKF,KAAL,CAAWM,IAAX,GAAoB,GAAIC,CAAAA,IAAJ,GAAWC,kBAAX,EAAxB,CAAyD,CACvD,MAAON,CAAAA,WAAW,CAACoC,YAAZ,GAA6B,MAAKtC,KAAL,CAAWM,IAA/C,CACA,CAFF,IAEQ,CACL,MAAQJ,CAAAA,WAAW,CAACI,IAAZ,GAAqB,MAAKN,KAAL,CAAWM,IAAxC,CACD,CACH,CANkB,CAAnB,CAOK,MAAKe,QAAL,CAAc,CACZhB,YAAY,CAAEgC,UADF,CAAd,EAIL,CAhBD,EAiBD,C,OAEDE,Y,CAAe,SAAC7B,CAAD,CAAM,CACnB;AACA,MAAKW,QAAL,oBACGX,CAAC,CAAC8B,MAAF,CAASC,IADZ,CACmB/B,CAAC,CAAC8B,MAAF,CAASE,KAD5B,GAGD,C,OAEDC,gB,CAAmB,SAACjC,CAAD,CAAO,CACxBE,OAAO,CAACC,GAAR,CAAYH,CAAC,CAAC8B,MAAF,CAASE,KAArB,EACA,MAAKrB,QAAL,oBACGX,CAAC,CAAC8B,MAAF,CAASC,IADZ,CACmB/B,CAAC,CAAC8B,MAAF,CAASE,KAD5B,GAGA,MAAKhB,gBAAL,GAEA,MAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,yBAAyCnB,CAAC,CAAC8B,MAAF,CAASE,KAAlD,GACD,C,OAEDE,gB,CAAmB,SAAClC,CAAD,CAAO,CACxBA,CAAC,CAACmC,cAAF,GACA;AACA/B,KAAK,0DAAmD,MAAKd,KAAL,CAAWE,WAAX,CAAuBa,EAA1E,EAAgF,CACnFC,MAAM,CAAE,OAD2E,CAEnFe,OAAO,CAAE,CACP,eAAgB,kBADT,CAEP,SAAS,kBAFF,CAF0E,CAMnFe,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACpBxB,SAAS,CAAE,MAAKxB,KAAL,CAAWI,QADF,CAEpBD,OAAO,CAAE,MAAKH,KAAL,CAAWG,OAFA,CAAf,CAN6E,CAAhF,CAAL,CAWCc,IAXD,CAWM,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACiB,IAAJ,EAAJ,EAXT,EAYClB,IAZD,CAYM,SAAAgC,MAAM,CAAI,CACd,GAAMC,CAAAA,OAAO,CAAI,MAAKlD,KAAL,CAAWK,YAAX,CAAwB8C,GAAxB,CAA4B,SAAAC,UAAU,CAAI,CACvD,MAAOA,CAAAA,UAAU,CAACrC,EAAX,GAAkBkC,MAAM,CAAClC,EAAzB,CAA8BkC,MAA9B,CAAuCG,UAA9C,CACH,CAFgB,CAAjB,CAGA;AACA,MAAK/B,QAAL,CAAc,CACZnB,WAAW,CAAG+C,MADF,CAEZ5C,YAAY,CAAG6C,OAFH,CAGZjD,QAAQ,CAAE,KAHE,CAAd,EAKD,CAtBD,EAuBD,C,oGApFkB,CACjB,KAAKyB,gBAAL,GACA,GAAMpB,CAAAA,IAAI,CAAG,KAAKqB,KAAL,CAAW0B,KAAX,CAAiBC,MAAjB,CAAwBhD,IAArC,CACA,GAAKA,IAAL,CAAY,CACV,KAAKe,QAAL,CAAc,CACZf,IAAI,CAAEA,IADM,CAAd,EAGD,CAJD,IAIO,CACL,KAAKe,QAAL,CAAc,CACZf,IAAI,CAAE,GAAIC,CAAAA,IAAJ,GAAWC,kBAAX,EADM,CAAd,EAGD,CACD;AACD,C,uCAyES,iBAGRI,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWM,IAAvB,EAHQ,GAMCiD,CAAAA,YAND,CAMgB,KAAK5B,KANrB,CAMC4B,YAND,CAQN,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACpB,GAAG,MAAI,CAACxD,KAAL,CAAWK,YAAd,CAA4B,CACxB,GAAIoD,CAAAA,GAAG,CAAG,MAAI,CAACzD,KAAL,CAAWK,YAAX,CAAwBe,MAAxB,CAA+B,SAAAlB,WAAW,CAAI,CACpD,MAAOA,CAAAA,WAAW,CAACsB,SAAZ,GAA0B,WAAjC,CACH,CAFS,CAAV,CAGA,MAAOiC,CAAAA,GAAG,CAACN,GAAJ,CAAQ,SAAAjD,WAAW,CAAI,CAC1B,MAAQ,2BAAI,GAAG,CAAEA,WAAW,CAACwD,IAAZ,CAAiB3C,EAA1B,EACN,kCAAMb,WAAW,CAACwD,IAAZ,CAAiBjB,IAAvB,KAA+BvC,WAAW,CAACoC,YAA3C,KAAyD,8BAAQ,SAAS,CAAC,aAAlB,CAAgC,OAAO,CAAE,iBAAC5B,CAAD,QAAO,CAAA,MAAI,CAACa,WAAL,CAAiBb,CAAjB,CAAoBR,WAApB,CAAP,EAAzC,WAAzD,CADM,CAEN,8BAAKA,WAAW,CAACC,OAAjB,oBAAgCD,WAAW,CAACwD,IAAZ,CAAiBC,YAAjD,OAFM,CAGN,0BAAI,SAAS,CAAC,SAAd,MAA0BzD,WAAW,CAACwD,IAAZ,CAAiBE,OAAjB,CAA2B1D,WAAW,CAACC,OAAjE,CAHM,CAIN,0BAAI,SAAS,CAAC,KAAd,MAAsB,CAACD,WAAW,CAACwD,IAAZ,CAAiBG,GAAjB,CAAuB3D,WAAW,CAACC,OAApC,EAA6C2D,OAA7C,CAAqD,CAArD,CAAtB,KAJM,CAKN,0BAAI,SAAS,CAAC,OAAd,MAAwB,CAAC5D,WAAW,CAACwD,IAAZ,CAAiBK,KAAjB,CAAyB7D,WAAW,CAACC,OAAtC,EAA+C2D,OAA/C,CAAuD,CAAvD,CAAxB,CALM,CAMN,0BAAI,SAAS,CAAC,SAAd,MAA0B,CAAC5D,WAAW,CAACwD,IAAZ,CAAiBM,OAAjB,CAA2B9D,WAAW,CAACC,OAAxC,EAAiD2D,OAAjD,CAAyD,CAAzD,CAA1B,CANM,CAON,0BAAI,SAAS,CAAC,OAAd,MAAwB,CAAC5D,WAAW,CAACwD,IAAZ,CAAiBO,KAAjB,CAAyB/D,WAAW,CAACC,OAAtC,EAA+C2D,OAA/C,CAAuD,CAAvD,CAAxB,CAPM,CAQN,0BAAI,SAAS,CAAC,QAAd,CAAuB,OAAO,CAAE,iBAACpD,CAAD,QAAO,CAAA,MAAI,CAACD,iBAAL,CAAuBC,CAAvB,CAA0BR,WAA1B,CAAP,EAAhC,MAAgF,2CAAhF,KARM,CAAR,CAUF,CAXK,CAAP,CAYA,CACD,MAAO,8BAAP,CACF,CAnBL,CAqBA,GAAMgE,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,CAChB,GAAG,MAAI,CAAClE,KAAL,CAAWK,YAAd,CAA4B,CACxB,GAAIoD,CAAAA,GAAG,CAAG,MAAI,CAACzD,KAAL,CAAWK,YAAX,CAAwBe,MAAxB,CAA+B,SAAAlB,WAAW,CAAI,CACpD,MAAOA,CAAAA,WAAW,CAACsB,SAAZ,GAA0B,OAAjC,CACH,CAFS,CAAV,CAGA,MAAOiC,CAAAA,GAAG,CAACN,GAAJ,CAAQ,SAAAjD,WAAW,CAAI,CAC1B,MAAQ,2BAAI,GAAG,CAAEA,WAAW,CAACwD,IAAZ,CAAiB3C,EAA1B,EACN,mCAAOb,WAAW,CAACwD,IAAZ,CAAiBjB,IAAxB,KAAgCvC,WAAW,CAACoC,YAA5C,KAA0D,8BAAQ,SAAS,CAAC,aAAlB,CAAgC,OAAO,CAAE,iBAAC5B,CAAD,QAAO,CAAA,MAAI,CAACa,WAAL,CAAiBb,CAAjB,CAAoBR,WAApB,CAAP,EAAzC,WAA1D,CADM,CAEN,8BAAKA,WAAW,CAACC,OAAjB,oBAAgCD,WAAW,CAACwD,IAAZ,CAAiBC,YAAjD,OAFM,CAGN,0BAAI,SAAS,CAAC,SAAd,MAA0BzD,WAAW,CAACwD,IAAZ,CAAiBE,OAAjB,CAA2B1D,WAAW,CAACC,OAAjE,CAHM,CAIN,0BAAI,SAAS,CAAC,KAAd,MAAsB,CAACD,WAAW,CAACwD,IAAZ,CAAiBG,GAAjB,CAAuB3D,WAAW,CAACC,OAApC,EAA6C2D,OAA7C,CAAqD,CAArD,CAAtB,KAJM,CAKN,0BAAI,SAAS,CAAC,OAAd,MAAwB,CAAC5D,WAAW,CAACwD,IAAZ,CAAiBK,KAAjB,CAAyB7D,WAAW,CAACC,OAAtC,EAA+C2D,OAA/C,CAAuD,CAAvD,CAAxB,CALM,CAMN,0BAAI,SAAS,CAAC,SAAd,MAA0B,CAAC5D,WAAW,CAACwD,IAAZ,CAAiBM,OAAjB,CAA2B9D,WAAW,CAACC,OAAxC,EAAiD2D,OAAjD,CAAyD,CAAzD,CAA1B,CANM,CAON,0BAAI,SAAS,CAAC,OAAd,MAAwB,CAAC5D,WAAW,CAACwD,IAAZ,CAAiBO,KAAjB,CAAyB/D,WAAW,CAACC,OAAtC,EAA+C2D,OAA/C,CAAuD,CAAvD,CAAxB,CAPM,CAQN,0BAAI,SAAS,CAAC,QAAd,CAAuB,OAAO,CAAE,iBAACpD,CAAD,QAAO,CAAA,MAAI,CAACD,iBAAL,CAAuBC,CAAvB,CAA0BR,WAA1B,CAAP,EAAhC,MAAgF,2CAAhF,KARM,CAAR,CAUF,CAXK,CAAP,CAYA,CACD,MAAO,8BAAP,CACF,CAnBL,CAqBA,GAAMiE,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACjB,GAAG,MAAI,CAACnE,KAAL,CAAWK,YAAd,CAA8B,CAC1B,GAAIoD,CAAAA,GAAG,CAAG,MAAI,CAACzD,KAAL,CAAWK,YAAX,CAAwBe,MAAxB,CAA+B,SAAAlB,WAAW,CAAI,CACpD,MAAOA,CAAAA,WAAW,CAACsB,SAAZ,GAA0B,QAAjC,CAEH,CAHS,CAAV,CAIA,MAAOiC,CAAAA,GAAG,CAACN,GAAJ,CAAQ,SAAAjD,WAAW,CAAI,CAC1B,MAAQ,2BAAI,GAAG,CAAEA,WAAW,CAACwD,IAAZ,CAAiB3C,EAA1B,EACN,kCAAMb,WAAW,CAACwD,IAAZ,CAAiBjB,IAAvB,KAA+BvC,WAAW,CAACoC,YAA3C,CAAwD,8BAAQ,SAAS,CAAC,aAAlB,CAAgC,OAAO,CAAE,iBAAC5B,CAAD,QAAO,CAAA,MAAI,CAACa,WAAL,CAAiBb,CAAjB,CAAoBR,WAApB,CAAP,EAAzC,WAAxD,KADM,CAEZ,8BAAKA,WAAW,CAACC,OAAjB,oBAAgCD,WAAW,CAACwD,IAAZ,CAAiBC,YAAjD,OAFY,CAGN,0BAAI,SAAS,CAAC,SAAd,MAA0BzD,WAAW,CAACwD,IAAZ,CAAiBE,OAAjB,CAA2B1D,WAAW,CAACC,OAAjE,CAHM,CAIN,0BAAI,SAAS,CAAC,KAAd,MAAsB,CAACD,WAAW,CAACwD,IAAZ,CAAiBG,GAAjB,CAAuB3D,WAAW,CAACC,OAApC,EAA6C2D,OAA7C,CAAqD,CAArD,CAAtB,KAJM,CAKN,0BAAI,SAAS,CAAC,OAAd,MAAwB,CAAC5D,WAAW,CAACwD,IAAZ,CAAiBK,KAAjB,CAAyB7D,WAAW,CAACC,OAAtC,EAA+C2D,OAA/C,CAAuD,CAAvD,CAAxB,CALM,CAMN,0BAAI,SAAS,CAAC,SAAd,MAA0B,CAAC5D,WAAW,CAACwD,IAAZ,CAAiBM,OAAjB,CAA2B9D,WAAW,CAACC,OAAxC,EAAiD2D,OAAjD,CAAyD,CAAzD,CAA1B,CANM,CAON,0BAAI,SAAS,CAAC,OAAd,MAAwB,CAAC5D,WAAW,CAACwD,IAAZ,CAAiBO,KAAjB,CAAyB/D,WAAW,CAACC,OAAtC,EAA+C2D,OAA/C,CAAuD,CAAvD,CAAxB,CAPM,CAQN,0BAAK,OAAO,CAAE,iBAACpD,CAAD,QAAO,CAAA,MAAI,CAACD,iBAAL,CAAuBC,CAAvB,CAA0BR,WAA1B,CAAP,EAAd,MAA8D,2CAA9D,KARM,CAAR,CAYF,CAbK,CAAP,CAcA,CACD,MAAO,8BAAP,CACF,CAtBL,CAwBA,GAAMkE,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACjB,GAAG,MAAI,CAACpE,KAAL,CAAWK,YAAd,CAA4B,CACxB,GAAIoD,CAAAA,GAAG,CAAG,MAAI,CAACzD,KAAL,CAAWK,YAAX,CAAwBe,MAAxB,CAA+B,SAAAlB,WAAW,CAAI,CACpD,MAAOA,CAAAA,WAAW,CAACsB,SAAZ,GAA0B,OAAjC,CACH,CAFS,CAAV,CAIA,MAAOiC,CAAAA,GAAG,CAACN,GAAJ,CAAQ,SAAAjD,WAAW,CAAI,CAC5B;AACE,MAAQ,2BAAI,GAAG,CAAEA,WAAW,CAACwD,IAAZ,CAAiB3C,EAA1B,EAER,kCAAMb,WAAW,CAACwD,IAAZ,CAAiBjB,IAAvB,KAA+BvC,WAAW,CAACoC,YAA3C,KAAyD,8BAAQ,SAAS,CAAC,aAAlB,CAAgC,OAAO,CAAE,iBAAC5B,CAAD,QAAO,CAAA,MAAI,CAACa,WAAL,CAAiBb,CAAjB,CAAoBR,WAApB,CAAP,EAAzC,WAAzD,CAFQ,CAGR,kCAAMA,WAAW,CAACC,OAAlB,mBAAgCD,WAAW,CAACwD,IAAZ,CAAiBC,YAAjD,OAHQ,CAIR,0BAAI,SAAS,CAAC,SAAd,MAA0BzD,WAAW,CAACwD,IAAZ,CAAiBE,OAAjB,CAA2B1D,WAAW,CAACC,OAAjE,CAJQ,CAKR,0BAAI,SAAS,CAAC,KAAd,MAAsB,CAACD,WAAW,CAACwD,IAAZ,CAAiBG,GAAjB,CAAuB3D,WAAW,CAACC,OAApC,EAA6C2D,OAA7C,CAAqD,CAArD,CAAtB,KALQ,CAMR,0BAAI,SAAS,CAAC,OAAd,MAAwB,CAAC5D,WAAW,CAACwD,IAAZ,CAAiBK,KAAjB,CAAyB7D,WAAW,CAACC,OAAtC,EAA+C2D,OAA/C,CAAuD,CAAvD,CAAxB,CANQ,CAOR,0BAAI,SAAS,CAAC,SAAd,MAA0B,CAAC5D,WAAW,CAACwD,IAAZ,CAAiBM,OAAjB,CAA2B9D,WAAW,CAACC,OAAxC,EAAiD2D,OAAjD,CAAyD,CAAzD,CAA1B,CAPQ,CAQR,0BAAI,SAAS,CAAC,OAAd,OAAyB,CAAC5D,WAAW,CAACwD,IAAZ,CAAiBO,KAAjB,CAAyB/D,WAAW,CAACC,OAAtC,EAA+C2D,OAA/C,CAAuD,CAAvD,CAAzB,CARQ,CAUR,0BAAI,SAAS,CAAC,cAAd,CAA6B,KAAK,CAAC,KAAnC,CAAyC,OAAO,CAAE,iBAACpD,CAAD,QAAO,CAAA,MAAI,CAACD,iBAAL,CAAuBC,CAAvB,CAA0BR,WAA1B,CAAP,EAAlD,MAAkG,2CAAlG,KAVQ,CAAR,CAYF,CAdK,CAAP,CAeA,CACD,MAAO,8BAAP,CACF,CAvBL,CAyBI,GAAMmE,CAAAA,MAAM,CAAG,iBAAM,CACnB,GAAIA,CAAAA,MAAM,CAAG,CACXL,OAAO,CAAE,CADE,CAEXC,KAAK,CAAE,CAFI,CAGXF,KAAK,CAAE,CAHI,CAIXF,GAAG,CAAE,CAJM,CAKXS,QAAQ,CAAE,CALC,CAMXC,QAAQ,CAAE,CANC,CAAb,CAQA,GAAI,MAAI,CAACvE,KAAL,CAAWK,YAAX,CAAwBmE,MAA5B,CAAmC,CACjC,MAAI,CAACxE,KAAL,CAAWK,YAAX,CAAwBoE,OAAxB,CAAgC,SAACC,CAAD,CAAO,CACrCL,MAAM,CAACC,QAAP,EAAmBI,CAAC,CAACvE,OAArB,CACAkE,MAAM,CAACL,OAAP,EAAkBU,CAAC,CAACC,aAApB,CACAN,MAAM,CAACJ,KAAP,EAAgBS,CAAC,CAACE,WAAlB,CACAP,MAAM,CAACN,KAAP,EAAgBW,CAAC,CAACG,WAAlB,CACAR,MAAM,CAACR,GAAP,EAAca,CAAC,CAACI,SAAhB,CACAT,MAAM,CAACE,QAAP,EAAmBG,CAAC,CAACK,cAArB,CACD,CAPD,EAQD,CACF,MAAOV,CAAAA,MAAP,CACF,CApBC,CAuBF,GAAMW,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtB,GAAIC,CAAAA,KAAK,CAAG,CACVjB,OAAO,CAAE,CADC,CAEVC,KAAK,CAAE,CAFG,CAGVF,KAAK,CAAE,CAHG,CAIVF,GAAG,CAAE,CAJK,CAKVU,QAAQ,CAAE,CALA,CAAZ,CAOA,GAAI,MAAI,CAACvE,KAAL,CAAWK,YAAX,CAAwBmE,MAA5B,CAAmC,CAEjC,MAAI,CAACxE,KAAL,CAAWK,YAAX,CAAwBoE,OAAxB,CAAgC,SAACC,CAAD,CAAO,CACrC;AACAO,KAAK,CAACV,QAAN,CAAiBhB,YAAY,CAAC2B,YAAb,CAA4Bb,MAAM,GAAGE,QAAtD,CACAU,KAAK,CAACjB,OAAN,CAAgBT,YAAY,CAAC4B,YAAb,CAA4Bd,MAAM,GAAGL,OAArD,CACAiB,KAAK,CAAChB,KAAN,CAAcV,YAAY,CAAC6B,UAAb,CAA0Bf,MAAM,GAAGJ,KAAjD,CACAgB,KAAK,CAAClB,KAAN,CAAcR,YAAY,CAAC8B,UAAb,CAA0BhB,MAAM,GAAGN,KAAjD,CACAkB,KAAK,CAACpB,GAAN,CAAYN,YAAY,CAAC+B,QAAb,CAAwBjB,MAAM,GAAGR,GAA7C,CAGD,CATD,EAUD,CAEF,MAAOoB,CAAAA,KAAP,CAEF,CAxBC,CA0BJ,MACF,4BAAK,SAAS,CAAC,cAAf,EACC,yBAAG,SAAS,CAAC,YAAb,mBADD,CAEC,6BAAO,IAAI,CAAC,MAAZ,CAAmB,SAAS,CAAC,MAA7B,CAAoC,KAAK,CAAE,KAAKjF,KAAL,CAAWM,IAAtD,CAA4D,QAAQ,CAAE,KAAKqC,gBAA3E,CAA6F,IAAI,CAAC,MAAlG,EAFD,CAIE,8BAAQ,SAAS,CAAC,YAAlB,CAA8B,OAAO,CAAE,KAAKlB,eAA5C,WAJF,CAME,KAAKzB,KAAL,CAAWC,QAAX,CAAuB,oBAAC,eAAD,EAAiB,MAAM,CAAE,KAAKD,KAAL,CAAWE,WAApC,CAAiD,WAAW,CAAE,KAAKoB,cAAnE,CAAmF,YAAY,CAAE,KAAKiB,YAAtG,CAAoH,gBAAgB,CAAE,KAAKK,gBAA3I,EAAvB,CAAyL,IAN3L,CAQA,iCACI,iCACC,0BAAI,SAAS,CAAC,KAAd,EACG,0BAAI,KAAK,CAAC,KAAV,CAAgB,KAAK,CAAE,CAAC2C,MAAM,CAAE,MAAT,CAAvB,EADH,CAEG,0BAAI,KAAK,CAAC,KAAV,YAFH,CAGG,0BAAI,SAAS,CAAC,SAAd,CAAyB,KAAK,CAAC,KAA/B,qBAHH,CAKG,0BAAI,KAAK,CAAC,KAAV,CAAgB,SAAS,CAAC,KAA1B,cALH,CAMG,0BAAI,KAAK,CAAC,KAAV,CAAgB,SAAS,CAAC,OAA1B,gBANH,CAOG,0BAAI,KAAK,CAAC,KAAV,CAAgB,SAAS,CAAC,SAA1B,kBAPH,CAQG,0BAAI,KAAK,CAAC,KAAV,CAAgB,SAAS,CAAC,OAA1B,gBARH,CASG,0BAAI,KAAK,CAAC,IAAV,CAAe,KAAK,CAAE,CAACA,MAAM,CAAE,MAAT,CAAtB,EATH,CADD,CADJ,CAeI,iCAEA,0BAAI,SAAS,CAAC,KAAd,EACE,0BAAI,KAAK,CAAC,IAAV,CAAe,SAAS,CAAC,WAAzB,cADF,CAFA,CAKG/B,SAAS,EALZ,CAQA,0BAAI,SAAS,CAAC,KAAd,EACE,0BAAI,KAAK,CAAC,KAAV,CAAgB,SAAS,CAAC,OAA1B,UADF,CARA,CAWEU,KAAK,EAXP,CAYA,0BAAI,SAAS,CAAC,KAAd,EACE,0BAAI,KAAK,CAAC,KAAV,CAAgB,SAAS,CAAC,QAA1B,WADF,CAZA,CAeEC,MAAM,EAfR,CAiBA,0BAAI,SAAS,CAAC,KAAd,EACE,0BAAI,KAAK,CAAC,KAAV,CAAgB,SAAS,CAAC,OAA1B,UADF,CAjBA,CAoBGC,MAAM,EApBT,CAqBC,0BAAI,SAAS,CAAC,KAAd,EArBD,CAwBA,0BAAI,SAAS,CAAC,KAAd,EAEE,sCAFF,CAMI,8BAAMC,MAAM,GAAGC,QAAf,CANJ,CAOI,0BAAI,SAAS,CAAC,SAAd,EAA0BD,MAAM,GAAGE,QAAnC,CAPJ,CAQI,0BAAI,SAAS,CAAC,KAAd,EAAsBF,MAAM,GAAGR,GAAV,CAAeC,OAAf,CAAuB,CAAvB,CAArB,CARJ,CASI,0BAAI,SAAS,CAAC,OAAd,EAAwBO,MAAM,GAAGN,KAAV,CAAiBD,OAAjB,CAAyB,CAAzB,CAAvB,CATJ,CAUI,0BAAI,SAAS,CAAC,SAAd,EAA0BO,MAAM,GAAGL,OAAV,CAAmBF,OAAnB,CAA2B,CAA3B,CAAzB,CAVJ,CAWI,0BAAI,SAAS,CAAC,OAAd,EAAwBO,MAAM,GAAGJ,KAAV,CAAiBH,OAAjB,CAAyB,CAAzB,CAAvB,CAXJ,CAxBA,CAsCA,0BAAI,SAAS,CAAC,KAAd,EACE,kDADF,CAEE,8BAFF,CAGE,0BAAI,SAAS,CAAC,SAAd,EAAyBP,YAAY,CAAC2B,YAAtC,CAHF,CAIE,0BAAI,SAAS,CAAC,KAAd,EAAqB3B,YAAY,CAAC+B,QAAlC,CAJF,CAKE,0BAAI,SAAS,CAAC,OAAd,EAAuB/B,YAAY,CAAC8B,UAApC,CALF,CAME,0BAAI,SAAS,CAAC,SAAd,EAAyB9B,YAAY,CAAC4B,YAAtC,CANF,CAOE,0BAAI,SAAS,CAAC,OAAd,EAAuB5B,YAAY,CAAC6B,UAApC,CAPF,CAtCA,CA+CA,0BAAI,SAAS,CAAC,KAAd,EACA,2CADA,CAGA,8BAHA,CAIIJ,SAAS,GAAGT,QAAZ,CAAuB,CAAvB,CAA2B,0BAAI,SAAS,CAAC,SAAd,EAAyBS,SAAS,GAAGT,QAArC,CAA3B,CAAiF,0BAAI,SAAS,CAAC,SAAd,EAAyBS,SAAS,GAAGT,QAArC,CAJrF,CAKGS,SAAS,GAAGnB,GAAZ,CAAkB,CAAlB,CAAuB,0BAAI,SAAS,CAAC,UAAd,EAA2BmB,SAAS,GAAGnB,GAAb,CAAkBC,OAAlB,CAA0B,CAA1B,CAA1B,CAAvB,CAAsF,0BAAI,SAAS,CAAC,KAAd,EAAsBkB,SAAS,GAAGnB,GAAb,CAAkBC,OAAlB,CAA0B,CAA1B,CAArB,CALzF,CAMGkB,SAAS,GAAGjB,KAAZ,CAAoB,CAApB,CAAwB,0BAAI,SAAS,CAAC,SAAd,EAA0BiB,SAAS,GAAGjB,KAAb,CAAoBD,OAApB,CAA4B,CAA5B,CAAzB,CAAxB,CAAwF,0BAAI,SAAS,CAAC,OAAd,EAAwBkB,SAAS,GAAGjB,KAAb,CAAoBD,OAApB,CAA4B,CAA5B,CAAvB,CAN3F,CAOGkB,SAAS,GAAGhB,OAAZ,CAAsB,CAAtB,CAA2B,0BAAI,SAAS,CAAC,SAAd,EAA0BgB,SAAS,GAAGhB,OAAb,CAAsBF,OAAtB,CAA8B,CAA9B,CAAzB,CAA3B,CAA6F,0BAAI,SAAS,CAAC,SAAd,EAA0BkB,SAAS,GAAGhB,OAAb,CAAsBF,OAAtB,CAA8B,CAA9B,CAAzB,CAPhG,CAQGkB,SAAS,GAAGf,KAAZ,CAAoB,CAApB,CAAyB,0BAAI,SAAS,CAAC,SAAd,EAA0Be,SAAS,GAAGf,KAAb,CAAoBH,OAApB,CAA4B,CAA5B,CAAzB,CAAzB,CAAyF,0BAAI,SAAS,CAAC,OAAd,EAAwBkB,SAAS,GAAGf,KAAb,CAAoBH,OAApB,CAA4B,CAA5B,CAAvB,CAR5F,CA/CA,CAfJ,CARA,CADE,CAsFE,C,yBAtXsBlE,S,EAyXzB,GAAM4F,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAAa,CACxC,MAAO,CACNC,OAAO,CAAE,iBAACC,UAAD,CAAgB,CACvBF,QAAQ,CAAC,CACLG,IAAI,CAAE,UADD,CACaC,OAAO,CAAEF,UADtB,CAAD,CAAR,CAGD,CALK,CAMNG,SAAS,CAAE,oBAAM,CAChBL,QAAQ,CAAC,CACPG,IAAI,CAAE,YADC,CAAD,CAAR,CAGA,CAVK,CAAP,CAYA,CAbA,CAeD,GAAMG,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAC/F,KAAD,CAAW,CACnC,MAAO,CACLuD,YAAY,CAAEvD,KAAK,CAACgG,IADf,CAAP,CAGC,CAJD,CAOA,cAAenG,CAAAA,OAAO,CAACkG,eAAD,CAAkBP,kBAAlB,CAAP,CAA6CzF,WAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport EditDailyIntake from '../Components/EditDailyIntake'\n\nclass DailyIntake extends Component {\n state = {\n   editForm: false, \n   dailyIntake: {},\n   serving: null,\n   mealType: \"\", \n   dailyIntakes: [],\n   date: new Date().toLocaleDateString()\n }\n\n\n\n\nhandleDeleteClick = (e, dailyIntakeItem) => {\n   console.log(dailyIntakeItem)\n   fetch(`https://nutritrack.herokuapp.com/daily_intakes/${dailyIntakeItem.id}`, {\n         method: 'DELETE'\n       }).then(res => {\n         const newArray = this.state.dailyIntakes.filter(dailyIntake =>{\n           return dailyIntake.id !== dailyIntakeItem.id\n          })\n          this.setState({\n           dailyIntakes: newArray\n         })\n       })\n     \n}\n\nhandleEditForm = () =>{\n  this.setState({\n    editForm: false\n  })\n}\n\n\nhandleClick = (e, dailyIntakeItem) => {\n//  console.log(dailyIntakeItem)\n this.setState({\n   editForm: !this.state.editForm,\n   dailyIntake: dailyIntakeItem,\n   serving: dailyIntakeItem.serving,\n   mealType: dailyIntakeItem.meal_type\n })\n}\n\nhandleDateClick = () =>{\n  this.setState({\n    date: new Date().toLocaleDateString() \n  })\n  const date = new Date().toLocaleDateString()\n  this.fetchDailyIntake()\n  this.props.history.push(`/daily-intake/${date}`)\n}\n\ncomponentDidMount(){\n  this.fetchDailyIntake()\n  const date = this.props.match.params.date \n  if ( date ) {\n    this.setState({\n      date: date\n    })\n  } else {\n    this.setState({\n      date: new Date().toLocaleDateString()\n    })\n  }\n  // debugger\n}\n\nfetchDailyIntake =  () => {\n  const config = {\n    method: 'GET',\n    headers: {\n      Authorization: localStorage.token\n    }\n  }\n  fetch('https://nutritrack.herokuapp.com/daily_intakes', config)\n  .then(res => res.json())\n  .then(dailyIntakeItems => {\n    // console.log(dailyIntakeItems)\n    \n   const newIntakes = dailyIntakeItems.filter(dailyIntake => {\n     if (this.state.date === new Date().toLocaleDateString()) {\n       return dailyIntake.changed_date === this.state.date\n      } else {\n        return  dailyIntake.date === this.state.date\n      }\n   })\n        this.setState({\n          dailyIntakes: newIntakes\n        })\n \n  })\n}\n\nhandleChange = (e) =>{\n  // console.log(e.target.value)\n  this.setState({\n    [e.target.name]: e.target.value\n  })\n}\n\nhandleDateChange = (e) => {\n  console.log(e.target.value)\n  this.setState({\n    [e.target.name]: e.target.value\n  })\n  this.fetchDailyIntake()\n \n  this.props.history.push(`/daily-intake/${e.target.value}`)\n}\n\nhandleEditSubmit = (e) => {\n  e.preventDefault()\n  // console.log('submit')\n  fetch(`https://nutritrack.herokuapp.com/daily_intakes/${this.state.dailyIntake.id}`, {\n    method: 'PATCH', \n    headers: {\n      'Content-Type': 'application/json',\n      'Accept':'application/json'\n    },\n    body: JSON.stringify({ \n     meal_type: this.state.mealType,\n     serving: this.state.serving\n    })\n  })\n  .then(res => res.json())\n  .then(intake => {\n    const newItem =  this.state.dailyIntakes.map(intakeItem => {\n        return intakeItem.id === intake.id ? intake : intakeItem\n    })\n    // this.props.setUser(user) \n    this.setState({\n      dailyIntake:  intake,\n      dailyIntakes:  newItem,\n      editForm: false\n    })\n  })\n} \n\n render() {\n\n  \n  console.log(this.state.date)\n \n\n   const  {current_user} =this.props\n\n    const breakfast = () => {\n        if(this.state.dailyIntakes) {\n            let arr = this.state.dailyIntakes.filter(dailyIntake => {\n                return dailyIntake.meal_type === 'breakfast'\n            }) \n            return arr.map(dailyIntake => {\n                return  <tr key={dailyIntake.food.id} >\n                  <td> {dailyIntake.food.name } {dailyIntake.changed_date} <button className=\"edit-intake\" onClick={(e) => this.handleClick(e, dailyIntake)}> Edit </button></td> \n                  <td>{dailyIntake.serving} ✖️  ({dailyIntake.food.serving_size} g)</td>\n                  <td className=\"calorie\"> {dailyIntake.food.calorie * dailyIntake.serving}</td> \n                  <td className=\"fat\"> {(dailyIntake.food.fat * dailyIntake.serving).toFixed(2)} </td> \n                  <td className=\"carbs\"> {(dailyIntake.food.carbs * dailyIntake.serving).toFixed(2)}</td> \n                  <td className=\"protein\"> {(dailyIntake.food.protein * dailyIntake.serving).toFixed(2)}</td> \n                  <td className=\"sugar\"> {(dailyIntake.food.sugar * dailyIntake.serving).toFixed(2)}</td>\n                  <td className=\"delete\" onClick={(e) => this.handleDeleteClick(e, dailyIntake)}> <span> ❌ </span> </td>\n                  </tr>\n             })\n           }\n           return \"There is no food logged in..\"\n        }\n\n    const lunch = () => {\n        if(this.state.dailyIntakes) {\n            let arr = this.state.dailyIntakes.filter(dailyIntake => {\n                return dailyIntake.meal_type === 'lunch'\n            }) \n            return arr.map(dailyIntake => {\n                return  <tr key={dailyIntake.food.id}>\n                  <td>  {dailyIntake.food.name } {dailyIntake.changed_date} <button className=\"edit-intake\" onClick={(e) => this.handleClick(e, dailyIntake)}> Edit </button></td> \n                  <td>{dailyIntake.serving} ✖️  ({dailyIntake.food.serving_size} g)</td>\n                  <td className=\"calorie\"> {dailyIntake.food.calorie * dailyIntake.serving}</td> \n                  <td className=\"fat\"> {(dailyIntake.food.fat * dailyIntake.serving).toFixed(2)} </td> \n                  <td className=\"carbs\"> {(dailyIntake.food.carbs * dailyIntake.serving).toFixed(2)}</td> \n                  <td className=\"protein\"> {(dailyIntake.food.protein * dailyIntake.serving).toFixed(2)}</td> \n                  <td className=\"sugar\"> {(dailyIntake.food.sugar * dailyIntake.serving).toFixed(2)}</td>\n                  <td className=\"delete\" onClick={(e) => this.handleDeleteClick(e, dailyIntake)}> <span> ❌ </span> </td>\n                </tr>\n             })\n           }\n           return \"There is no food logged in..\"\n        }\n\n    const dinner = () => {\n        if(this.state.dailyIntakes )  {\n            let arr = this.state.dailyIntakes.filter(dailyIntake => {\n                return dailyIntake.meal_type === 'dinner'\n\n            }) \n            return arr.map(dailyIntake => {\n                return  <tr key={dailyIntake.food.id} >\n                  <td> {dailyIntake.food.name } {dailyIntake.changed_date}<button className=\"edit-intake\" onClick={(e) => this.handleClick(e, dailyIntake)}> Edit </button> </td>\n            <td>{dailyIntake.serving} ✖️  ({dailyIntake.food.serving_size} g)</td>\n                  <td className=\"calorie\"> {dailyIntake.food.calorie * dailyIntake.serving}</td> \n                  <td className=\"fat\"> {(dailyIntake.food.fat * dailyIntake.serving).toFixed(2)} </td> \n                  <td className=\"carbs\"> {(dailyIntake.food.carbs * dailyIntake.serving).toFixed(2)}</td> \n                  <td className=\"protein\"> {(dailyIntake.food.protein * dailyIntake.serving).toFixed(2)}</td> \n                  <td className=\"sugar\"> {(dailyIntake.food.sugar * dailyIntake.serving).toFixed(2)}</td>\n                  <td  onClick={(e) => this.handleDeleteClick(e, dailyIntake)}> <span> ❌ </span> </td>\n                \n                </tr>\n              \n             })\n           }\n           return \"There is no food logged in..\"\n        }\n\n    const snacks = () => {\n        if(this.state.dailyIntakes) {\n            let arr = this.state.dailyIntakes.filter(dailyIntake => {\n                return dailyIntake.meal_type === 'snack'\n            }) \n           \n            return arr.map(dailyIntake => {\n              // debugger\n                return  <tr key={dailyIntake.food.id} >\n                  \n                <td> {dailyIntake.food.name } {dailyIntake.changed_date} <button className=\"edit-intake\" onClick={(e) => this.handleClick(e, dailyIntake)}> Edit </button></td> \n                <td> {dailyIntake.serving} ✖️ ({dailyIntake.food.serving_size} g)</td>\n                <td className=\"calorie\"> {dailyIntake.food.calorie * dailyIntake.serving}</td> \n                <td className=\"fat\"> {(dailyIntake.food.fat * dailyIntake.serving).toFixed(2)} </td> \n                <td className=\"carbs\"> {(dailyIntake.food.carbs * dailyIntake.serving).toFixed(2)}</td> \n                <td className=\"protein\"> {(dailyIntake.food.protein * dailyIntake.serving).toFixed(2)}</td> \n                <td className=\"sugar\">  {(dailyIntake.food.sugar * dailyIntake.serving).toFixed(2)}</td>\n               \n                <td className=\"deleteIntake\" width=\"10%\" onClick={(e) => this.handleDeleteClick(e, dailyIntake)}> <span> ❌ </span> </td>\n                </tr>\n             })\n           }\n           return \"There is no food logged in..\"\n        }\n\n        const totals = () => {\n          let totals = {\n            protein: 0,\n            sugar: 0,\n            carbs: 0,\n            fat: 0,\n            servings: 0,\n            calories: 0\n          }\n          if (this.state.dailyIntakes.length){\n            this.state.dailyIntakes.forEach((i) => {\n              totals.servings += i.serving\n              totals.protein += i.total_protein\n              totals.sugar += i.total_sugar \n              totals.carbs += i.total_carbs\n              totals.fat += i.total_fat\n              totals.calories += i.total_calories\n            })\n          }\n         return totals\n      }      \n      \n      \n      const remaining = () => {\n        let total = {\n          protein: 0,\n          sugar: 0,\n          carbs: 0,\n          fat: 0,\n          calories: 0\n        }\n        if (this.state.dailyIntakes.length){\n             \n          this.state.dailyIntakes.forEach((i) => {\n            // debugger\n            total.calories = current_user.goal_calorie - totals().calories\n            total.protein = current_user.goal_protein - totals().protein\n            total.sugar = current_user.goal_sugar - totals().sugar\n            total.carbs = current_user.goal_carbs - totals().carbs\n            total.fat = current_user.goal_fat - totals().fat\n             \n    \n          })\n        }\n     \n       return total\n       \n    }\n    \n  return(\n<div className=\"daily-intake\">\n <p className='select-day'> Select a date</p> \n <input type=\"date\" className=\"date\" value={this.state.date} onChange={this.handleDateChange} name=\"date\" />\n  \n  <button className=\"date today\"onClick={this.handleDateClick}>Today </button>\n\n{ this.state.editForm ?  <EditDailyIntake intake={this.state.dailyIntake} handleClick={this.handleEditForm }handleChange={this.handleChange} handleEditSubmit={this.handleEditSubmit} /> : null }\n\n<table >\n    <thead>\n     <tr className=\"row\">\n        <th width=\"20%\" style={{border: 'none'}}></th> \n        <th width=\"10%\">Serving</th>\n        <th className=\"calorie\"  width=\"10%\">Calorie ( kcal )</th> \n       \n        <th width=\"10%\" className=\"fat\">Fat ( g )</th>\n        <th width=\"10%\" className=\"carbs\">Carbs ( g )</th>\n        <th width=\"10%\" className=\"protein\">Protein ( g )</th>\n        <th width=\"10%\" className=\"sugar\">Sugar ( g )</th>\n        <th width=\"1%\" style={{border: 'none'}}></th>\n       \n     </tr>\n    </thead>\n    <tbody>\n        \n    <tr className=\"row\">\n      <th width=\"0%\" className=\"breakfast\">Breakfast</th>\n    </tr> \n      {breakfast() }\n      \n      \n    <tr className=\"row\">\n      <th width=\"10%\" className=\"lunch\">Lunch</th> \n    </tr>\n     {lunch()}\n    <tr className=\"row\">\n      <th width=\"10%\" className=\"dinner\">Dinner</th> \n    </tr>\n     {dinner()}\n  \n    <tr className=\"row\">\n      <th width=\"10%\" className=\"snack\" >Snack</th> \n    </tr>\n      {snacks()} \n     <tr className=\"row\">\n       </tr> \n    \n    <tr className=\"row\">\n      \n      <th>\n        Total\n      </th>\n\n        <td>{(totals().servings)}</td>\n        <td className=\"calorie\">{(totals().calories)}</td>\n        <td className=\"fat\">{(totals().fat).toFixed(2)}</td>\n        <td className=\"carbs\">{(totals().carbs).toFixed(2)}</td>\n        <td className=\"protein\">{(totals().protein).toFixed(2)}</td>\n        <td className=\"sugar\">{(totals().sugar).toFixed(2)}</td>\n        \n    </tr>\n    <tr className=\"row\">\n      <th>Your daily goal  </th>\n      <td></td>\n      <td className=\"calorie\">{current_user.goal_calorie}</td>\n      <td className=\"fat\">{current_user.goal_fat}</td>\n      <td className=\"carbs\">{current_user.goal_carbs}</td>\n      <td className=\"protein\">{current_user.goal_protein}</td>\n      <td className=\"sugar\">{current_user.goal_sugar}</td>\n    </tr>\n    <tr className=\"row\">\n    <th>Remaining </th>\n   \n    <td></td>\n      { remaining().calories < 0 ? <td className=\"exeeded\">{remaining().calories}</td> : <td className=\"calorie\">{remaining().calories}</td>}\n      {remaining().fat < 0 ?  <td className=\"exeeded \">{(remaining().fat).toFixed(2)}</td> : <td className=\"fat\">{(remaining().fat).toFixed(2)}</td>}\n      {remaining().carbs < 0 ? <td className=\"exeeded\">{(remaining().carbs).toFixed(2)}</td> : <td className=\"carbs\">{(remaining().carbs).toFixed(2)}</td>}\n      {remaining().protein < 0 ?  <td className=\"exeeded\">{(remaining().protein).toFixed(2)}</td> : <td className=\"protein\">{(remaining().protein).toFixed(2)}</td>}\n      {remaining().sugar < 0 ?  <td className=\"exeeded\">{(remaining().sugar).toFixed(2)}</td> : <td className=\"sugar\">{(remaining().sugar).toFixed(2)}</td>}\n    \n    </tr>\n    </tbody>\n </table>\n </div>\n    )\n   }\n }\n\n const mapDispatchToProps = (dispatch) =>{\n return {\n  setUser: (userObject) => {\n    dispatch({\n        type: 'SET_USER', payload: userObject\n      })\n  }, \n  clearUser: () => {\n   dispatch({\n     type: 'CLEAR_USER'\n   })\n  }\n}\n}\n\nconst mapStateToProps = (state) => {\nreturn {\n  current_user: state.user\n}\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DailyIntake)"]},"metadata":{},"sourceType":"module"}