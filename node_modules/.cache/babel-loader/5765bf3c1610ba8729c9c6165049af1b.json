{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Desktop/Projects/NutriTrack-App(Mod-5)/Frontend-NutriTrack/src/Pages/AddFood.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass AddFood extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchValue: \"\",\n      foodView: false,\n      food: {}\n    };\n\n    this.handleChange = e => {\n      console.log(e.target.value);\n      this.setState({\n        searchValue: e.target.value\n      });\n    };\n\n    this.handleClick = () => {\n      console.log('click');\n      this.setState({\n        foodView: !this.state.foodView\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3000/foods').then(res => res.json()).then(foodsData => {\n      // console.log(foodsData)\n      this.props.getFoods(foodsData);\n    });\n  }\n\n  render() {\n    console.log(this.state.foodView); // console.log(this.state.searchValue)\n    // console.log(this.props.foods)\n\n    const searchedFoods = this.props.foods.filter(food => {\n      //    debugger\n      if (this.state.searchValue !== \"\") {\n        return food.name.toLowerCase().includes(this.state.searchValue.toLowerCase());\n      }\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Add food\", React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Search\"), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, searchedFoods.map(food => {\n      return React.createElement(\"li\", {\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, food.name);\n    })), this.state.foodView ? React.createElement(React.Fragment, null, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })) : React.createElement(React.Fragment, null));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getFoods: foodObject => {\n      dispatch({\n        type: 'GET_FOODS',\n        payload: foodObject\n      });\n    }\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    foods: state.foods\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddFood);","map":{"version":3,"sources":["/Users/flatironschool/Desktop/Projects/NutriTrack-App(Mod-5)/Frontend-NutriTrack/src/Pages/AddFood.js"],"names":["React","Component","connect","AddFood","state","searchValue","foodView","food","handleChange","e","console","log","target","value","setState","handleClick","componentDidMount","fetch","then","res","json","foodsData","props","getFoods","render","searchedFoods","foods","filter","name","toLowerCase","includes","map","mapDispatchToProps","dispatch","foodObject","type","payload","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nclass AddFood extends Component {\n state = {\n     searchValue:\"\",\n     foodView: false,\n     food: {}\n }\n\n handleChange = (e) => {\n     console.log(e.target.value)\n     this.setState({\n         searchValue: e.target.value\n         \n     })\n\n }\n\n handleClick = () => {\n     console.log('click')\n     this.setState({\n         foodView: !this.state.foodView\n     })\n }\n\n componentDidMount(){\n    fetch('http://localhost:3000/foods')\n    .then(res=>res.json())\n    .then(foodsData => {\n        // console.log(foodsData)\n        this.props.getFoods(foodsData)\n    })\n}\n render() {\n\nconsole.log(this.state.foodView)\n// console.log(this.state.searchValue)\n// console.log(this.props.foods)\n\n   const searchedFoods = this.props.foods.filter(food => {\n    //    debugger\n         if (this.state.searchValue !== \"\"){\n            return food.name.toLowerCase().includes(this.state.searchValue.toLowerCase())\n         } \n   })\n  return(\n   <div>\n\n       Add food \n\n       <form>\n           <label>\n               Search\n           </label>\n          <input type=\"text\" onChange={this.handleChange}/>\n\n       </form>\n\n       <ul>\n\n\n            {\n                searchedFoods.map(food => {\n                    return <li onClick={this.handleClick}>\n                        {food.name}\n                    </li>\n                })\n            }\n            \n       </ul>\n\n       {\n           this.state.foodView ? \n           <>\n            <p></p>\n           </> : \n           <>\n           </>\n       }\n\n\n   </div>\n    )\n   }\n }\n\n const mapDispatchToProps = (dispatch) =>{\n    return {\n      getFoods: (foodObject) => {\n        dispatch({\n            type: 'GET_FOODS', payload: foodObject\n          })\n      }\n    }\n  }\n  \n  const mapStateToProps = (state) => {\n    return {\n     foods: state.foods\n    }\n  }\n  \n\n  export default connect(mapStateToProps, mapDispatchToProps) (AddFood)"]},"metadata":{},"sourceType":"module"}